{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Jackeyt Wiki Pages \u672cWiKi\u76ee\u5f55\u5982\u4e0b\uff1a ARM Linux\u9a71\u52a8\u5165\u95e8 \u9a71\u52a8\u7b2c\u4e00\u5929---\u9a71\u52a8\u57fa\u7840 \u9a71\u52a8\u7b2c\u4e8c\u5929---\u4e2d\u65ad\u4e0eI/O \u9a71\u52a8\u7b2c\u4e09\u5929---\u603b\u7ebf \u4e09\u79cd\u603b\u7ebf\u7684\u6a2a\u5411\u5bf9\u6bd4\u8868 ARM Linux\u8bbe\u5907\u6811 \u624b\u628a\u624b\u6559\u4f60\u4ece\u5355\u7247\u673a\u79fb\u690d\u9a71\u52a8\u5230ARM Linux\u4e0a \u642d\u5efa\u6700\u8212\u9002\u7684ARM Linux \u5e94\u7528\u5f00\u53d1\u73af\u5883 [\u53f2\u4e0a\u6700\u8be6\u7ec6]VS Code\u642d\u5efaARM Linux Makefile\u5de5\u7a0bIDE\uff08C/C++\uff09 \u642d\u5efa\u6700\u8212\u9002\u7684ARM Linux \u5185\u6838\u5f00\u53d1\u73af\u5883 [\u9996\u53d1][\u7eafWIN\u73af\u5883][\u53f2\u4e0a\u6700\u8be6\u7ec6]Win10\u4e0bVSCode\u642d\u5efaLinux Kernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883 [\u9996\u53d1][\u7eafUbuntu][\u53f2\u4e0a\u6700\u8be6\u7ec6]Ubuntu\u4e0bVSCode\u642d\u5efaLinux Kernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883 LeezPi-RK3399\u5f00\u53d1\u677f\u8bd5\u7528 LeezPi-RK3399_\u5f00\u7bb1 LeezPi-RK3399_SDK\u4f7f\u7528\u8bf4\u660e LeezPi-RK3399_Android9\u7f16\u8bd1\u8bf4\u660e AIOT RK1808 AI\u52a0\u901f\u8ba1\u7b97\u68d2\u8bd5\u7528 0.\u5f00\u7bb1 1.[\u9996\u53d1][\u6700\u8be6\u7ec6]\u642d\u5efaWindows IDE\u5f00\u53d1\u73af\u5883 2.mobilenet_v1\u6d4b\u8bd5 3.mobilenet_v1\u6539\u8fdb 4.yolo_v3\u6a21\u578b\u6d4b\u8bd5 5.yolo_v3\u6a21\u578b\u6539\u8fdb \u6350\u52a9 \u5982\u679c\u60a8\u89c9\u5f97\u4f5c\u8005\u7684\u6587\u7ae0\u5199\u5f97\u597d\u6216\u5bf9\u60a8\u6709\u5e2e\u52a9\u7684\u8bdd\uff0c\u53ef\u4ee5\u626b\u4e00\u626b\u652f\u6301\u4f5c\u8005\u4e00\u676f\u5496\u5561 \u652f\u4ed8\u5b9d \u5fae\u4fe1 \u611f\u8c22 \u672c\u7f51\u5740\u4f7f\u7528 mkdocs \u6784\u5efa\uff0c\u8be6\u60c5\u8bf7\u53c2\u8003 mkdocs.org .","title":"\u4ecb\u7ecd"},{"location":"#welcome-to-jackeyt-wiki-pages","text":"","title":"Welcome to Jackeyt Wiki Pages"},{"location":"#wiki","text":"","title":"\u672cWiKi\u76ee\u5f55\u5982\u4e0b\uff1a"},{"location":"#arm-linux","text":"\u9a71\u52a8\u7b2c\u4e00\u5929---\u9a71\u52a8\u57fa\u7840 \u9a71\u52a8\u7b2c\u4e8c\u5929---\u4e2d\u65ad\u4e0eI/O \u9a71\u52a8\u7b2c\u4e09\u5929---\u603b\u7ebf \u4e09\u79cd\u603b\u7ebf\u7684\u6a2a\u5411\u5bf9\u6bd4\u8868 ARM Linux\u8bbe\u5907\u6811 \u624b\u628a\u624b\u6559\u4f60\u4ece\u5355\u7247\u673a\u79fb\u690d\u9a71\u52a8\u5230ARM Linux\u4e0a","title":"ARM Linux\u9a71\u52a8\u5165\u95e8"},{"location":"#arm-linux_1","text":"[\u53f2\u4e0a\u6700\u8be6\u7ec6]VS Code\u642d\u5efaARM Linux Makefile\u5de5\u7a0bIDE\uff08C/C++\uff09","title":"\u642d\u5efa\u6700\u8212\u9002\u7684ARM Linux \u5e94\u7528\u5f00\u53d1\u73af\u5883"},{"location":"#arm-linux_2","text":"[\u9996\u53d1][\u7eafWIN\u73af\u5883][\u53f2\u4e0a\u6700\u8be6\u7ec6]Win10\u4e0bVSCode\u642d\u5efaLinux Kernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883 [\u9996\u53d1][\u7eafUbuntu][\u53f2\u4e0a\u6700\u8be6\u7ec6]Ubuntu\u4e0bVSCode\u642d\u5efaLinux Kernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883","title":"\u642d\u5efa\u6700\u8212\u9002\u7684ARM Linux \u5185\u6838\u5f00\u53d1\u73af\u5883"},{"location":"#leezpi-rk3399","text":"LeezPi-RK3399_\u5f00\u7bb1 LeezPi-RK3399_SDK\u4f7f\u7528\u8bf4\u660e LeezPi-RK3399_Android9\u7f16\u8bd1\u8bf4\u660e","title":"LeezPi-RK3399\u5f00\u53d1\u677f\u8bd5\u7528"},{"location":"#aiot","text":"","title":"AIOT"},{"location":"#rk1808-ai","text":"0.\u5f00\u7bb1 1.[\u9996\u53d1][\u6700\u8be6\u7ec6]\u642d\u5efaWindows IDE\u5f00\u53d1\u73af\u5883 2.mobilenet_v1\u6d4b\u8bd5 3.mobilenet_v1\u6539\u8fdb 4.yolo_v3\u6a21\u578b\u6d4b\u8bd5 5.yolo_v3\u6a21\u578b\u6539\u8fdb","title":"RK1808 AI\u52a0\u901f\u8ba1\u7b97\u68d2\u8bd5\u7528"},{"location":"#_1","text":"","title":"\u6350\u52a9"},{"location":"#_2","text":"\u652f\u4ed8\u5b9d \u5fae\u4fe1","title":"\u5982\u679c\u60a8\u89c9\u5f97\u4f5c\u8005\u7684\u6587\u7ae0\u5199\u5f97\u597d\u6216\u5bf9\u60a8\u6709\u5e2e\u52a9\u7684\u8bdd\uff0c\u53ef\u4ee5\u626b\u4e00\u626b\u652f\u6301\u4f5c\u8005\u4e00\u676f\u5496\u5561"},{"location":"#_3","text":"\u672c\u7f51\u5740\u4f7f\u7528 mkdocs \u6784\u5efa\uff0c\u8be6\u60c5\u8bf7\u53c2\u8003 mkdocs.org .","title":"\u611f\u8c22"},{"location":"ARMLinux\u8bbe\u5907\u6811/","text":"1. Linux\u8bbe\u5907\u6811\u7684\u8d77\u6e90 2. Linux\u8bbe\u5907\u6811\u7684\u5e38\u89c1\u6982\u5ff5 2.1\u5feb\u901f\u7f16\u8bd1\u8bbe\u5907\u6811---DTC (device tree compiler) 2.2 Open Firmware Device Tree \u5f00\u53d1\u56fa\u4ef6\u8bbe\u5907\u6811 3 \u8bbe\u5907\u6811\u7684\u8bed\u6cd5 address-cells\u548c#address-siz\u5c5e\u6027 3.1 \u8282\u70b9node 3.2 \u5c5e\u6027property 3.2.1 \u5e38\u89c1\u5c5e\u6027--compatible\u5c5e\u6027 3.2.2 \u5e38\u89c1\u5c5e\u6027--#address-cells\u548c#size-cells address-cells = <1> \u8868\u793aaddress\u5b57\u6bb5\u7684\u957f\u5ea6\u7684\u4e3a1 size-cells = <1>; \u8868\u793alength\u5b57\u6bb5\u7684\u957f\u5ea6\u4e3a1 address-cells = <1>; \u57fa\u5730\u5740\u3001\u7247\u9009\u53f7\u7b49\u7edd\u5bf9\u8d77\u59cb\u5730\u5740\u6240\u5360\u5b57\u957f\uff0832\u4f4d\uff09 size-cells = <1>; \u957f\u5ea6\u6240\u5360\u5b57\u957f\uff0832\u4f4d\uff09 address-cells \u8bbe\u7f6e\u4e3a 1\uff0c#size-cells \u8bbe\u7f6e\u4e3a 0\u3002\u8fd9\u610f\u5473\u7740\u5b50\u8282\u70b9\u7684 reg \u503c\u662f\u4e00\u4e2a\u5355\u4e00\u7684 uint32\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e0d\u5305\u542b\u5927\u5c0f\u5b57\u6bb5\u7684\u5730\u5740\uff0c\u4e3a\u8fd9\u4e24\u4e2a cpu \u5206\u914d\u7684\u5730\u5740\u662f 0 \u548c 1\u3002cpu \u8282\u70b9\u7684 #size-cells \u4e3a 0 \u662f\u56e0\u4e3a\u53ea\u4e3a\u6bcf\u4e2a cpu \u5206\u914d\u4e00\u4e2a\u5355\u72ec\u7684\u5730\u5740\u3002 3.2.3 \u5e38\u89c1\u5c5e\u6027--reg\u5c5e\u6027 3.2.4 \u5e38\u89c1\u5c5e\u6027--\u4e2d\u65ad\u4fe1\u606f interrupt-cells - \u8fd9\u662f\u4e00\u4e2a\u4e2d\u65ad\u63a7\u5236\u5668\u8282\u70b9\u7684\u5c5e\u6027\u3002\u5b83\u58f0\u660e\u4e86\u8be5\u4e2d\u65ad\u63a7\u5236\u5668\u7684\u4e2d\u65ad\u6307\u793a\u7b26\u4e2d cell \u7684\u4e2a\u6570\uff08\u7c7b\u4f3c\u4e8e #address-cells \u548c #size-cells\uff09 4 \u7ec3\u4e60\u65f6\u95f4 \u53c2\u8003\u7b54\u6848 5 \u5e38\u7528OF API 6 \u901a\u8fc7OF API\u67e5\u627e\u76f8\u5e94\u7684\u8282\u70b9\u3001\u5c5e\u6027 6.1 \u67e5\u627e\u5230\u76f8\u5173\u7684\u8bbe\u5907\u6811\u8282\u70b9 6.2 \u4ece\u67e5\u627e\u5230\u7684\u8282\u70b9\u91cc\u9762\u5206\u6790\u8be5\u8282\u70b9\u7684\u5c5e\u6027 6.2.1 \u67e5\u627ecompatible\u5c5e\u6027 6.2.2 \u67e5\u627ecompatible\u5c5e\u6027\u7684\u53e6\u4e00\u79cd\u65b9\u6cd5 6.2 \u4ece\u67e5\u627e\u5230\u7684\u8282\u70b9\u91cc\u9762\u5206\u6790\u8be5\u8282\u70b9\u7684\u6570\u7ec4\u5c5e\u6027 6.2 \u4ece\u67e5\u627e\u5230\u7684\u8282\u70b9\u91cc\u9762\u5206\u6790\u8be5\u8282\u70b9\u7684\u5b57\u7b26\u4e32\u6570\u7ec4\u5c5e\u6027 6.3 \u4ece\u67e5\u627e\u5230\u7684\u8282\u70b9\u91cc\u9762\u5206\u6790\u8be5\u8282\u70b9\u7684\u4e2d\u65ad\u5c5e\u6027 7 platform\u9a71\u52a8\u7684\u53d8\u66f4 \u53c2\u8003\u94fe\u63a5\uff1a 1. Linux\u8bbe\u5907\u6811\u7684\u8d77\u6e90 \u5728Linux 2.6\u4e2d\uff0carch/arm/plat-xxx\u548carch/arm/mach-xxx\u4e2d\u5145\u65a5\u7740\u5927\u91cf\u7684\u5783\u573e\u4ee3\u7801\uff0c\u76f8\u5f53\u591a\u6570\u7684\u4ee3\u7801\u53ea\u662f\u5728\u63cf\u8ff0\u677f\u7ea7\u7ec6\u8282\uff0c\u800c\u8fd9\u4e9b\u677f\u7ea7\u7ec6\u8282\u5bf9\u4e8e\u5185\u6838\u6765\u8bb2\uff0c\u4e0d\u8fc7\u662f\u5783\u573e\uff0c\u5982\u677f\u4e0a\u7684platform\u8bbe\u5907\u3001resource\u3001i2c_board_info\u3001spi_board_info\u4ee5\u53ca\u5404\u79cd\u786c\u4ef6platform_data\u3002\u5e38\u89c1\u7684s3c2410\u3001s3c6410\u7b49\u677f\u7ea7\u76ee\u5f55\uff0c\u4ee3\u7801\u91cf\u5728\u6570\u4e07\u884c\u3002 Linus Torvalds\u5bf9\u4e8e\u6b64\u79cd\u60c5\u51b5\u5927\u53d1\u96f7\u9706\uff0c\u57282011\u5e74\u7684ARM Linux\u90ae\u4ef6\u5217\u8868\u5ba3\u79f0this whole ARM thing is a f*cking pain in the ass\u201d \u6240\u4ee5Linux\u5f00\u53d1\u793e\u533a\u5c31\u5f00\u59cb\u6574\u6539\uff0c\u8bbe\u5907\u6811\u6700\u65e9\u7528\u4e8ePowerPC\u7b49\u5176\u4ed6\u4f53\u7cfb\u67b6\u6784\uff0cARM\u67b6\u6784\u5f00\u53d1\u793e\u533a\u5c31\u5f00\u59cb\u91c7\u7528\u8bbe\u5907\u6811\u6765\u63cf\u8ff0\u8bbe\u5907\u7684\u4fe1\u606f 2. Linux\u8bbe\u5907\u6811\u7684\u5e38\u89c1\u6982\u5ff5 DT : Device Tree FDT : Flattened DeviceTree OF : Open Firmware DTS : Device Tree Source DTSI : Device Tree Source Include DTB : Device Tree Blob DTC : Device Tree Compiler 2.1\u5feb\u901f\u7f16\u8bd1\u8bbe\u5907\u6811---DTC (device tree compiler) \u5c06.dts\u7f16\u8bd1\u4e3a.dtb\u7684\u5de5\u5177 DTC\u7684\u6e90\u4ee3\u7801\u4f4d\u4e8e\u5185\u6838\u7684scripts/dtc\u76ee\u5f55\uff0c\u5728Linux\u5185\u6838\u4f7f\u80fd\u4e86Device Tree\u7684\u60c5\u51b5\u4e0b\uff0c\u7f16\u8bd1\u5185\u6838\u7684\u65f6\u5019\u4e3b\u673a\u5de5\u5177dtc\u4f1a\u88ab\u7f16\u8bd1\u51fa\u6765 \u5728Linux\u5185\u6838\u7684arch/arm/boot/dts/Makefile\u4e2d\uff0c\u63cf\u8ff0\u4e86\u5f53\u67d0\u79cdSoC\u88ab\u9009\u4e2d\u540e\uff0c\u54ea\u4e9b.dtb\u6587\u4ef6\u4f1a\u88ab\u7f16\u8bd1\u51fa\u6765\uff0c\u5982\u4e0eEXYNOS\u5bf9\u5e94\u7684.dtb\u5305\u62ec\uff1a dtb-$(CONFIG_ARCH_EXYNOS) += exynos4210-origen.dtb \\ exynos4210-smdkv310.dtb \\ exynos4412-origen.dtb \\ \u6211\u4eec\u53ef\u4ee5\u5355\u72ec\u7f16\u8bd1Device Tree\u6587\u4ef6\u3002\u5f53\u6211\u4eec\u5728Linux\u5185\u6838\u4e0b\u8fd0\u884cmake dtbs\u65f6\uff0c\u82e5\u6211\u4eec\u4e4b\u524d\u9009\u62e9\u4e86ARCH_EXYNOS\uff0c\u4e0a\u8ff0.dtb\u90fd\u4f1a\u7531\u5bf9\u5e94\u7684.dts\u7f16\u8bd1\u51fa\u6765 DTC\u9664\u4e86\u53ef\u4ee5\u7f16\u8bd1.dts\u6587\u4ef6\u4ee5\u5916\uff0c\u5176\u5b9e\u4e5f\u53ef\u4ee5\u201c\u53cd\u6c47\u7f16\u201d.dtb\u6587\u4ef6\u4e3a.dts\u6587\u4ef6\uff0c\u5176\u6307\u4ee4\u683c\u5f0f\u4e3a\uff1a ./scripts/dtc/dtc -I dtb -O dts -o xxx.dts arch/arm/boot/dts/xxx.dtb 2.2 Open Firmware Device Tree \u5f00\u53d1\u56fa\u4ef6\u8bbe\u5907\u6811 1\uff0cDevice Tree\u53ef\u4ee5\u63cf\u8ff0\u7684\u4fe1\u606f\u5305\u62ecCPU\u7684\u6570\u91cf\u548c\u7c7b\u522b\u3001\u5185\u5b58\u57fa\u5730\u5740\u548c\u5927\u5c0f\u3001\u603b\u7ebf\u548c\u6865\u3001\u5916\u8bbe\u8fde\u63a5\u3001\u4e2d\u65ad\u63a7\u5236\u5668\u548c\u4e2d\u65ad\u4f7f\u7528\u60c5\u51b5\u3001GPIO\u63a7\u5236\u5668\u548cGPIO\u4f7f\u7528\u60c5\u51b5\u3001Clock\u63a7\u5236\u5668\u548cClock\u4f7f\u7528\u60c5\u51b5\u3002 2\uff0c\u8bbe\u5907\u6811\u4fe1\u606f\u88ab\u4fdd\u5b58\u5728\u4e00\u4e2aASCII \u6587\u672c\u6587\u4ef6\u4e2d\uff0c\u9002\u5408\u4eba\u7c7b\u7684\u9605\u8bfb\u4e60\u60ef\uff0c\u7c7b\u4f3c\u4e8exml\u6587\u4ef6\uff0c \u5728ARM Linux\u4e2d\uff0c\u4e00\u4e2a.dts\u6587\u4ef6\u5bf9\u5e94\u4e00\u4e2aARM\u7684machine\u653e\u7f6e\u5728\u5185\u6838\u7684 arch/arm/boot/dts/ 3\uff0c\u8bbe\u5907\u6811\u662f\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u7528\u4e8e\u63cf\u8ff0\u8bbe\u5907\u4fe1\u606f\u7684\u8bed\u8a00\uff0c\u5177\u4f53\u800c\u8a00\uff0c\u662f\u7528\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u63cf\u8ff0\u786c\u4ef6\uff0c\u4f7f\u5f97\u4e0d\u9700\u8981\u5bf9\u8bbe\u5907\u7684\u4fe1\u606f\u8fdb\u884c\u786c\u7f16\u7801(hard code) 4, Device Tree\u7531\u4e00\u7cfb\u5217\u88ab\u547d\u540d\u7684\u7ed3\u70b9\uff08node\uff09\u548c\u5c5e\u6027\uff08property\uff09\u7ec4\u6210\uff0c\u800c\u7ed3\u70b9\u672c\u8eab\u53ef\u5305\u542b\u5b50\u7ed3\u70b9\u3002\u6240\u8c13\u5c5e\u6027\uff0c\u5176\u5b9e\u5c31\u662f\u6210\u5bf9\u51fa\u73b0\u7684name\u548cvalue 5, \u8bbe\u5907\u6811\u6e90\u6587\u4ef6dts\u88ab\u7f16\u8bd1\u6210dtb\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5728bootloader\u8fd0\u884c\u65f6\u4f20\u9012\u7ed9\u64cd\u4f5c\u7cfb\u7edf\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5bf9\u5176\u8fdb\u884c\u89e3\u6790\u5c55\u5f00(Flattened)\uff0c\u4ece\u800c\u4ea7\u751f\u4e00\u4e2a\u786c\u4ef6\u8bbe\u5907\u7684\u62d3\u6251\u56fe\u6709\u4e86\u8fd9\u4e2a\u62d3\u6251\u56fe\uff0c\u5728\u7f16\u7a0b\u7684\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u7cfb\u7edf\u63d0\u4f9b\u7684\u63a5\u53e3\u83b7\u53d6\u5230\u8bbe\u5907\u6811\u4e2d\u7684\u8282\u70b9\u548c\u5c5e\u6027\u4fe1\u606f 3 \u8bbe\u5907\u6811\u7684\u8bed\u6cd5 \u8282\u70b9 \u5c5e\u6027 \u6839\u8282\u70b9 compatible\u5c5e\u6027 reg\u5c5e\u6027 address-cells\u548c#address-siz\u5c5e\u6027 \u4e2d\u65ad\u4fe1\u606f\u5c5e\u6027--interrupts\u548cinterrupts 3.1 \u8282\u70b9node \u8282\u70b9\u540d\u79f0\uff1a\u6bcf\u4e2a\u8282\u70b9\u5fc5\u987b\u6709\u4e00\u4e2a\u201c<\u540d\u79f0>[@<\u8bbe\u5907\u5730\u5740>]\u201d\u5f62\u5f0f\u7684\u540d\u5b57\uff1a <\u540d\u79f0> \u5c31\u662f\u4e00\u4e2a\u4e0d\u8d85\u8fc731\u4f4d\u7684\u7b80\u5355 ascii \u5b57\u7b26\u4e32\uff0c\u8282\u70b9\u7684\u547d\u540d\u5e94\u8be5\u6839\u636e\u5b83\u6240\u4f53\u73b0\u7684\u662f\u4ec0\u4e48\u6837\u7684\u8bbe\u5907\u3002\u6bd4\u5982\u4e00\u4e2a 3com \u4ee5\u592a\u7f51\u9002\u914d\u5668\u7684\u8282\u70b9\u5c31\u5e94\u8be5\u547d\u540d\u4e3aethernet\uff0c\u800c\u4e0d\u5e94\u8be5\u662f 3com509\u3002 <\u8bbe\u5907\u5730\u5740>\u7528\u6765\u8bbf\u95ee\u8be5\u8bbe\u5907\u7684\u4e3b\u5730\u5740\uff0c\u5e76\u4e14\u8be5\u5730\u5740\u4e5f\u5728\u8282\u70b9\u7684 reg \u5c5e\u6027\u4e2d\u5217\u51fa\uff0c\u540c\u7ea7\u8282\u70b9\u547d\u540d\u5fc5\u987b\u662f\u552f\u4e00\u7684\uff0c\u4f46\u53ea\u8981\u5730\u5740\u4e0d\u540c\uff0c\u591a\u4e2a\u8282\u70b9\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e00\u6837\u7684\u901a\u7528\u540d\u79f0\uff0c\u5f53\u7136\u8bbe\u5907\u5730\u5740\u4e5f\u662f\u53ef\u9009\u7684\uff0c\u53ef\u4ee5\u6709\u4e5f\u53ef\u4ee5\u6ca1\u6709 \u6811\u4e2d\u6bcf\u4e2a\u8868\u793a\u4e00\u4e2a\u8bbe\u5907\u7684\u8282\u70b9\u90fd\u9700\u8981\u4e00\u4e2a compatible \u5c5e\u6027 3.2 \u5c5e\u6027property \u7b80\u5355\u7684\u952e\uff0d\u503c\u5bf9\uff0c\u5b83\u7684\u503c\u53ef\u4ee5\u4e3a\u7a7a\u6216\u8005\u5305\u542b\u4e00\u4e2a\u4efb\u610f\u5b57\u8282\u6d41\u3002\u867d\u7136\u6570\u636e\u7c7b\u578b\u5e76\u6ca1\u6709\u7f16\u7801\u8fdb\u6570\u636e\u7ed3\u6784\uff0c\u4f46\u5728\u8bbe\u5907\u6811\u6e90\u6587\u4ef6\u4e2d\u4efb\u6709\u51e0\u4e2a\u57fa\u672c\u7684\u6570\u636e\u8868\u793a\u5f62\u5f0f : \u6587\u672c\u5b57\u7b26\u4e32\uff08\u65e0\u7ed3\u675f\u7b26\uff09\u53ef\u4ee5\u7528\u53cc\u5f15\u53f7\u8868\u793a\uff1a string-property = \"a string\" Cells\u662f 32 \u4f4d\u65e0\u7b26\u53f7\u6574\u6570\uff0c\u7528\u5c16\u62ec\u53f7\u9650\u5b9a\uff1a cell-property = <0xbeef 123 0xabcd1234> \u4e8c\u8fdb\u5236\u6570\u636e\u7528\u65b9\u62ec\u53f7\u9650\u5b9a\uff1a binary-property = [01 23 45 67]; \u4e0d\u540c\u8868\u793a\u5f62\u5f0f\u7684\u6570\u636e\u53ef\u4ee5\u4f7f\u7528\u9017\u53f7\u8fde\u5728\u4e00\u8d77\uff1a mixed-property = \"a string\", [01 23 45 67], <0x12345678>; \u9017\u53f7\u4e5f\u53ef\u7528\u4e8e\u521b\u5efa\u5b57\u7b26\u4e32\u5217\u8868\uff1a string-list = \"red fish\", \"blue fish\"; 3.2.1 \u5e38\u89c1\u5c5e\u6027--compatible\u5c5e\u6027 \u6307\u5b9a\u4e86\u7cfb\u7edf\u7684\u540d\u79f0\uff0c\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5217\u8868\uff0c\u5b9e\u9645\u5728\u4ee3\u7801\u4e2d\u53ef\u4ee5\u7528\u4e8e\u8fdb\u884c\u5339\u914d\uff0c\u5f53\u524d\u4f60\u9009\u62e9\u7684\u662f\u54ea\u4e2a\u673a\u5668\uff0c\u5b83\u5305\u542b\u4e86\u4e00\u4e2a\u201c<\u5236\u9020\u5546>,<\u578b\u53f7>\u201d\u5f62\u5f0f\u7684\u5b57\u7b26\u4e32\u3002\u91cd\u8981\u7684\u662f\u8981\u6307\u5b9a\u4e00\u4e2a\u786e\u5207\u7684\u8bbe\u5907\uff0c\u5e76\u4e14\u5305\u62ec\u5236\u9020\u5546\u7684\u540d\u5b50\uff0c\u4ee5\u907f\u514d\u547d\u540d\u7a7a\u95f4\u51b2\u7a81\uff0c \u4e0d\u8981\u4f7f\u7528\u5e26\u901a\u914d\u7b26\u7684 compatible \u503c\uff0c\u6bd4\u5982\u201cfsl,mpc83xx-uart\u201d\u6216\u7c7b\u4f3c\u60c5\u51b5 / { compatible = \"acme,coyotes-revenge\"; }; 3.2.2 \u5e38\u89c1\u5c5e\u6027--#address-cells\u548c#size-cells address-cells = <1> \u8868\u793aaddress\u5b57\u6bb5\u7684\u957f\u5ea6\u7684\u4e3a1 size-cells = <1>; \u8868\u793alength\u5b57\u6bb5\u7684\u957f\u5ea6\u4e3a1 external-bus { #address-cells = <2> #size-cells = <1>; ethernet@0,0 { compatible = \"smc,smc91c111\"; reg = <0 0 0x1000>; // \u5730\u5740\u5360\u4e24\u4e2acells\uff0c \u957f\u5ea6\u53601\u4e2acells nterrupts = < 5 2 >; }; } address-cells = <1>; \u57fa\u5730\u5740\u3001\u7247\u9009\u53f7\u7b49\u7edd\u5bf9\u8d77\u59cb\u5730\u5740\u6240\u5360\u5b57\u957f\uff0832\u4f4d\uff09 size-cells = <1>; \u957f\u5ea6\u6240\u5360\u5b57\u957f\uff0832\u4f4d\uff09 \u4f8b\u5b50\uff1a cpus { #address-cells = <1>; #size-cells = <0>; cpu@0 { compatible = \"arm,cortex-a9\"; reg = <0>; }; cpu@1 { compatible = \"arm,cortex-a9\"; reg = <1>; }; }; address-cells \u8bbe\u7f6e\u4e3a 1\uff0c#size-cells \u8bbe\u7f6e\u4e3a 0\u3002\u8fd9\u610f\u5473\u7740\u5b50\u8282\u70b9\u7684 reg \u503c\u662f\u4e00\u4e2a\u5355\u4e00\u7684 uint32\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e0d\u5305\u542b\u5927\u5c0f\u5b57\u6bb5\u7684\u5730\u5740\uff0c\u4e3a\u8fd9\u4e24\u4e2a cpu \u5206\u914d\u7684\u5730\u5740\u662f 0 \u548c 1\u3002cpu \u8282\u70b9\u7684 #size-cells \u4e3a 0 \u662f\u56e0\u4e3a\u53ea\u4e3a\u6bcf\u4e2a cpu \u5206\u914d\u4e00\u4e2a\u5355\u72ec\u7684\u5730\u5740\u3002 3.2.3 \u5e38\u89c1\u5c5e\u6027--reg\u5c5e\u6027 reg\u7684\u7ec4\u7ec7\u5f62\u5f0f\u4e3areg = \u5176\u4e2d\u7684\u6bcf\u4e00\u7ec4address length\u8868\u660e\u4e86\u8bbe\u5907\u4f7f\u7528\u7684\u4e00\u4e2a\u5730\u5740\u8303\u56f4 / { compatible = \"acme,coyotes-revenge\"; #address-cells = <1>; #size-cells = <1>; serial@101f2000 { compatible = \"arm,pl011\"; reg = <0x101f2000 0x1000 >; interrupts = < 2 0 >; }; \uff5d 3.2.4 \u5e38\u89c1\u5c5e\u6027--\u4e2d\u65ad\u4fe1\u606f \u63cf\u8ff0\u4e2d\u65ad\u8fde\u63a5\u9700\u8981\u56db\u4e2a\u5c5e\u6027\uff1a interrupt-controller - \u4e00\u4e2a\u7a7a\u7684\u5c5e\u6027\u5b9a\u4e49\u8be5\u8282\u70b9\u4f5c\u4e3a\u4e00\u4e2a\u63a5\u6536\u4e2d\u65ad\u4fe1\u53f7\u7684\u8bbe\u5907 interrupt-cells - \u8fd9\u662f\u4e00\u4e2a\u4e2d\u65ad\u63a7\u5236\u5668\u8282\u70b9\u7684\u5c5e\u6027\u3002\u5b83\u58f0\u660e\u4e86\u8be5\u4e2d\u65ad\u63a7\u5236\u5668\u7684\u4e2d\u65ad\u6307\u793a\u7b26\u4e2d cell \u7684\u4e2a\u6570\uff08\u7c7b\u4f3c\u4e8e #address-cells \u548c #size-cells\uff09 interrupt-parent - \u8fd9\u662f\u4e00\u4e2a\u8bbe\u5907\u8282\u70b9\u7684\u5c5e\u6027\uff0c\u5305\u542b\u4e00\u4e2a\u6307\u5411\u8be5\u8bbe\u5907\u8fde\u63a5\u7684\u4e2d\u65ad\u63a7\u5236\u5668\u7684 phandle(\u6307\u5411\u6216\u8005\u53ef\u4ee5\u5f15\u7528&)\u90a3\u4e9b\u6ca1\u6709 interrupt-parent \u7684\u8282\u70b9\u5219\u4ece\u5b83\u4eec\u7684\u7236\u8282\u70b9\u4e2d\u7ee7\u627f\u8be5\u5c5e\u6027\u3002 interrupts - \u4e00\u4e2a\u8bbe\u5907\u8282\u70b9\u5c5e\u6027\uff0c\u5305\u542b\u4e00\u4e2a\u4e2d\u65ad\u6307\u793a\u7b26\u7684\u5217\u8868\uff0c\u5bf9\u5e94\u4e8e\u8be5\u8bbe\u5907\u4e0a\u7684\u6bcf\u4e2a\u4e2d\u65ad\u8f93\u51fa\u4fe1\u53f7 \u4ee3\u7801\u4e3e\u4f8b\uff1a / { compatible = \"acme,coyotes-revenge\"; #address-cells = <1>; #size-cells = <1>; interrupt-parent = <&intc>; serial@101f0000 { compatible = \"arm,pl011\"; reg = <0x101f0000 0x1000 >; interrupts = < 1 0 >; }; intc: interrupt-controller@10140000 { compatible = \"arm,pl190\"; reg = <0x10140000 0x1000 >; interrupt-controller; #interrupt-cells = <2>; }; \uff5d \u5bf9\u4e8earm\u67b6\u6784\uff0c\u6807\u5fd7\u4e3a\u5177\u4f53\u542b\u4e49 Documentation/devicetree/bindings/arm/gic.txt The 1st cell is the interrupt type; 0 for SPI interrupts, 1 for PPI 02 interrupts. The 2nd cell contains the interrupt number for the interrupt type. SPI interrupts are in the range [0-987]. PPI interrupts are in the 06 range [0-15]. The 3rd cell is the flags, encoded as follows: bits[3:0] trigger type and level flags. 10 1 = low-to-high edge triggered 11 2 = high-to-low edge triggered 12 4 = active high level-sensitive 13 8 = active low level-sensitive 4 \u7ec3\u4e60\u65f6\u95f4 \u5199\u4e00\u4e2a\u8bbe\u5907\u8282\u70b9\uff1a\u5df2\u77e5#address-cells = <1> #size-cells = <1>; 1\u3001\u8282\u70b9\u540d\u5b57test_nod 2\u3001\u6709\u4ee5\u4e0b\u5c5e\u6027\uff1a 2.1\u3001compatible \u5c5e\u6027\u53d6 test,farsight 2.2\u3001reg \u5c5e\u6027\u53d6\u5730\u5740 0x11000C40 0x11000CE0 length \u5747\u4e3a0x24 2.3\u3001\u6709\u4e00\u4e2a\u7a7a\u5c5e\u6027\uff1atestprop,mytest; 2.4\u3001\u6709\u4e00\u4e2a\u5b57\u7b26\u4e32\u5c5e\u6027test_list_string ;\u6709\u4ee5\u4e0b\u503c\uff1a \"red fish\",\"fly fish\", \"blue fish\"; 2.5\u3001\u63cf\u8ff0\u4e00\u4e2a\u4e2d\u65ad\u8282\u70b9\uff1a\u4e2d\u65adIO\u6302\u8f7d\u5728gpx1_2\u4e0a\uff0c\u4e2d\u65ad\u65b9\u6cd5\u4e3a\u9ad8 \u7535\u5e73\u65b9\u5f0f\u89e6\u53d1 3\u3001\u5c06\u4e0a\u8ff0\u8282\u70b9\u6302\u8f7d\u81f3\u6839\u76ee\u5f55\u4e0b \u53c2\u8003\u7b54\u6848 test_nod@0x11000C40 { compatible = \"farsight,test\"; reg = <0x11000C40 0x24 0x11000CE0 0x24>; testprop,mytest; test_list_string = \"red fish\",\"fly fish\", \"blue fish\"; interrupt-parent = <&gpx1>; interrupts = <2 4>; 5 \u5e38\u7528OF API 5.1 \u67e5\u627e\u8282\u70b9 static inline const char *of_node_full_name(const struct device_node *np) { return np ? np->full_name : \"<no-node>\"; } extern struct device_node *of_find_node_by_name(struct device_node *from,const char *name); extern struct device_node *of_find_node_by_type(struct device_node *from,const char *type); extern struct device_node *of_find_compatible_node(struct device_node *from,const char *type, const char *compat); extern struct device_node *of_find_matching_node_and_match( struct device_node *from,const struct of_device_id *matches, const struct of_device_id **match); extern struct device_node *of_find_node_by_path(const char *path); extern struct device_node *of_find_node_by_phandle(phandle handle); \u5e38\u7528\u7684\u662f\uff1a struct device_node *of_find_node_by_path(const char *path); struct device_node *of_get_child_by_name(const struct device_node *node,const char *name); \u6570\u636e\u7ed3\u6784\uff1a struct device_node { const char *name; const char *type; phandle phandle; const char *full_name; struct property *properties; struct property *deadprops; /* removed properties */ struct device_node *parent; struct device_node *child; struct device_node *sibling; struct device_node *next; /* next device of same type */ struct device_node *allnext; /* next in list of all nodes */ struct proc_dir_entry *pde; /* this node's proc directory */ struct kref kref; unsigned long _flags; void *data; #if defined(CONFIG_SPARC) const char *path_component_name; unsigned int unique_id; struct of_irq_controller *irq_trans; #endif }; \u4ece\u6307\u5b9a\u7684\u8282\u70b9\u4e2d\u67e5\u627e\u5c5e\u6027\uff1a struct property of_find_property(const struct device_node np,const char name,int lenp) \u6570\u636e\u7ed3\u6784\uff1a struct property { char *name; int length; void *value; struct property *next; unsigned long _flags; unsigned int unique_id; }; \u4ece\u6307\u5b9a\u7684\u8282\u70b9\u4e2d\u67e5\u627ecompatible\u5c5e\u6027\uff1a int of_device_is_compatible(const struct device_node *device, const char *compat) 6 \u901a\u8fc7OF API\u67e5\u627e\u76f8\u5e94\u7684\u8282\u70b9\u3001\u5c5e\u6027 \u4ee5 4 \u7ec3\u4e60\u7684\u4ee3\u7801\u4e3a\u4f8b\uff1a 6.1 \u67e5\u627e\u5230\u76f8\u5173\u7684\u8bbe\u5907\u6811\u8282\u70b9 np = of_find_node_by_path(\"/test_nod@12345678\"); if(!np) { printk(\"find node fail!\\n\"); ret = -1; } else{ printk(\"find node success!\\n\"); printk(\"node's name : %s\\n\", np->name); printk(\"node's full_name : %s\\n\", np->full_name); } 6.2 \u4ece\u67e5\u627e\u5230\u7684\u8282\u70b9\u91cc\u9762\u5206\u6790\u8be5\u8282\u70b9\u7684\u5c5e\u6027 6.2.1 \u67e5\u627ecompatible\u5c5e\u6027 property = of_find_property( np, \"compatible\",NULL); if(!property) { printk(\"find property fail!\\n\"); ret = -1; } else{ printk(\"find property success!\\n\"); printk(\"property's name : %s\\n\", property->name); printk(\"property's value : %s\\n\", (const char *)property->value); } 6.2.2 \u67e5\u627ecompatible\u5c5e\u6027\u7684\u53e6\u4e00\u79cd\u65b9\u6cd5 int ret_compatible = of_device_is_compatible(np,\"farsight,test\"); if(!ret_compatible) { printk(\"match compatible fail!\\n\"); ret = -1; } else { printk(\"match compatible success!\\n\"); } 6.2 \u4ece\u67e5\u627e\u5230\u7684\u8282\u70b9\u91cc\u9762\u5206\u6790\u8be5\u8282\u70b9\u7684\u6570\u7ec4\u5c5e\u6027 extern int of_property_read_u32_index(const struct device_node *np, const char *propname, u32 index, u32 *out_value); extern int of_property_read_u8_array(const struct device_node *np, const char *propname, u8 *out_values, size_t sz); extern int of_property_read_u16_array(const struct device_node *np, const char *propname, u16 *out_values, size_t sz); extern int of_property_read_u32_array(const struct device_node *np, const char *propname, u32 *out_values, size_t sz); 6.2 \u4ece\u67e5\u627e\u5230\u7684\u8282\u70b9\u91cc\u9762\u5206\u6790\u8be5\u8282\u70b9\u7684\u5b57\u7b26\u4e32\u6570\u7ec4\u5c5e\u6027 of_property_read_string_index 6.3 \u4ece\u67e5\u627e\u5230\u7684\u8282\u70b9\u91cc\u9762\u5206\u6790\u8be5\u8282\u70b9\u7684\u4e2d\u65ad\u5c5e\u6027 \u53ef\u53c2\u8003\u9a71\u52a8\u7b2c\u4e8c\u5929\u91cc\u7684\u4e2d\u65ad 7 platform\u9a71\u52a8\u7684\u53d8\u66f4 \u53c2\u8003\u94fe\u63a5\uff1a https://blog.csdn.net/cosmoslhf/article/details/49364577 https://www.cnblogs.com/chineseboy/p/5235608.html https://blog.csdn.net/21cnbao/article/details/8457546 https://blog.csdn.net/qq_20678703/article/details/49100111","title":"\u9a71\u52a8\u7b2c\u56db\u5929"},{"location":"ARMLinux\u8bbe\u5907\u6811/#1-linux","text":"\u5728Linux 2.6\u4e2d\uff0carch/arm/plat-xxx\u548carch/arm/mach-xxx\u4e2d\u5145\u65a5\u7740\u5927\u91cf\u7684\u5783\u573e\u4ee3\u7801\uff0c\u76f8\u5f53\u591a\u6570\u7684\u4ee3\u7801\u53ea\u662f\u5728\u63cf\u8ff0\u677f\u7ea7\u7ec6\u8282\uff0c\u800c\u8fd9\u4e9b\u677f\u7ea7\u7ec6\u8282\u5bf9\u4e8e\u5185\u6838\u6765\u8bb2\uff0c\u4e0d\u8fc7\u662f\u5783\u573e\uff0c\u5982\u677f\u4e0a\u7684platform\u8bbe\u5907\u3001resource\u3001i2c_board_info\u3001spi_board_info\u4ee5\u53ca\u5404\u79cd\u786c\u4ef6platform_data\u3002\u5e38\u89c1\u7684s3c2410\u3001s3c6410\u7b49\u677f\u7ea7\u76ee\u5f55\uff0c\u4ee3\u7801\u91cf\u5728\u6570\u4e07\u884c\u3002 Linus Torvalds\u5bf9\u4e8e\u6b64\u79cd\u60c5\u51b5\u5927\u53d1\u96f7\u9706\uff0c\u57282011\u5e74\u7684ARM Linux\u90ae\u4ef6\u5217\u8868\u5ba3\u79f0this whole ARM thing is a f*cking pain in the ass\u201d \u6240\u4ee5Linux\u5f00\u53d1\u793e\u533a\u5c31\u5f00\u59cb\u6574\u6539\uff0c\u8bbe\u5907\u6811\u6700\u65e9\u7528\u4e8ePowerPC\u7b49\u5176\u4ed6\u4f53\u7cfb\u67b6\u6784\uff0cARM\u67b6\u6784\u5f00\u53d1\u793e\u533a\u5c31\u5f00\u59cb\u91c7\u7528\u8bbe\u5907\u6811\u6765\u63cf\u8ff0\u8bbe\u5907\u7684\u4fe1\u606f","title":"1. Linux\u8bbe\u5907\u6811\u7684\u8d77\u6e90"},{"location":"ARMLinux\u8bbe\u5907\u6811/#2-linux","text":"DT : Device Tree FDT : Flattened DeviceTree OF : Open Firmware DTS : Device Tree Source DTSI : Device Tree Source Include DTB : Device Tree Blob DTC : Device Tree Compiler","title":"2. Linux\u8bbe\u5907\u6811\u7684\u5e38\u89c1\u6982\u5ff5"},{"location":"ARMLinux\u8bbe\u5907\u6811/#21-dtc-device-tree-compiler","text":"\u5c06.dts\u7f16\u8bd1\u4e3a.dtb\u7684\u5de5\u5177 DTC\u7684\u6e90\u4ee3\u7801\u4f4d\u4e8e\u5185\u6838\u7684scripts/dtc\u76ee\u5f55\uff0c\u5728Linux\u5185\u6838\u4f7f\u80fd\u4e86Device Tree\u7684\u60c5\u51b5\u4e0b\uff0c\u7f16\u8bd1\u5185\u6838\u7684\u65f6\u5019\u4e3b\u673a\u5de5\u5177dtc\u4f1a\u88ab\u7f16\u8bd1\u51fa\u6765 \u5728Linux\u5185\u6838\u7684arch/arm/boot/dts/Makefile\u4e2d\uff0c\u63cf\u8ff0\u4e86\u5f53\u67d0\u79cdSoC\u88ab\u9009\u4e2d\u540e\uff0c\u54ea\u4e9b.dtb\u6587\u4ef6\u4f1a\u88ab\u7f16\u8bd1\u51fa\u6765\uff0c\u5982\u4e0eEXYNOS\u5bf9\u5e94\u7684.dtb\u5305\u62ec\uff1a dtb-$(CONFIG_ARCH_EXYNOS) += exynos4210-origen.dtb \\ exynos4210-smdkv310.dtb \\ exynos4412-origen.dtb \\ \u6211\u4eec\u53ef\u4ee5\u5355\u72ec\u7f16\u8bd1Device Tree\u6587\u4ef6\u3002\u5f53\u6211\u4eec\u5728Linux\u5185\u6838\u4e0b\u8fd0\u884cmake dtbs\u65f6\uff0c\u82e5\u6211\u4eec\u4e4b\u524d\u9009\u62e9\u4e86ARCH_EXYNOS\uff0c\u4e0a\u8ff0.dtb\u90fd\u4f1a\u7531\u5bf9\u5e94\u7684.dts\u7f16\u8bd1\u51fa\u6765 DTC\u9664\u4e86\u53ef\u4ee5\u7f16\u8bd1.dts\u6587\u4ef6\u4ee5\u5916\uff0c\u5176\u5b9e\u4e5f\u53ef\u4ee5\u201c\u53cd\u6c47\u7f16\u201d.dtb\u6587\u4ef6\u4e3a.dts\u6587\u4ef6\uff0c\u5176\u6307\u4ee4\u683c\u5f0f\u4e3a\uff1a ./scripts/dtc/dtc -I dtb -O dts -o xxx.dts arch/arm/boot/dts/xxx.dtb","title":"2.1\u5feb\u901f\u7f16\u8bd1\u8bbe\u5907\u6811---DTC (device tree compiler)"},{"location":"ARMLinux\u8bbe\u5907\u6811/#22-open-firmware-device-tree","text":"1\uff0cDevice Tree\u53ef\u4ee5\u63cf\u8ff0\u7684\u4fe1\u606f\u5305\u62ecCPU\u7684\u6570\u91cf\u548c\u7c7b\u522b\u3001\u5185\u5b58\u57fa\u5730\u5740\u548c\u5927\u5c0f\u3001\u603b\u7ebf\u548c\u6865\u3001\u5916\u8bbe\u8fde\u63a5\u3001\u4e2d\u65ad\u63a7\u5236\u5668\u548c\u4e2d\u65ad\u4f7f\u7528\u60c5\u51b5\u3001GPIO\u63a7\u5236\u5668\u548cGPIO\u4f7f\u7528\u60c5\u51b5\u3001Clock\u63a7\u5236\u5668\u548cClock\u4f7f\u7528\u60c5\u51b5\u3002 2\uff0c\u8bbe\u5907\u6811\u4fe1\u606f\u88ab\u4fdd\u5b58\u5728\u4e00\u4e2aASCII \u6587\u672c\u6587\u4ef6\u4e2d\uff0c\u9002\u5408\u4eba\u7c7b\u7684\u9605\u8bfb\u4e60\u60ef\uff0c\u7c7b\u4f3c\u4e8exml\u6587\u4ef6\uff0c \u5728ARM Linux\u4e2d\uff0c\u4e00\u4e2a.dts\u6587\u4ef6\u5bf9\u5e94\u4e00\u4e2aARM\u7684machine\u653e\u7f6e\u5728\u5185\u6838\u7684 arch/arm/boot/dts/ 3\uff0c\u8bbe\u5907\u6811\u662f\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u7528\u4e8e\u63cf\u8ff0\u8bbe\u5907\u4fe1\u606f\u7684\u8bed\u8a00\uff0c\u5177\u4f53\u800c\u8a00\uff0c\u662f\u7528\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u63cf\u8ff0\u786c\u4ef6\uff0c\u4f7f\u5f97\u4e0d\u9700\u8981\u5bf9\u8bbe\u5907\u7684\u4fe1\u606f\u8fdb\u884c\u786c\u7f16\u7801(hard code) 4, Device Tree\u7531\u4e00\u7cfb\u5217\u88ab\u547d\u540d\u7684\u7ed3\u70b9\uff08node\uff09\u548c\u5c5e\u6027\uff08property\uff09\u7ec4\u6210\uff0c\u800c\u7ed3\u70b9\u672c\u8eab\u53ef\u5305\u542b\u5b50\u7ed3\u70b9\u3002\u6240\u8c13\u5c5e\u6027\uff0c\u5176\u5b9e\u5c31\u662f\u6210\u5bf9\u51fa\u73b0\u7684name\u548cvalue 5, \u8bbe\u5907\u6811\u6e90\u6587\u4ef6dts\u88ab\u7f16\u8bd1\u6210dtb\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5728bootloader\u8fd0\u884c\u65f6\u4f20\u9012\u7ed9\u64cd\u4f5c\u7cfb\u7edf\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5bf9\u5176\u8fdb\u884c\u89e3\u6790\u5c55\u5f00(Flattened)\uff0c\u4ece\u800c\u4ea7\u751f\u4e00\u4e2a\u786c\u4ef6\u8bbe\u5907\u7684\u62d3\u6251\u56fe\u6709\u4e86\u8fd9\u4e2a\u62d3\u6251\u56fe\uff0c\u5728\u7f16\u7a0b\u7684\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u7cfb\u7edf\u63d0\u4f9b\u7684\u63a5\u53e3\u83b7\u53d6\u5230\u8bbe\u5907\u6811\u4e2d\u7684\u8282\u70b9\u548c\u5c5e\u6027\u4fe1\u606f","title":"2.2 Open Firmware Device Tree \u5f00\u53d1\u56fa\u4ef6\u8bbe\u5907\u6811"},{"location":"ARMLinux\u8bbe\u5907\u6811/#3","text":"\u8282\u70b9 \u5c5e\u6027 \u6839\u8282\u70b9 compatible\u5c5e\u6027 reg\u5c5e\u6027","title":"3 \u8bbe\u5907\u6811\u7684\u8bed\u6cd5"},{"location":"ARMLinux\u8bbe\u5907\u6811/#address-cellsaddress-siz","text":"\u4e2d\u65ad\u4fe1\u606f\u5c5e\u6027--interrupts\u548cinterrupts","title":"address-cells\u548c#address-siz\u5c5e\u6027"},{"location":"ARMLinux\u8bbe\u5907\u6811/#31-node","text":"\u8282\u70b9\u540d\u79f0\uff1a\u6bcf\u4e2a\u8282\u70b9\u5fc5\u987b\u6709\u4e00\u4e2a\u201c<\u540d\u79f0>[@<\u8bbe\u5907\u5730\u5740>]\u201d\u5f62\u5f0f\u7684\u540d\u5b57\uff1a <\u540d\u79f0> \u5c31\u662f\u4e00\u4e2a\u4e0d\u8d85\u8fc731\u4f4d\u7684\u7b80\u5355 ascii \u5b57\u7b26\u4e32\uff0c\u8282\u70b9\u7684\u547d\u540d\u5e94\u8be5\u6839\u636e\u5b83\u6240\u4f53\u73b0\u7684\u662f\u4ec0\u4e48\u6837\u7684\u8bbe\u5907\u3002\u6bd4\u5982\u4e00\u4e2a 3com \u4ee5\u592a\u7f51\u9002\u914d\u5668\u7684\u8282\u70b9\u5c31\u5e94\u8be5\u547d\u540d\u4e3aethernet\uff0c\u800c\u4e0d\u5e94\u8be5\u662f 3com509\u3002 <\u8bbe\u5907\u5730\u5740>\u7528\u6765\u8bbf\u95ee\u8be5\u8bbe\u5907\u7684\u4e3b\u5730\u5740\uff0c\u5e76\u4e14\u8be5\u5730\u5740\u4e5f\u5728\u8282\u70b9\u7684 reg \u5c5e\u6027\u4e2d\u5217\u51fa\uff0c\u540c\u7ea7\u8282\u70b9\u547d\u540d\u5fc5\u987b\u662f\u552f\u4e00\u7684\uff0c\u4f46\u53ea\u8981\u5730\u5740\u4e0d\u540c\uff0c\u591a\u4e2a\u8282\u70b9\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e00\u6837\u7684\u901a\u7528\u540d\u79f0\uff0c\u5f53\u7136\u8bbe\u5907\u5730\u5740\u4e5f\u662f\u53ef\u9009\u7684\uff0c\u53ef\u4ee5\u6709\u4e5f\u53ef\u4ee5\u6ca1\u6709 \u6811\u4e2d\u6bcf\u4e2a\u8868\u793a\u4e00\u4e2a\u8bbe\u5907\u7684\u8282\u70b9\u90fd\u9700\u8981\u4e00\u4e2a compatible \u5c5e\u6027","title":"3.1 \u8282\u70b9node"},{"location":"ARMLinux\u8bbe\u5907\u6811/#32-property","text":"\u7b80\u5355\u7684\u952e\uff0d\u503c\u5bf9\uff0c\u5b83\u7684\u503c\u53ef\u4ee5\u4e3a\u7a7a\u6216\u8005\u5305\u542b\u4e00\u4e2a\u4efb\u610f\u5b57\u8282\u6d41\u3002\u867d\u7136\u6570\u636e\u7c7b\u578b\u5e76\u6ca1\u6709\u7f16\u7801\u8fdb\u6570\u636e\u7ed3\u6784\uff0c\u4f46\u5728\u8bbe\u5907\u6811\u6e90\u6587\u4ef6\u4e2d\u4efb\u6709\u51e0\u4e2a\u57fa\u672c\u7684\u6570\u636e\u8868\u793a\u5f62\u5f0f : \u6587\u672c\u5b57\u7b26\u4e32\uff08\u65e0\u7ed3\u675f\u7b26\uff09\u53ef\u4ee5\u7528\u53cc\u5f15\u53f7\u8868\u793a\uff1a string-property = \"a string\" Cells\u662f 32 \u4f4d\u65e0\u7b26\u53f7\u6574\u6570\uff0c\u7528\u5c16\u62ec\u53f7\u9650\u5b9a\uff1a cell-property = <0xbeef 123 0xabcd1234> \u4e8c\u8fdb\u5236\u6570\u636e\u7528\u65b9\u62ec\u53f7\u9650\u5b9a\uff1a binary-property = [01 23 45 67]; \u4e0d\u540c\u8868\u793a\u5f62\u5f0f\u7684\u6570\u636e\u53ef\u4ee5\u4f7f\u7528\u9017\u53f7\u8fde\u5728\u4e00\u8d77\uff1a mixed-property = \"a string\", [01 23 45 67], <0x12345678>; \u9017\u53f7\u4e5f\u53ef\u7528\u4e8e\u521b\u5efa\u5b57\u7b26\u4e32\u5217\u8868\uff1a string-list = \"red fish\", \"blue fish\";","title":"3.2 \u5c5e\u6027property"},{"location":"ARMLinux\u8bbe\u5907\u6811/#321-compatible","text":"\u6307\u5b9a\u4e86\u7cfb\u7edf\u7684\u540d\u79f0\uff0c\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5217\u8868\uff0c\u5b9e\u9645\u5728\u4ee3\u7801\u4e2d\u53ef\u4ee5\u7528\u4e8e\u8fdb\u884c\u5339\u914d\uff0c\u5f53\u524d\u4f60\u9009\u62e9\u7684\u662f\u54ea\u4e2a\u673a\u5668\uff0c\u5b83\u5305\u542b\u4e86\u4e00\u4e2a\u201c<\u5236\u9020\u5546>,<\u578b\u53f7>\u201d\u5f62\u5f0f\u7684\u5b57\u7b26\u4e32\u3002\u91cd\u8981\u7684\u662f\u8981\u6307\u5b9a\u4e00\u4e2a\u786e\u5207\u7684\u8bbe\u5907\uff0c\u5e76\u4e14\u5305\u62ec\u5236\u9020\u5546\u7684\u540d\u5b50\uff0c\u4ee5\u907f\u514d\u547d\u540d\u7a7a\u95f4\u51b2\u7a81\uff0c \u4e0d\u8981\u4f7f\u7528\u5e26\u901a\u914d\u7b26\u7684 compatible \u503c\uff0c\u6bd4\u5982\u201cfsl,mpc83xx-uart\u201d\u6216\u7c7b\u4f3c\u60c5\u51b5 / { compatible = \"acme,coyotes-revenge\"; };","title":"3.2.1  \u5e38\u89c1\u5c5e\u6027--compatible\u5c5e\u6027"},{"location":"ARMLinux\u8bbe\u5907\u6811/#322-address-cellssize-cells","text":"","title":"3.2.2  \u5e38\u89c1\u5c5e\u6027--#address-cells\u548c#size-cells"},{"location":"ARMLinux\u8bbe\u5907\u6811/#address-cells-1-address1","text":"","title":"address-cells = &lt;1&gt; \u8868\u793aaddress\u5b57\u6bb5\u7684\u957f\u5ea6\u7684\u4e3a1"},{"location":"ARMLinux\u8bbe\u5907\u6811/#size-cells-1-length1","text":"external-bus { #address-cells = <2> #size-cells = <1>; ethernet@0,0 { compatible = \"smc,smc91c111\"; reg = <0 0 0x1000>; // \u5730\u5740\u5360\u4e24\u4e2acells\uff0c \u957f\u5ea6\u53601\u4e2acells nterrupts = < 5 2 >; }; }","title":"size-cells = &lt;1&gt;;  \u8868\u793alength\u5b57\u6bb5\u7684\u957f\u5ea6\u4e3a1"},{"location":"ARMLinux\u8bbe\u5907\u6811/#address-cells-1-32","text":"","title":"address-cells = &lt;1&gt;; \u57fa\u5730\u5740\u3001\u7247\u9009\u53f7\u7b49\u7edd\u5bf9\u8d77\u59cb\u5730\u5740\u6240\u5360\u5b57\u957f\uff0832\u4f4d\uff09"},{"location":"ARMLinux\u8bbe\u5907\u6811/#size-cells-1-32","text":"\u4f8b\u5b50\uff1a cpus { #address-cells = <1>; #size-cells = <0>; cpu@0 { compatible = \"arm,cortex-a9\"; reg = <0>; }; cpu@1 { compatible = \"arm,cortex-a9\"; reg = <1>; }; };","title":"size-cells = &lt;1&gt;;  \u957f\u5ea6\u6240\u5360\u5b57\u957f\uff0832\u4f4d\uff09"},{"location":"ARMLinux\u8bbe\u5907\u6811/#address-cells-1size-cells-0-reg-uint32-cpu-0-1cpu-size-cells-0-cpu","text":"","title":"address-cells \u8bbe\u7f6e\u4e3a 1\uff0c#size-cells \u8bbe\u7f6e\u4e3a 0\u3002\u8fd9\u610f\u5473\u7740\u5b50\u8282\u70b9\u7684 reg \u503c\u662f\u4e00\u4e2a\u5355\u4e00\u7684 uint32\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e0d\u5305\u542b\u5927\u5c0f\u5b57\u6bb5\u7684\u5730\u5740\uff0c\u4e3a\u8fd9\u4e24\u4e2a cpu \u5206\u914d\u7684\u5730\u5740\u662f 0 \u548c 1\u3002cpu \u8282\u70b9\u7684 #size-cells \u4e3a 0 \u662f\u56e0\u4e3a\u53ea\u4e3a\u6bcf\u4e2a cpu \u5206\u914d\u4e00\u4e2a\u5355\u72ec\u7684\u5730\u5740\u3002"},{"location":"ARMLinux\u8bbe\u5907\u6811/#323-reg","text":"reg\u7684\u7ec4\u7ec7\u5f62\u5f0f\u4e3areg = \u5176\u4e2d\u7684\u6bcf\u4e00\u7ec4address length\u8868\u660e\u4e86\u8bbe\u5907\u4f7f\u7528\u7684\u4e00\u4e2a\u5730\u5740\u8303\u56f4 / { compatible = \"acme,coyotes-revenge\"; #address-cells = <1>; #size-cells = <1>; serial@101f2000 { compatible = \"arm,pl011\"; reg = <0x101f2000 0x1000 >; interrupts = < 2 0 >; }; \uff5d","title":"3.2.3  \u5e38\u89c1\u5c5e\u6027--reg\u5c5e\u6027"},{"location":"ARMLinux\u8bbe\u5907\u6811/#324-","text":"\u63cf\u8ff0\u4e2d\u65ad\u8fde\u63a5\u9700\u8981\u56db\u4e2a\u5c5e\u6027\uff1a interrupt-controller - \u4e00\u4e2a\u7a7a\u7684\u5c5e\u6027\u5b9a\u4e49\u8be5\u8282\u70b9\u4f5c\u4e3a\u4e00\u4e2a\u63a5\u6536\u4e2d\u65ad\u4fe1\u53f7\u7684\u8bbe\u5907","title":"3.2.4  \u5e38\u89c1\u5c5e\u6027--\u4e2d\u65ad\u4fe1\u606f"},{"location":"ARMLinux\u8bbe\u5907\u6811/#interrupt-cells-cell-address-cells-size-cells","text":"interrupt-parent - \u8fd9\u662f\u4e00\u4e2a\u8bbe\u5907\u8282\u70b9\u7684\u5c5e\u6027\uff0c\u5305\u542b\u4e00\u4e2a\u6307\u5411\u8be5\u8bbe\u5907\u8fde\u63a5\u7684\u4e2d\u65ad\u63a7\u5236\u5668\u7684 phandle(\u6307\u5411\u6216\u8005\u53ef\u4ee5\u5f15\u7528&)\u90a3\u4e9b\u6ca1\u6709 interrupt-parent \u7684\u8282\u70b9\u5219\u4ece\u5b83\u4eec\u7684\u7236\u8282\u70b9\u4e2d\u7ee7\u627f\u8be5\u5c5e\u6027\u3002 interrupts - \u4e00\u4e2a\u8bbe\u5907\u8282\u70b9\u5c5e\u6027\uff0c\u5305\u542b\u4e00\u4e2a\u4e2d\u65ad\u6307\u793a\u7b26\u7684\u5217\u8868\uff0c\u5bf9\u5e94\u4e8e\u8be5\u8bbe\u5907\u4e0a\u7684\u6bcf\u4e2a\u4e2d\u65ad\u8f93\u51fa\u4fe1\u53f7 \u4ee3\u7801\u4e3e\u4f8b\uff1a / { compatible = \"acme,coyotes-revenge\"; #address-cells = <1>; #size-cells = <1>; interrupt-parent = <&intc>; serial@101f0000 { compatible = \"arm,pl011\"; reg = <0x101f0000 0x1000 >; interrupts = < 1 0 >; }; intc: interrupt-controller@10140000 { compatible = \"arm,pl190\"; reg = <0x10140000 0x1000 >; interrupt-controller; #interrupt-cells = <2>; }; \uff5d \u5bf9\u4e8earm\u67b6\u6784\uff0c\u6807\u5fd7\u4e3a\u5177\u4f53\u542b\u4e49 Documentation/devicetree/bindings/arm/gic.txt The 1st cell is the interrupt type; 0 for SPI interrupts, 1 for PPI 02 interrupts. The 2nd cell contains the interrupt number for the interrupt type. SPI interrupts are in the range [0-987]. PPI interrupts are in the 06 range [0-15]. The 3rd cell is the flags, encoded as follows: bits[3:0] trigger type and level flags. 10 1 = low-to-high edge triggered 11 2 = high-to-low edge triggered 12 4 = active high level-sensitive 13 8 = active low level-sensitive","title":"interrupt-cells - \u8fd9\u662f\u4e00\u4e2a\u4e2d\u65ad\u63a7\u5236\u5668\u8282\u70b9\u7684\u5c5e\u6027\u3002\u5b83\u58f0\u660e\u4e86\u8be5\u4e2d\u65ad\u63a7\u5236\u5668\u7684\u4e2d\u65ad\u6307\u793a\u7b26\u4e2d cell \u7684\u4e2a\u6570\uff08\u7c7b\u4f3c\u4e8e #address-cells \u548c #size-cells\uff09"},{"location":"ARMLinux\u8bbe\u5907\u6811/#4","text":"\u5199\u4e00\u4e2a\u8bbe\u5907\u8282\u70b9\uff1a\u5df2\u77e5#address-cells = <1> #size-cells = <1>; 1\u3001\u8282\u70b9\u540d\u5b57test_nod 2\u3001\u6709\u4ee5\u4e0b\u5c5e\u6027\uff1a 2.1\u3001compatible \u5c5e\u6027\u53d6 test,farsight 2.2\u3001reg \u5c5e\u6027\u53d6\u5730\u5740 0x11000C40 0x11000CE0 length \u5747\u4e3a0x24 2.3\u3001\u6709\u4e00\u4e2a\u7a7a\u5c5e\u6027\uff1atestprop,mytest; 2.4\u3001\u6709\u4e00\u4e2a\u5b57\u7b26\u4e32\u5c5e\u6027test_list_string ;\u6709\u4ee5\u4e0b\u503c\uff1a \"red fish\",\"fly fish\", \"blue fish\"; 2.5\u3001\u63cf\u8ff0\u4e00\u4e2a\u4e2d\u65ad\u8282\u70b9\uff1a\u4e2d\u65adIO\u6302\u8f7d\u5728gpx1_2\u4e0a\uff0c\u4e2d\u65ad\u65b9\u6cd5\u4e3a\u9ad8 \u7535\u5e73\u65b9\u5f0f\u89e6\u53d1 3\u3001\u5c06\u4e0a\u8ff0\u8282\u70b9\u6302\u8f7d\u81f3\u6839\u76ee\u5f55\u4e0b","title":"4 \u7ec3\u4e60\u65f6\u95f4"},{"location":"ARMLinux\u8bbe\u5907\u6811/#_1","text":"test_nod@0x11000C40 { compatible = \"farsight,test\"; reg = <0x11000C40 0x24 0x11000CE0 0x24>; testprop,mytest; test_list_string = \"red fish\",\"fly fish\", \"blue fish\"; interrupt-parent = <&gpx1>; interrupts = <2 4>;","title":"\u53c2\u8003\u7b54\u6848"},{"location":"ARMLinux\u8bbe\u5907\u6811/#5-of-api","text":"5.1 \u67e5\u627e\u8282\u70b9 static inline const char *of_node_full_name(const struct device_node *np) { return np ? np->full_name : \"<no-node>\"; } extern struct device_node *of_find_node_by_name(struct device_node *from,const char *name); extern struct device_node *of_find_node_by_type(struct device_node *from,const char *type); extern struct device_node *of_find_compatible_node(struct device_node *from,const char *type, const char *compat); extern struct device_node *of_find_matching_node_and_match( struct device_node *from,const struct of_device_id *matches, const struct of_device_id **match); extern struct device_node *of_find_node_by_path(const char *path); extern struct device_node *of_find_node_by_phandle(phandle handle); \u5e38\u7528\u7684\u662f\uff1a struct device_node *of_find_node_by_path(const char *path); struct device_node *of_get_child_by_name(const struct device_node *node,const char *name); \u6570\u636e\u7ed3\u6784\uff1a struct device_node { const char *name; const char *type; phandle phandle; const char *full_name; struct property *properties; struct property *deadprops; /* removed properties */ struct device_node *parent; struct device_node *child; struct device_node *sibling; struct device_node *next; /* next device of same type */ struct device_node *allnext; /* next in list of all nodes */ struct proc_dir_entry *pde; /* this node's proc directory */ struct kref kref; unsigned long _flags; void *data; #if defined(CONFIG_SPARC) const char *path_component_name; unsigned int unique_id; struct of_irq_controller *irq_trans; #endif }; \u4ece\u6307\u5b9a\u7684\u8282\u70b9\u4e2d\u67e5\u627e\u5c5e\u6027\uff1a struct property of_find_property(const struct device_node np,const char name,int lenp) \u6570\u636e\u7ed3\u6784\uff1a struct property { char *name; int length; void *value; struct property *next; unsigned long _flags; unsigned int unique_id; }; \u4ece\u6307\u5b9a\u7684\u8282\u70b9\u4e2d\u67e5\u627ecompatible\u5c5e\u6027\uff1a int of_device_is_compatible(const struct device_node *device, const char *compat)","title":"5 \u5e38\u7528OF API"},{"location":"ARMLinux\u8bbe\u5907\u6811/#6-of-api","text":"\u4ee5 4 \u7ec3\u4e60\u7684\u4ee3\u7801\u4e3a\u4f8b\uff1a","title":"6 \u901a\u8fc7OF API\u67e5\u627e\u76f8\u5e94\u7684\u8282\u70b9\u3001\u5c5e\u6027"},{"location":"ARMLinux\u8bbe\u5907\u6811/#61","text":"np = of_find_node_by_path(\"/test_nod@12345678\"); if(!np) { printk(\"find node fail!\\n\"); ret = -1; } else{ printk(\"find node success!\\n\"); printk(\"node's name : %s\\n\", np->name); printk(\"node's full_name : %s\\n\", np->full_name); }","title":"6.1 \u67e5\u627e\u5230\u76f8\u5173\u7684\u8bbe\u5907\u6811\u8282\u70b9"},{"location":"ARMLinux\u8bbe\u5907\u6811/#62","text":"","title":"6.2 \u4ece\u67e5\u627e\u5230\u7684\u8282\u70b9\u91cc\u9762\u5206\u6790\u8be5\u8282\u70b9\u7684\u5c5e\u6027"},{"location":"ARMLinux\u8bbe\u5907\u6811/#621-compatible","text":"property = of_find_property( np, \"compatible\",NULL); if(!property) { printk(\"find property fail!\\n\"); ret = -1; } else{ printk(\"find property success!\\n\"); printk(\"property's name : %s\\n\", property->name); printk(\"property's value : %s\\n\", (const char *)property->value); }","title":"6.2.1 \u67e5\u627ecompatible\u5c5e\u6027"},{"location":"ARMLinux\u8bbe\u5907\u6811/#622-compatible","text":"int ret_compatible = of_device_is_compatible(np,\"farsight,test\"); if(!ret_compatible) { printk(\"match compatible fail!\\n\"); ret = -1; } else { printk(\"match compatible success!\\n\"); }","title":"6.2.2 \u67e5\u627ecompatible\u5c5e\u6027\u7684\u53e6\u4e00\u79cd\u65b9\u6cd5"},{"location":"ARMLinux\u8bbe\u5907\u6811/#62_1","text":"extern int of_property_read_u32_index(const struct device_node *np, const char *propname, u32 index, u32 *out_value); extern int of_property_read_u8_array(const struct device_node *np, const char *propname, u8 *out_values, size_t sz); extern int of_property_read_u16_array(const struct device_node *np, const char *propname, u16 *out_values, size_t sz); extern int of_property_read_u32_array(const struct device_node *np, const char *propname, u32 *out_values, size_t sz);","title":"6.2 \u4ece\u67e5\u627e\u5230\u7684\u8282\u70b9\u91cc\u9762\u5206\u6790\u8be5\u8282\u70b9\u7684\u6570\u7ec4\u5c5e\u6027"},{"location":"ARMLinux\u8bbe\u5907\u6811/#62_2","text":"of_property_read_string_index","title":"6.2 \u4ece\u67e5\u627e\u5230\u7684\u8282\u70b9\u91cc\u9762\u5206\u6790\u8be5\u8282\u70b9\u7684\u5b57\u7b26\u4e32\u6570\u7ec4\u5c5e\u6027"},{"location":"ARMLinux\u8bbe\u5907\u6811/#63","text":"\u53ef\u53c2\u8003\u9a71\u52a8\u7b2c\u4e8c\u5929\u91cc\u7684\u4e2d\u65ad","title":"6.3 \u4ece\u67e5\u627e\u5230\u7684\u8282\u70b9\u91cc\u9762\u5206\u6790\u8be5\u8282\u70b9\u7684\u4e2d\u65ad\u5c5e\u6027"},{"location":"ARMLinux\u8bbe\u5907\u6811/#7-platform","text":"","title":"7 platform\u9a71\u52a8\u7684\u53d8\u66f4"},{"location":"ARMLinux\u8bbe\u5907\u6811/#_2","text":"https://blog.csdn.net/cosmoslhf/article/details/49364577 https://www.cnblogs.com/chineseboy/p/5235608.html https://blog.csdn.net/21cnbao/article/details/8457546 https://blog.csdn.net/qq_20678703/article/details/49100111","title":"\u53c2\u8003\u94fe\u63a5\uff1a"},{"location":"HarmonyOS\u5f00\u53d1\u677f\u4f7f\u7528\u8fde\u8f7d\u20140.\u5f00\u7bb1/","text":"[HarmonyOS HiSpark AI Camera\u4f7f\u7528\u8fde\u8f7d]\u20140.\u5f00\u7bb1 [HarmonyOS HiSpark AI Camera\u4f7f\u7528\u8fde\u8f7d]\u20140.\u5f00\u7bb1 0\u3001\u5f15\u8a00 HarmonyOS\u56db\u5927\u6280\u672f\u7279\u6027 1\u3001\u5f00\u7bb1 1.1\u3001\u5957\u4ef6\u5f00\u7bb1 1.2\u3001\u5f00\u53d1\u5957\u4ef6\u5168\u5bb6\u798f\u6b63\u9762\u7167 1.3\u3001\u5f00\u53d1\u5957\u4ef6\u7ec4\u88c5 1.4\u3001\u5f00\u53d1\u5957\u4ef6\u4e0a\u7535 2\u3001Hi3516\u5f00\u53d1\u677f\u4ecb\u7ecd 2.1\u5f00\u53d1\u677f\u7b80\u4ecb \u5f00\u53d1\u677f\u89c4\u683c 3\u3001\u786c\u4ef6\u89c4\u683c 3.1\u3001\u4e3b\u8981\u7279\u70b9 \u5904\u7406\u5668\u5185\u6838 \u89c6\u9891\u7f16\u89e3\u7801 \u89c6\u9891\u7f16\u7801\u3001\u89e3\u7801\u5904\u7406\u6027\u80fd \u667a\u80fd\u89c6\u9891\u5206\u6790 3.2\u3001Hi3516DV30 \u89c4\u683c\u4fe1\u606f\uff1a 3.3\u3001Hi3516DV30 \u6846\u67b6\u56fe\uff1a 4\u3001\u603b\u7ed3&\u53c2\u8003\u8d44\u6599 0\u3001\u5f15\u8a00 HarmonyOS\u662f\u4e00\u6b3e\u201c\u9762\u5411\u672a\u6765\u201d\u3001\u9762\u5411\u5168\u573a\u666f\uff08\u79fb\u52a8\u529e\u516c\u3001\u8fd0\u52a8\u5065\u5eb7\u3001\u793e\u4ea4\u901a\u4fe1\u3001\u5a92\u4f53\u5a31\u4e50\u7b49\uff09\u7684\u5206\u5e03\u5f0f\u64cd\u4f5c\u7cfb\u7edf\u3002\u5728\u4f20\u7edf\u7684\u5355\u8bbe\u5907\u7cfb\u7edf\u80fd\u529b\u7684\u57fa\u7840\u4e0a\uff0c\u63d0\u51fa\u4e86\u57fa\u4e8e\u540c\u4e00\u5957\u7cfb\u7edf\u80fd\u529b\u3001\u9002\u914d\u591a\u79cd\u7ec8\u7aef\u5f62\u6001\u7684\u5206\u5e03\u5f0f\u7406\u5ff5\uff0c\u80fd\u591f\u652f\u6301\u591a\u79cd\u7ec8\u7aef\u8bbe\u5907\u3002 HarmonyOS\u56db\u5927\u6280\u672f\u7279\u6027 1.\u5206\u5e03\u5f0f\u67b6\u6784\u9996\u6b21\u7528\u4e8e\u7ec8\u7aefOS\uff0c\u5b9e\u73b0\u8de8\u7ec8\u7aef\u65e0\u7f1d\u534f\u540c\u4f53\u9a8c 2.\u786e\u5b9a\u65f6\u5ef6\u5f15\u64ce\u548c\u9ad8\u6027\u80fdIPC\u6280\u672f\u5b9e\u73b0\u7cfb\u7edf\u5929\u751f\u6d41\u7545 3.\u57fa\u4e8e\u5fae\u5185\u6838\u67b6\u6784\u91cd\u5851\u4e2d\u65ad\u8bbe\u5907\u53ef\u4fe1\u5b89\u5168 4.\u901a\u8fc7\u7edf\u4e00IDE\u652f\u6491\u4e00\u6b21\u5f00\u53d1\uff0c\u591a\u7aef\u90e8\u7f72\uff0c\u5b9e\u73b0\u8de8\u7ec8\u7aef\u751f\u6001\u5171\u4eab 1\u3001\u5f00\u7bb1 1.1\u3001\u5957\u4ef6\u5f00\u7bb1 \u9996\u5148\u62ff\u5230\u7684\u662f\u4e00\u6574\u5957\u5851\u6599\u76d2\u5305\u88c5\u597d\u7684\u5f00\u53d1\u5957\u4ef6\uff0c\u975e\u5e38\u7b80\u6d01\u89c4\u6574\uff0c\u5c01\u9762\u5927\u5927\u7684\u201cAI Camera\u5f00\u53d1\u5957\u4ef6\u201d\u6620\u5165\u773c\u5e18 1.2\u3001\u5f00\u53d1\u5957\u4ef6\u5168\u5bb6\u798f\u6b63\u9762\u7167 \u62c6\u5f00\u5851\u6599\u5305\u88c5\u76d2\u4e4b\u540e\uff0c\u5f97\u5230\u5f00\u53d1\u677f\u5957\u4ef6\u7684\u5168\u5bb6\u798f\uff0c\u53ef\u89c1\u914d\u4ef6\u9f50\u5168\uff0c\u87ba\u4e1d\u3001\u652f\u67b6\u5e94\u6709\u5c3d\u6709\uff1a 1.3\u3001\u5f00\u53d1\u5957\u4ef6\u7ec4\u88c5 \u5c06\u4e0a\u9762\u7684\u6240\u6709\u914d\u4ef6\u6309\u7167\u63d0\u4f9b\u7684 \u7ec4\u88c5\u89c6\u9891 \u8fdb\u884c\u7ec4\u88c5\uff0c\u6210\u529f\u540e\u5f97\u5230\u5982\u4e0b\u6240\u793a\u7684\u5e26\u5c4f\u52a0\u5f00\u53d1\u5957\u4ef6\uff1a 1.4\u3001\u5f00\u53d1\u5957\u4ef6\u4e0a\u7535 \u5c06\u7ec4\u88c5\u6210\u529f\u7684\u5f00\u53d1\u5957\u4ef6\u5728\u80cc\u9762TypeC\u63a5\u53e3\u4e0a\u7535\u540e\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u5373\u8fdb\u5165\u5f00\u673a\u7684Demo\u7a0b\u5e8f\uff0cPS:\u8fd9\u91cc\u672a\u5f97\u6444\u50cf\u5934\u76d6\u5b50\u6253\u5f00\uff1a 2\u3001Hi3516\u5f00\u53d1\u677f\u4ecb\u7ecd 2.1\u5f00\u53d1\u677f\u7b80\u4ecb Hi3516DV300\u4f5c\u4e3a\u65b0\u4e00\u4ee3\u884c\u4e1a\u4e13\u7528Smart HD IP\u6444\u50cf\u673aSOC\uff0c\u96c6\u6210\u65b0\u4e00\u4ee3ISP\u3001\u4e1a\u754c\u6700\u65b0\u7684H.265\u89c6\u9891\u538b\u7f29\u7f16\u7801\u5668\uff0c\u540c\u65f6\u96c6\u6210\u9ad8\u6027\u80fdNNIE\u5f15\u64ce\uff0c\u4f7f\u5f97Hi3516DV300\u5728\u4f4e\u7801\u7387\u3001\u9ad8\u753b\u8d28\u3001\u667a\u80fd\u5904\u7406\u548c\u5206\u6790\u3001\u4f4e\u529f\u8017\u7b49\u65b9\u9762\u5f15\u9886\u884c\u4e1a\u6c34\u5e73\u3002 \u5f00\u53d1\u677f\u89c4\u683c \u89c4\u683c\u7c7b\u578b \u89c4\u683c\u6e05\u5355 \u5904\u7406\u5668\u53ca\u5185\u90e8\u5b58\u50a8 Hi3516DV300\u82af\u7247 DDR3 1GB eMMC4.5\uff0c8GB\u5bb9\u91cf \u5916\u90e8\u5668\u4ef6 \u4ee5\u592a\u7f51\u53e3 \u97f3\u9891\u89c6\u9891 1\u8def\u8bed\u97f3\u8f93\u5165 1\u8def\u5355\u58f0\u9053(AC_L)\u8f93\u51fa\uff0c\u63a53W\u529f\u653e(LM4871) MicroHDMI\uff081\u8defHDMI 1.4\uff09 \u6444\u50cf\u5934 \u4f20\u611f\u5668IMX335 \u955c\u5934M12\uff0c\u7126\u8ddd4mm\uff0c\u5149\u57081.8 \u663e\u793a\u5c4f LCD\u8fde\u63a5\u5668\uff082.35\u5bf8\uff09 LCD\u8fde\u63a5\u5668\uff085.5\u5bf8\uff09 \u5916\u90e8\u5668\u4ef6\u53ca\u63a5\u53e3 SD\u5361\u63a5\u53e3 JTAG/I2S \u63a5\u53e3 ADC\u63a5\u53e3 \u8235\u673a\u63a5\u53e3 Grove\u8fde\u63a5\u5668 USB2.0(Type C) \u529f\u80fd\u6309\u952e3\u4e2a\uff0c2\u4e2a\u7528\u6237\u81ea\u5b9a\u4e49\u6309\u952e\uff0c1\u4e2a\u5347\u7ea7\u6309\u952e LED\u6307\u793a\u706f\uff0c\u7eff\u706f\uff0c\u7ea2\u706f 3\u3001\u786c\u4ef6\u89c4\u683c Hi3516DV500\u662f\u4e13\u4e3a\u884c\u4e1a\u4e13\u7528\u7684\u667a\u80fd\u9ad8\u6e05IP\u6444\u50cf\u673a\u8bbe\u8ba1\u7684\u65b0\u4e00\u4ee3SoC\u3002\u5b83\u5f15\u5165\u4e86\u65b0\u4e00\u4ee3ISP\uff0c\u6700\u65b0\u7684H.265\u89c6\u9891\u538b\u7f29\u7f16\u7801\u5668\u548c\u9ad8\u6027\u80fdNNIE\u5f15\u64ce\u3002\u5b83\u5728\u4f4e\u6bd4\u7279\u7387\uff0c\u9ad8\u56fe\u50cf\u8d28\u91cf\uff0c\u667a\u80fd\u5904\u7406\u548c\u5206\u6790\u4ee5\u53ca\u4f4e\u529f\u8017\u65b9\u9762\u7684\u4f18\u52bf\u53ef\u4ee5\u8d85\u8fc7\u5ba2\u6237\u7684\u8981\u6c42\u3002 3.1\u3001\u4e3b\u8981\u7279\u70b9 \u5904\u7406\u5668\u5185\u6838 \u53cc\u6838 ARM Cortex-A7@900MHz,32 KB I-Cach 32KB D-Cache, 256KB L2 Cache \u652f\u6301NEON\u52a0\u901f,\u96c6\u6210FPU\u5904\u7406\u5355\u5143 \u89c6\u9891\u7f16\u89e3\u7801 H. 264 BP/MP/HP H 265 Main profile \u652f\u6301IP\u5e27,\u652f\u6301 Smart P\u53c2\u8003 MJPEG/JPEG Baseline\u7f16\u7801 \u89c6\u9891\u7f16\u7801\u3001\u89e3\u7801\u5904\u7406\u6027\u80fd H264/H265\u7f16\u89e3\u7801\u6700\u5927\u5bbd\u5ea62688,\u6700\u5927\u5206\u8fa8\u73872688x1944,\u4ec5\u652f\u6301\u89e3\u7801\u81ea\u8eab\u7f16\u7801\u7801\u6d41 H264H.265\u591a\u7801\u6d41\u5b9e\u65f6\u7f16\u7801(\u89e3\u7801)\u80fd\u529b: 2688x1536@30ps\u7f16\u7801+720x480@30fps\u7f16\u7801 +360x240@30fps\u7f16\u7801 2688x1944@20ips\u7f16\u7801+720x480@20fps\u7f16\u7801 +360x240@20fps\u7f16\u7801 1920x1080@30fps\u7f16\u7801+720x480@30fps\u7f16\u7801 +1920x1080@30fps\u89e3\u7801 JPEG\u7f16\u7801\u3001\u89e3\u7801\u80fd\u529b: 16M(4608x3456)@l0fps \u652f\u6301 CBR/VBR/ FIXQP/AVBR/QPMAP\u4e94\u79cd\u7801\u7387\u63a7\u5236\u6a21\u5f0f \u8f93\u51fa\u7801\u7387\u6700\u9ad850Mbps \u652f\u63018\u4e2a\u611f\u5174\u8da3\u533a\u57df(ROI)\u7f16\u7801 \u667a\u80fd\u89c6\u9891\u5206\u6790 \u96c6\u6210\u795e\u7ecf\u7f51\u7edc\u52a0\u901f\u5f15\u64ce,\u5904\u7406\u6027\u80fd\u8fbe1.0Tops \u96c6\u6210\u667a\u80fd\u8ba1\u7b97\u52a0\u901f\u5f15\u64ce(\u542b\u8ddf\u8e2a\u3001\u4eba\u8138\u6821\u6b63) 3.2\u3001Hi3516DV30 \u89c4\u683c\u4fe1\u606f\uff1a \u795e\u7ecf\u7f51\u7edc\u52a0\u901f\u5f15\u64ce Hi3516DV300\u914d\u5907\u4e861T CNN\u795e\u7ecf\u7f51\u7edc\u52a0\u901f\u5f15\u64ce\u3002\u8fd9\u662f\u63d0\u9ad8\u5728\u89c6\u9891\u76d1\u63a7\u5e02\u573a\u4e2d\u652f\u6301AI\u5e94\u7528\u7684\u80fd\u529b\u7684\u5173\u952e\uff0c\u4f8b\u5982\u667a\u80fd\u8fd0\u52a8\u68c0\u6d4b\uff0c\u9762\u90e8\u8bc6\u522b\u7b49\u3002 KCF\u548c\u9762\u90e8\u6807\u51c6\u5316\u6a21\u5757 Hi3516DV300\u652f\u6301KCF\u548c\u4eba\u8138\u5f52\u4e00\u5316\u6a21\u5757\uff0c\u53ef\u4ee5\u6700\u5927\u7a0b\u5ea6\u5730\u63d0\u9ad8\u7269\u4f53\u8ddf\u8e2a\u7684\u7cbe\u5ea6\u548c\u4eba\u8138\u5e94\u7528\u7684\u53ef\u7528\u6027\u3002 \u5148\u8fdb\u7684WDR\u6280\u672f\u548c8K-NR\u6280\u672f \u4e0e\u6d77\u601d\u4e0a\u4e00\u4ee3\u4ea7\u54c1\u76f8\u6bd4\uff0cHi3516DV300\u91c7\u7528Advanced-WDR\u6280\u672f\u548c8D-NR\u6280\u672f\uff0c\u53ef\u6709\u6548\u63d0\u9ad8\u89c6\u9891\u8d28\u91cf\u3002 \u5b89\u5168\u542f\u52a8\u548c\u786c\u4ef6\u9694\u79bb\u7cfb\u7edf Hi3516DV300\u7684\u7cfb\u7edf\u914d\u6709\u5b89\u5168\u542f\u52a8\u548c\u786c\u4ef6\u9694\u79bb\u7cfb\u7edf\uff0c\u53ef\u4fdd\u62a4\u5ba2\u6237\u7684\u4ea7\u54c1\u548c\u76f8\u673a\u4e2d\u7684\u654f\u611f\u6570\u636e\u3002 \u89e3\u7801\u5668\u6a21\u5757\u548c\u672c\u5730\u663e\u793a\u63a5\u53e3 Hi3516DV300\u652f\u6301\u89e3\u7801\u5668\u6a21\u5757\u548c\u672c\u5730\u663e\u793a\u63a5\u53e3\uff0c\u56e0\u6b64\u4e5f\u975e\u5e38\u9002\u7528\u4e8e\u8003\u52e4\u548c\u95e8\u7981\u4ea7\u54c1\u3002 3.3\u3001Hi3516DV30 \u6846\u67b6\u56fe\uff1a 4\u3001\u603b\u7ed3&\u53c2\u8003\u8d44\u6599 \u5165\u95e8\u6307\u5357 \u9e3f\u8499OS\u6307\u5357 \u6e90\u7801\u83b7\u53d6","title":"0.\u5f00\u7bb1"},{"location":"HarmonyOS\u5f00\u53d1\u677f\u4f7f\u7528\u8fde\u8f7d\u20140.\u5f00\u7bb1/#harmonyos-hispark-ai-camera0","text":"[HarmonyOS HiSpark AI Camera\u4f7f\u7528\u8fde\u8f7d]\u20140.\u5f00\u7bb1 0\u3001\u5f15\u8a00 HarmonyOS\u56db\u5927\u6280\u672f\u7279\u6027 1\u3001\u5f00\u7bb1 1.1\u3001\u5957\u4ef6\u5f00\u7bb1 1.2\u3001\u5f00\u53d1\u5957\u4ef6\u5168\u5bb6\u798f\u6b63\u9762\u7167 1.3\u3001\u5f00\u53d1\u5957\u4ef6\u7ec4\u88c5 1.4\u3001\u5f00\u53d1\u5957\u4ef6\u4e0a\u7535 2\u3001Hi3516\u5f00\u53d1\u677f\u4ecb\u7ecd 2.1\u5f00\u53d1\u677f\u7b80\u4ecb \u5f00\u53d1\u677f\u89c4\u683c 3\u3001\u786c\u4ef6\u89c4\u683c 3.1\u3001\u4e3b\u8981\u7279\u70b9 \u5904\u7406\u5668\u5185\u6838 \u89c6\u9891\u7f16\u89e3\u7801 \u89c6\u9891\u7f16\u7801\u3001\u89e3\u7801\u5904\u7406\u6027\u80fd \u667a\u80fd\u89c6\u9891\u5206\u6790 3.2\u3001Hi3516DV30 \u89c4\u683c\u4fe1\u606f\uff1a 3.3\u3001Hi3516DV30 \u6846\u67b6\u56fe\uff1a 4\u3001\u603b\u7ed3&\u53c2\u8003\u8d44\u6599","title":"[HarmonyOS HiSpark AI Camera\u4f7f\u7528\u8fde\u8f7d]\u20140.\u5f00\u7bb1"},{"location":"HarmonyOS\u5f00\u53d1\u677f\u4f7f\u7528\u8fde\u8f7d\u20140.\u5f00\u7bb1/#0","text":"HarmonyOS\u662f\u4e00\u6b3e\u201c\u9762\u5411\u672a\u6765\u201d\u3001\u9762\u5411\u5168\u573a\u666f\uff08\u79fb\u52a8\u529e\u516c\u3001\u8fd0\u52a8\u5065\u5eb7\u3001\u793e\u4ea4\u901a\u4fe1\u3001\u5a92\u4f53\u5a31\u4e50\u7b49\uff09\u7684\u5206\u5e03\u5f0f\u64cd\u4f5c\u7cfb\u7edf\u3002\u5728\u4f20\u7edf\u7684\u5355\u8bbe\u5907\u7cfb\u7edf\u80fd\u529b\u7684\u57fa\u7840\u4e0a\uff0c\u63d0\u51fa\u4e86\u57fa\u4e8e\u540c\u4e00\u5957\u7cfb\u7edf\u80fd\u529b\u3001\u9002\u914d\u591a\u79cd\u7ec8\u7aef\u5f62\u6001\u7684\u5206\u5e03\u5f0f\u7406\u5ff5\uff0c\u80fd\u591f\u652f\u6301\u591a\u79cd\u7ec8\u7aef\u8bbe\u5907\u3002","title":"0\u3001\u5f15\u8a00"},{"location":"HarmonyOS\u5f00\u53d1\u677f\u4f7f\u7528\u8fde\u8f7d\u20140.\u5f00\u7bb1/#harmonyos","text":"1.\u5206\u5e03\u5f0f\u67b6\u6784\u9996\u6b21\u7528\u4e8e\u7ec8\u7aefOS\uff0c\u5b9e\u73b0\u8de8\u7ec8\u7aef\u65e0\u7f1d\u534f\u540c\u4f53\u9a8c 2.\u786e\u5b9a\u65f6\u5ef6\u5f15\u64ce\u548c\u9ad8\u6027\u80fdIPC\u6280\u672f\u5b9e\u73b0\u7cfb\u7edf\u5929\u751f\u6d41\u7545 3.\u57fa\u4e8e\u5fae\u5185\u6838\u67b6\u6784\u91cd\u5851\u4e2d\u65ad\u8bbe\u5907\u53ef\u4fe1\u5b89\u5168 4.\u901a\u8fc7\u7edf\u4e00IDE\u652f\u6491\u4e00\u6b21\u5f00\u53d1\uff0c\u591a\u7aef\u90e8\u7f72\uff0c\u5b9e\u73b0\u8de8\u7ec8\u7aef\u751f\u6001\u5171\u4eab","title":"HarmonyOS\u56db\u5927\u6280\u672f\u7279\u6027"},{"location":"HarmonyOS\u5f00\u53d1\u677f\u4f7f\u7528\u8fde\u8f7d\u20140.\u5f00\u7bb1/#1","text":"","title":"1\u3001\u5f00\u7bb1"},{"location":"HarmonyOS\u5f00\u53d1\u677f\u4f7f\u7528\u8fde\u8f7d\u20140.\u5f00\u7bb1/#11","text":"\u9996\u5148\u62ff\u5230\u7684\u662f\u4e00\u6574\u5957\u5851\u6599\u76d2\u5305\u88c5\u597d\u7684\u5f00\u53d1\u5957\u4ef6\uff0c\u975e\u5e38\u7b80\u6d01\u89c4\u6574\uff0c\u5c01\u9762\u5927\u5927\u7684\u201cAI Camera\u5f00\u53d1\u5957\u4ef6\u201d\u6620\u5165\u773c\u5e18","title":"1.1\u3001\u5957\u4ef6\u5f00\u7bb1"},{"location":"HarmonyOS\u5f00\u53d1\u677f\u4f7f\u7528\u8fde\u8f7d\u20140.\u5f00\u7bb1/#12","text":"\u62c6\u5f00\u5851\u6599\u5305\u88c5\u76d2\u4e4b\u540e\uff0c\u5f97\u5230\u5f00\u53d1\u677f\u5957\u4ef6\u7684\u5168\u5bb6\u798f\uff0c\u53ef\u89c1\u914d\u4ef6\u9f50\u5168\uff0c\u87ba\u4e1d\u3001\u652f\u67b6\u5e94\u6709\u5c3d\u6709\uff1a","title":"1.2\u3001\u5f00\u53d1\u5957\u4ef6\u5168\u5bb6\u798f\u6b63\u9762\u7167"},{"location":"HarmonyOS\u5f00\u53d1\u677f\u4f7f\u7528\u8fde\u8f7d\u20140.\u5f00\u7bb1/#13","text":"\u5c06\u4e0a\u9762\u7684\u6240\u6709\u914d\u4ef6\u6309\u7167\u63d0\u4f9b\u7684 \u7ec4\u88c5\u89c6\u9891 \u8fdb\u884c\u7ec4\u88c5\uff0c\u6210\u529f\u540e\u5f97\u5230\u5982\u4e0b\u6240\u793a\u7684\u5e26\u5c4f\u52a0\u5f00\u53d1\u5957\u4ef6\uff1a","title":"1.3\u3001\u5f00\u53d1\u5957\u4ef6\u7ec4\u88c5"},{"location":"HarmonyOS\u5f00\u53d1\u677f\u4f7f\u7528\u8fde\u8f7d\u20140.\u5f00\u7bb1/#14","text":"\u5c06\u7ec4\u88c5\u6210\u529f\u7684\u5f00\u53d1\u5957\u4ef6\u5728\u80cc\u9762TypeC\u63a5\u53e3\u4e0a\u7535\u540e\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u5373\u8fdb\u5165\u5f00\u673a\u7684Demo\u7a0b\u5e8f\uff0cPS:\u8fd9\u91cc\u672a\u5f97\u6444\u50cf\u5934\u76d6\u5b50\u6253\u5f00\uff1a","title":"1.4\u3001\u5f00\u53d1\u5957\u4ef6\u4e0a\u7535"},{"location":"HarmonyOS\u5f00\u53d1\u677f\u4f7f\u7528\u8fde\u8f7d\u20140.\u5f00\u7bb1/#2hi3516","text":"","title":"2\u3001Hi3516\u5f00\u53d1\u677f\u4ecb\u7ecd"},{"location":"HarmonyOS\u5f00\u53d1\u677f\u4f7f\u7528\u8fde\u8f7d\u20140.\u5f00\u7bb1/#21","text":"Hi3516DV300\u4f5c\u4e3a\u65b0\u4e00\u4ee3\u884c\u4e1a\u4e13\u7528Smart HD IP\u6444\u50cf\u673aSOC\uff0c\u96c6\u6210\u65b0\u4e00\u4ee3ISP\u3001\u4e1a\u754c\u6700\u65b0\u7684H.265\u89c6\u9891\u538b\u7f29\u7f16\u7801\u5668\uff0c\u540c\u65f6\u96c6\u6210\u9ad8\u6027\u80fdNNIE\u5f15\u64ce\uff0c\u4f7f\u5f97Hi3516DV300\u5728\u4f4e\u7801\u7387\u3001\u9ad8\u753b\u8d28\u3001\u667a\u80fd\u5904\u7406\u548c\u5206\u6790\u3001\u4f4e\u529f\u8017\u7b49\u65b9\u9762\u5f15\u9886\u884c\u4e1a\u6c34\u5e73\u3002","title":"2.1\u5f00\u53d1\u677f\u7b80\u4ecb"},{"location":"HarmonyOS\u5f00\u53d1\u677f\u4f7f\u7528\u8fde\u8f7d\u20140.\u5f00\u7bb1/#_1","text":"\u89c4\u683c\u7c7b\u578b \u89c4\u683c\u6e05\u5355 \u5904\u7406\u5668\u53ca\u5185\u90e8\u5b58\u50a8 Hi3516DV300\u82af\u7247 DDR3 1GB eMMC4.5\uff0c8GB\u5bb9\u91cf \u5916\u90e8\u5668\u4ef6 \u4ee5\u592a\u7f51\u53e3 \u97f3\u9891\u89c6\u9891 1\u8def\u8bed\u97f3\u8f93\u5165 1\u8def\u5355\u58f0\u9053(AC_L)\u8f93\u51fa\uff0c\u63a53W\u529f\u653e(LM4871) MicroHDMI\uff081\u8defHDMI 1.4\uff09 \u6444\u50cf\u5934 \u4f20\u611f\u5668IMX335 \u955c\u5934M12\uff0c\u7126\u8ddd4mm\uff0c\u5149\u57081.8 \u663e\u793a\u5c4f LCD\u8fde\u63a5\u5668\uff082.35\u5bf8\uff09 LCD\u8fde\u63a5\u5668\uff085.5\u5bf8\uff09 \u5916\u90e8\u5668\u4ef6\u53ca\u63a5\u53e3 SD\u5361\u63a5\u53e3 JTAG/I2S \u63a5\u53e3 ADC\u63a5\u53e3 \u8235\u673a\u63a5\u53e3 Grove\u8fde\u63a5\u5668 USB2.0(Type C) \u529f\u80fd\u6309\u952e3\u4e2a\uff0c2\u4e2a\u7528\u6237\u81ea\u5b9a\u4e49\u6309\u952e\uff0c1\u4e2a\u5347\u7ea7\u6309\u952e LED\u6307\u793a\u706f\uff0c\u7eff\u706f\uff0c\u7ea2\u706f","title":"\u5f00\u53d1\u677f\u89c4\u683c"},{"location":"HarmonyOS\u5f00\u53d1\u677f\u4f7f\u7528\u8fde\u8f7d\u20140.\u5f00\u7bb1/#3","text":"Hi3516DV500\u662f\u4e13\u4e3a\u884c\u4e1a\u4e13\u7528\u7684\u667a\u80fd\u9ad8\u6e05IP\u6444\u50cf\u673a\u8bbe\u8ba1\u7684\u65b0\u4e00\u4ee3SoC\u3002\u5b83\u5f15\u5165\u4e86\u65b0\u4e00\u4ee3ISP\uff0c\u6700\u65b0\u7684H.265\u89c6\u9891\u538b\u7f29\u7f16\u7801\u5668\u548c\u9ad8\u6027\u80fdNNIE\u5f15\u64ce\u3002\u5b83\u5728\u4f4e\u6bd4\u7279\u7387\uff0c\u9ad8\u56fe\u50cf\u8d28\u91cf\uff0c\u667a\u80fd\u5904\u7406\u548c\u5206\u6790\u4ee5\u53ca\u4f4e\u529f\u8017\u65b9\u9762\u7684\u4f18\u52bf\u53ef\u4ee5\u8d85\u8fc7\u5ba2\u6237\u7684\u8981\u6c42\u3002","title":"3\u3001\u786c\u4ef6\u89c4\u683c"},{"location":"HarmonyOS\u5f00\u53d1\u677f\u4f7f\u7528\u8fde\u8f7d\u20140.\u5f00\u7bb1/#31","text":"","title":"3.1\u3001\u4e3b\u8981\u7279\u70b9"},{"location":"HarmonyOS\u5f00\u53d1\u677f\u4f7f\u7528\u8fde\u8f7d\u20140.\u5f00\u7bb1/#_2","text":"\u53cc\u6838 ARM Cortex-A7@900MHz,32 KB I-Cach 32KB D-Cache, 256KB L2 Cache \u652f\u6301NEON\u52a0\u901f,\u96c6\u6210FPU\u5904\u7406\u5355\u5143","title":"\u5904\u7406\u5668\u5185\u6838"},{"location":"HarmonyOS\u5f00\u53d1\u677f\u4f7f\u7528\u8fde\u8f7d\u20140.\u5f00\u7bb1/#_3","text":"H. 264 BP/MP/HP H 265 Main profile \u652f\u6301IP\u5e27,\u652f\u6301 Smart P\u53c2\u8003 MJPEG/JPEG Baseline\u7f16\u7801","title":"\u89c6\u9891\u7f16\u89e3\u7801"},{"location":"HarmonyOS\u5f00\u53d1\u677f\u4f7f\u7528\u8fde\u8f7d\u20140.\u5f00\u7bb1/#_4","text":"H264/H265\u7f16\u89e3\u7801\u6700\u5927\u5bbd\u5ea62688,\u6700\u5927\u5206\u8fa8\u73872688x1944,\u4ec5\u652f\u6301\u89e3\u7801\u81ea\u8eab\u7f16\u7801\u7801\u6d41 H264H.265\u591a\u7801\u6d41\u5b9e\u65f6\u7f16\u7801(\u89e3\u7801)\u80fd\u529b: 2688x1536@30ps\u7f16\u7801+720x480@30fps\u7f16\u7801 +360x240@30fps\u7f16\u7801 2688x1944@20ips\u7f16\u7801+720x480@20fps\u7f16\u7801 +360x240@20fps\u7f16\u7801 1920x1080@30fps\u7f16\u7801+720x480@30fps\u7f16\u7801 +1920x1080@30fps\u89e3\u7801 JPEG\u7f16\u7801\u3001\u89e3\u7801\u80fd\u529b: 16M(4608x3456)@l0fps \u652f\u6301 CBR/VBR/ FIXQP/AVBR/QPMAP\u4e94\u79cd\u7801\u7387\u63a7\u5236\u6a21\u5f0f \u8f93\u51fa\u7801\u7387\u6700\u9ad850Mbps \u652f\u63018\u4e2a\u611f\u5174\u8da3\u533a\u57df(ROI)\u7f16\u7801","title":"\u89c6\u9891\u7f16\u7801\u3001\u89e3\u7801\u5904\u7406\u6027\u80fd"},{"location":"HarmonyOS\u5f00\u53d1\u677f\u4f7f\u7528\u8fde\u8f7d\u20140.\u5f00\u7bb1/#_5","text":"\u96c6\u6210\u795e\u7ecf\u7f51\u7edc\u52a0\u901f\u5f15\u64ce,\u5904\u7406\u6027\u80fd\u8fbe1.0Tops \u96c6\u6210\u667a\u80fd\u8ba1\u7b97\u52a0\u901f\u5f15\u64ce(\u542b\u8ddf\u8e2a\u3001\u4eba\u8138\u6821\u6b63)","title":"\u667a\u80fd\u89c6\u9891\u5206\u6790"},{"location":"HarmonyOS\u5f00\u53d1\u677f\u4f7f\u7528\u8fde\u8f7d\u20140.\u5f00\u7bb1/#32hi3516dv30","text":"\u795e\u7ecf\u7f51\u7edc\u52a0\u901f\u5f15\u64ce Hi3516DV300\u914d\u5907\u4e861T CNN\u795e\u7ecf\u7f51\u7edc\u52a0\u901f\u5f15\u64ce\u3002\u8fd9\u662f\u63d0\u9ad8\u5728\u89c6\u9891\u76d1\u63a7\u5e02\u573a\u4e2d\u652f\u6301AI\u5e94\u7528\u7684\u80fd\u529b\u7684\u5173\u952e\uff0c\u4f8b\u5982\u667a\u80fd\u8fd0\u52a8\u68c0\u6d4b\uff0c\u9762\u90e8\u8bc6\u522b\u7b49\u3002 KCF\u548c\u9762\u90e8\u6807\u51c6\u5316\u6a21\u5757 Hi3516DV300\u652f\u6301KCF\u548c\u4eba\u8138\u5f52\u4e00\u5316\u6a21\u5757\uff0c\u53ef\u4ee5\u6700\u5927\u7a0b\u5ea6\u5730\u63d0\u9ad8\u7269\u4f53\u8ddf\u8e2a\u7684\u7cbe\u5ea6\u548c\u4eba\u8138\u5e94\u7528\u7684\u53ef\u7528\u6027\u3002 \u5148\u8fdb\u7684WDR\u6280\u672f\u548c8K-NR\u6280\u672f \u4e0e\u6d77\u601d\u4e0a\u4e00\u4ee3\u4ea7\u54c1\u76f8\u6bd4\uff0cHi3516DV300\u91c7\u7528Advanced-WDR\u6280\u672f\u548c8D-NR\u6280\u672f\uff0c\u53ef\u6709\u6548\u63d0\u9ad8\u89c6\u9891\u8d28\u91cf\u3002 \u5b89\u5168\u542f\u52a8\u548c\u786c\u4ef6\u9694\u79bb\u7cfb\u7edf Hi3516DV300\u7684\u7cfb\u7edf\u914d\u6709\u5b89\u5168\u542f\u52a8\u548c\u786c\u4ef6\u9694\u79bb\u7cfb\u7edf\uff0c\u53ef\u4fdd\u62a4\u5ba2\u6237\u7684\u4ea7\u54c1\u548c\u76f8\u673a\u4e2d\u7684\u654f\u611f\u6570\u636e\u3002 \u89e3\u7801\u5668\u6a21\u5757\u548c\u672c\u5730\u663e\u793a\u63a5\u53e3 Hi3516DV300\u652f\u6301\u89e3\u7801\u5668\u6a21\u5757\u548c\u672c\u5730\u663e\u793a\u63a5\u53e3\uff0c\u56e0\u6b64\u4e5f\u975e\u5e38\u9002\u7528\u4e8e\u8003\u52e4\u548c\u95e8\u7981\u4ea7\u54c1\u3002","title":"3.2\u3001Hi3516DV30 \u89c4\u683c\u4fe1\u606f\uff1a"},{"location":"HarmonyOS\u5f00\u53d1\u677f\u4f7f\u7528\u8fde\u8f7d\u20140.\u5f00\u7bb1/#33hi3516dv30","text":"","title":"3.3\u3001Hi3516DV30 \u6846\u67b6\u56fe\uff1a"},{"location":"HarmonyOS\u5f00\u53d1\u677f\u4f7f\u7528\u8fde\u8f7d\u20140.\u5f00\u7bb1/#4","text":"\u5165\u95e8\u6307\u5357 \u9e3f\u8499OS\u6307\u5357 \u6e90\u7801\u83b7\u53d6","title":"4\u3001\u603b\u7ed3&amp;\u53c2\u8003\u8d44\u6599"},{"location":"LeezPi-RK3399_Android9\u7f16\u8bd1\u8bf4\u660e/","text":"LeezPi-RK3399_Android9\u56fa\u4ef6\u7f16\u8bd1 LeezPi-RK3399_Android9\u56fa\u4ef6\u7f16\u8bd1 \u51c6\u5907\u5de5\u4f5c \u7f16\u8bd1 \u7f16\u8bd1\u8fc7\u7a0b \u7f16\u8bd1\u5b8c\u6210 \u7f16\u8bd1\u751f\u6210\u56fa\u4ef6 \u51c6\u5907\u5de5\u4f5c \u7f16\u8bd1 Android \u5bf9\u673a\u5668\u7684\u914d\u7f6e\u8981\u6c42\u8f83\u9ad8\uff1a 64 \u4f4d CPU 16GB \u7269\u7406\u5185\u5b58+\u4ea4\u6362\u5185\u5b58 30GB \u7a7a\u95f2\u7684\u78c1\u76d8\u7a7a\u95f4\u7528\u4e8e\u6784\u5efa\uff0c\u6e90\u7801\u6811\u53e6\u5916\u5360\u7528\u5927\u7ea6 25GB \u5b98\u65b9\u63a8\u8350 Ubuntu 14.04 \u64cd\u4f5c\u7cfb\u7edf\uff0c\u7ecf\u6d4b\u8bd5\uff0cUbuntu 12.04 \u4e5f\u53ef\u4ee5\u7f16\u8bd1\u8fd0\u884c\u6210\u529f\uff0c\u53ea\u9700\u8981\u6ee1\u8db3 http://source.android.com/source/building.html \u91cc\u7684\u8f6f\u786c\u4ef6\u914d\u7f6e\u5373\u53ef\u3002\u7f16\u8bd1\u73af\u5883\u7684\u521d\u59cb\u5316\u53ef\u53c2\u8003 http://source.android.com/source/initializing.html \u3002 \u5b89\u88c5 OpenJDK 8: sudo apt-get install openjdk-8-jdk \u63d0\u793a\uff1a\u5b89\u88c5 openjdk-8-jdk\uff0c\u4f1a\u66f4\u6539 JDK \u7684\u9ed8\u8ba4\u94fe\u63a5\uff0c\u8fd9\u65f6\u53ef\u7528\uff1a $ sudo update-alternatives --config java $ sudo update-alternatives --config javac \u6765\u5207\u6362 JDK \u7248\u672c\u3002SDK \u5728\u627e\u4e0d\u5230\u64cd\u4f5c\u7cfb\u7edf\u9ed8\u8ba4 JDK \u7684\u65f6\u5019\u4f1a\u4f7f\u7528\u5185\u90e8\u8bbe\u5b9a\u7684 JDK \u8def\u5f84\uff0c\u56e0\u6b64\uff0c\u4e3a\u4e86\u8ba9\u540c\u4e00\u53f0\u673a\u5668\u53ef\u4ee5\u7f16\u8bd1 Android 5.1 \u53ca\u4e4b\u524d\u7684\u7248\u672c\uff0c\u53bb\u6389\u94fe\u63a5\u66f4\u65b9\u4fbf\uff1a $ sudo /var/lib/dpkg/info/openjdk-8-jdk:amd64.prerm remove Ubuntu 12.04 \u8f6f\u4ef6\u5305\u5b89\u88c5\uff1a sudo apt-get install git gnupg flex bison gperf build-essential \\ zip curl libc6-dev libncurses5-dev:i386 x11proto-core-dev \\ libx11-dev:i386 libreadline6-dev:i386 libgl1-mesa-glx:i386 \\ g++-multilib mingw32 tofrodos gcc-multilib ia32-libs \\ python-markdown libxml2-utils xsltproc zlib1g-dev:i386 \\ lzop libssl1.0.0 libssl-dev Ubuntu 14.04 \u8f6f\u4ef6\u5305\u5b89\u88c5\uff1a sudo apt-get install git-core gnupg flex bison gperf libsdl1.2-dev \\ libesd0-dev libwxgtk2.8-dev squashfs-tools build-essential zip curl \\ libncurses5-dev zlib1g-dev pngcrush schedtool libxml2 libxml2-utils \\ xsltproc lzop libc6-dev schedtool g++-multilib lib32z1-dev lib32ncurses5-dev \\ lib32readline-gplv2-dev gcc-multilib libswitch-perl \\ libssl1.0.0 libssl-dev Ubuntu 18.04 \u8f6f\u4ef6\u5305\u5b89\u88c5\uff1a sudo apt-get install libx11-dev:i386 libreadline6-dev:i386 libgl1-mesa-dev g++-multilib \\ git flex bison gperf build-essential libncurses5-dev:i386 \\ dpkg-dev libsdl1.2-dev libesd0-dev \\ git-core gnupg flex bison gperf build-essential \\ zip curl zlib1g-dev gcc-multilib g++-multilib \\ libc6-dev-i386 lib32ncurses5-dev x11proto-core-dev libx11-dev \\ libgl1-mesa-dev libxml2-utils xsltproc unzip m4 lib32z-dev ccache \\ make make-guile tofrodos python-markdown libxml2-utils xsltproc zlib1g-dev:i386 \u7f16\u8bd1 \u8bbe\u7f6e\u73af\u5883 $ source build/envsetup.sh \u9009\u62e9\u8981\u7f16\u8bd1\u7684\u9879\u76eechestnut\u00d7\u00d7\u00d7\u00d7 $ lunch \u4f7f\u7528\u811a\u672c\u7f16\u8bd1 \u4e0b\u9762\u662f\u7f16\u8bd1\u53c2\u6570\u7684\u8bf4\u660e ./build_leez.sh USAGE: [-S] [-U] [-K] [-A] [-p] [-o] [-u] [-v VERSION_NAME] No ARGS means use default build option -S = build image which boot from sd card -U = build uboot -K = build kernel -A = build android -p = will build packaging in IMAGE -o = build OTA package -u = build update.img -v = build android with 'user' or 'userdebug' \u5982\u679c\u662f\u7f16\u8bd1SD\u5361\u542f\u52a8\u7684Image\uff0c\u4e00\u5b9a\u8981\u5e26-S\u53c2\u6570\u3002\u4f8b\u5982\uff1a \u7f16\u8bd1 uboot\u3001kernel\u3001android\uff0c\u5e76\u6253\u5305\u4e3aupdate.img ./build_leez.sh -SUKAu \u4ec5\u7f16\u8bd1 kernel \u548candroid \u5e76\u6253\u5305\u4e3aupdate.img ./build_leez.sh -SKAu \u5982\u679c\u662f\u7f16\u8bd1emmc\u542f\u52a8\u7684image\uff0c\u4e0d\u7528\u5e26-S \u53c2\u6570\u3002\u5176\u5b83\u7528\u6cd5\u540c\u4e0a\u8ff0\u3002 \u7279\u522b\u6ce8\u610f\uff0csd\u5361\u542f\u52a8\u548cemmc\u542f\u52a8\uff0c\u5176kernel\u3001recovery\u3001fstab \u90fd\u6709\u533a\u522b\u3002\u6240\u4ee5\u5207\u6362\u7f16\u8bd1\u65f6\uff0c\u52a1\u5fc5\u8981\u91cd\u7f16 kernel \u548c android, \u5c31\u662f\u8bf4-KA \u53c2\u6570\u4e00\u5b9a\u8981\u6709\u3002 Note: android9.0\u56e0\u4e3aSD\u5361\u548cemmc\u517c\u5bb9\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u5728\u7f16\u8bd1\u65f6\u6dfb\u52a0-S\u53c2\u6570 \u7f16\u8bd1\u8fc7\u7a0b \u7f16\u8bd1\u5b8c\u6210 \u7f16\u8bd1\u751f\u6210\u56fa\u4ef6 \u751f\u6210\u7684\u56fa\u4ef6\u5728 ./rockdev/Image-chestnut/update.img","title":"2.Android9\u7f16\u8bd1\u8bf4\u660e"},{"location":"LeezPi-RK3399_Android9\u7f16\u8bd1\u8bf4\u660e/#leezpi-rk3399_android9","text":"LeezPi-RK3399_Android9\u56fa\u4ef6\u7f16\u8bd1 \u51c6\u5907\u5de5\u4f5c \u7f16\u8bd1 \u7f16\u8bd1\u8fc7\u7a0b \u7f16\u8bd1\u5b8c\u6210 \u7f16\u8bd1\u751f\u6210\u56fa\u4ef6","title":"LeezPi-RK3399_Android9\u56fa\u4ef6\u7f16\u8bd1"},{"location":"LeezPi-RK3399_Android9\u7f16\u8bd1\u8bf4\u660e/#_1","text":"\u7f16\u8bd1 Android \u5bf9\u673a\u5668\u7684\u914d\u7f6e\u8981\u6c42\u8f83\u9ad8\uff1a 64 \u4f4d CPU 16GB \u7269\u7406\u5185\u5b58+\u4ea4\u6362\u5185\u5b58 30GB \u7a7a\u95f2\u7684\u78c1\u76d8\u7a7a\u95f4\u7528\u4e8e\u6784\u5efa\uff0c\u6e90\u7801\u6811\u53e6\u5916\u5360\u7528\u5927\u7ea6 25GB \u5b98\u65b9\u63a8\u8350 Ubuntu 14.04 \u64cd\u4f5c\u7cfb\u7edf\uff0c\u7ecf\u6d4b\u8bd5\uff0cUbuntu 12.04 \u4e5f\u53ef\u4ee5\u7f16\u8bd1\u8fd0\u884c\u6210\u529f\uff0c\u53ea\u9700\u8981\u6ee1\u8db3 http://source.android.com/source/building.html \u91cc\u7684\u8f6f\u786c\u4ef6\u914d\u7f6e\u5373\u53ef\u3002\u7f16\u8bd1\u73af\u5883\u7684\u521d\u59cb\u5316\u53ef\u53c2\u8003 http://source.android.com/source/initializing.html \u3002 \u5b89\u88c5 OpenJDK 8: sudo apt-get install openjdk-8-jdk \u63d0\u793a\uff1a\u5b89\u88c5 openjdk-8-jdk\uff0c\u4f1a\u66f4\u6539 JDK \u7684\u9ed8\u8ba4\u94fe\u63a5\uff0c\u8fd9\u65f6\u53ef\u7528\uff1a $ sudo update-alternatives --config java $ sudo update-alternatives --config javac \u6765\u5207\u6362 JDK \u7248\u672c\u3002SDK \u5728\u627e\u4e0d\u5230\u64cd\u4f5c\u7cfb\u7edf\u9ed8\u8ba4 JDK \u7684\u65f6\u5019\u4f1a\u4f7f\u7528\u5185\u90e8\u8bbe\u5b9a\u7684 JDK \u8def\u5f84\uff0c\u56e0\u6b64\uff0c\u4e3a\u4e86\u8ba9\u540c\u4e00\u53f0\u673a\u5668\u53ef\u4ee5\u7f16\u8bd1 Android 5.1 \u53ca\u4e4b\u524d\u7684\u7248\u672c\uff0c\u53bb\u6389\u94fe\u63a5\u66f4\u65b9\u4fbf\uff1a $ sudo /var/lib/dpkg/info/openjdk-8-jdk:amd64.prerm remove Ubuntu 12.04 \u8f6f\u4ef6\u5305\u5b89\u88c5\uff1a sudo apt-get install git gnupg flex bison gperf build-essential \\ zip curl libc6-dev libncurses5-dev:i386 x11proto-core-dev \\ libx11-dev:i386 libreadline6-dev:i386 libgl1-mesa-glx:i386 \\ g++-multilib mingw32 tofrodos gcc-multilib ia32-libs \\ python-markdown libxml2-utils xsltproc zlib1g-dev:i386 \\ lzop libssl1.0.0 libssl-dev Ubuntu 14.04 \u8f6f\u4ef6\u5305\u5b89\u88c5\uff1a sudo apt-get install git-core gnupg flex bison gperf libsdl1.2-dev \\ libesd0-dev libwxgtk2.8-dev squashfs-tools build-essential zip curl \\ libncurses5-dev zlib1g-dev pngcrush schedtool libxml2 libxml2-utils \\ xsltproc lzop libc6-dev schedtool g++-multilib lib32z1-dev lib32ncurses5-dev \\ lib32readline-gplv2-dev gcc-multilib libswitch-perl \\ libssl1.0.0 libssl-dev Ubuntu 18.04 \u8f6f\u4ef6\u5305\u5b89\u88c5\uff1a sudo apt-get install libx11-dev:i386 libreadline6-dev:i386 libgl1-mesa-dev g++-multilib \\ git flex bison gperf build-essential libncurses5-dev:i386 \\ dpkg-dev libsdl1.2-dev libesd0-dev \\ git-core gnupg flex bison gperf build-essential \\ zip curl zlib1g-dev gcc-multilib g++-multilib \\ libc6-dev-i386 lib32ncurses5-dev x11proto-core-dev libx11-dev \\ libgl1-mesa-dev libxml2-utils xsltproc unzip m4 lib32z-dev ccache \\ make make-guile tofrodos python-markdown libxml2-utils xsltproc zlib1g-dev:i386","title":"\u51c6\u5907\u5de5\u4f5c"},{"location":"LeezPi-RK3399_Android9\u7f16\u8bd1\u8bf4\u660e/#_2","text":"\u8bbe\u7f6e\u73af\u5883 $ source build/envsetup.sh \u9009\u62e9\u8981\u7f16\u8bd1\u7684\u9879\u76eechestnut\u00d7\u00d7\u00d7\u00d7 $ lunch \u4f7f\u7528\u811a\u672c\u7f16\u8bd1 \u4e0b\u9762\u662f\u7f16\u8bd1\u53c2\u6570\u7684\u8bf4\u660e ./build_leez.sh USAGE: [-S] [-U] [-K] [-A] [-p] [-o] [-u] [-v VERSION_NAME] No ARGS means use default build option -S = build image which boot from sd card -U = build uboot -K = build kernel -A = build android -p = will build packaging in IMAGE -o = build OTA package -u = build update.img -v = build android with 'user' or 'userdebug' \u5982\u679c\u662f\u7f16\u8bd1SD\u5361\u542f\u52a8\u7684Image\uff0c\u4e00\u5b9a\u8981\u5e26-S\u53c2\u6570\u3002\u4f8b\u5982\uff1a \u7f16\u8bd1 uboot\u3001kernel\u3001android\uff0c\u5e76\u6253\u5305\u4e3aupdate.img ./build_leez.sh -SUKAu \u4ec5\u7f16\u8bd1 kernel \u548candroid \u5e76\u6253\u5305\u4e3aupdate.img ./build_leez.sh -SKAu \u5982\u679c\u662f\u7f16\u8bd1emmc\u542f\u52a8\u7684image\uff0c\u4e0d\u7528\u5e26-S \u53c2\u6570\u3002\u5176\u5b83\u7528\u6cd5\u540c\u4e0a\u8ff0\u3002 \u7279\u522b\u6ce8\u610f\uff0csd\u5361\u542f\u52a8\u548cemmc\u542f\u52a8\uff0c\u5176kernel\u3001recovery\u3001fstab \u90fd\u6709\u533a\u522b\u3002\u6240\u4ee5\u5207\u6362\u7f16\u8bd1\u65f6\uff0c\u52a1\u5fc5\u8981\u91cd\u7f16 kernel \u548c android, \u5c31\u662f\u8bf4-KA \u53c2\u6570\u4e00\u5b9a\u8981\u6709\u3002 Note: android9.0\u56e0\u4e3aSD\u5361\u548cemmc\u517c\u5bb9\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u5728\u7f16\u8bd1\u65f6\u6dfb\u52a0-S\u53c2\u6570","title":"\u7f16\u8bd1"},{"location":"LeezPi-RK3399_Android9\u7f16\u8bd1\u8bf4\u660e/#_3","text":"","title":"\u7f16\u8bd1\u8fc7\u7a0b"},{"location":"LeezPi-RK3399_Android9\u7f16\u8bd1\u8bf4\u660e/#_4","text":"","title":"\u7f16\u8bd1\u5b8c\u6210"},{"location":"LeezPi-RK3399_Android9\u7f16\u8bd1\u8bf4\u660e/#_5","text":"\u751f\u6210\u7684\u56fa\u4ef6\u5728 ./rockdev/Image-chestnut/update.img","title":"\u7f16\u8bd1\u751f\u6210\u56fa\u4ef6"},{"location":"LeezPi-RK3399_SDK\u4f7f\u7528/","text":"LeezPi-RK3399_SDK\u4f7f\u7528 LeezPi-RK3399_SDK\u4f7f\u7528 leez-SBC linux-sdk\u4ee3\u7801\u83b7\u53d6 \u83b7\u53d6SDK\u6e90\u7801 1. \u83b7\u53d6repo 2. \u521d\u59cb\u5316\u4ed3\u5e93 3. \u540c\u6b65\u4ee3\u7801 4.\u914d\u7f6e\u7f16\u8bd1\u73af\u5883 5.\u7f16\u8bd1SDK 5.1\u914d\u7f6e\u7f16\u8bd1\u6587\u4ef6 5.2\u5168\u81ea\u52a8\u7f16\u8bd1 5.3\u90e8\u5206\u7f16\u8bd1 5.4\u56fa\u4ef6\u6253\u5305 \u66f4\u65b0\u94fe\u63a5 \u6253\u5305\u56fa\u4ef6 6Buildroot \u4ecb\u7ecd 6.1output \u76ee\u5f55 6.2\u81ea\u5b9a\u4e49 Buildroot 6.2.1\u6a21\u5757\u914d\u7f6e 6.3.2busybox \u914d\u7f6e\u4fee\u6539 6.3.3\u6587\u4ef6\u7cfb\u7edf\u8986\u76d6 7Buildroot \u5b98\u7f51 leez-SBC linux-sdk\u4ee3\u7801\u83b7\u53d6 leez-SBC\u5b98\u65b9 github \u5730\u5740 \u83b7\u53d6SDK\u6e90\u7801 1. \u83b7\u53d6repo https\u65b9\u5f0f git clone https://github.com/leez-SBC/repo.git 2. \u521d\u59cb\u5316\u4ed3\u5e93 \u521b\u5efaleez-sdk \u76ee\u5f55 mkdir leez-sdk && cd leez-sdk Note: \u4f7f\u7528\u4e0a\u9762\u6b65\u9aa4\u83b7\u53d6\u5230\u7684repo \u521d\u59cb\u5316repo\u4ed3\u5e93 ../repo/repo init \\ --repo-url=https://github.com/leez-SBC/repo \\ -u https://github.com/leez-SBC/manifests \\ -b master \\ -m rk3399_linux_release.xml 3. \u540c\u6b65\u4ee3\u7801 Note: \u4f7f\u7528\u4e0a\u9762\u6b65\u9aa4\u83b7\u53d6\u5230\u7684repo ../repo/repo sync Note: \u4e0a\u9762\u547d\u4ee4\u7ecf\u5e38\u4f1a\u56e0\u7f51\u7edc\u800c\u4e2d\u65ad\uff0c\u4f7f\u7528\u4ee5\u4e0b\u811a\u672c\u53ef\u4fdd\u6301\u540c\u6b65 #! /bin/bash ../repo/repo sync while [ $? -ne 0 ]; do ../repo/repo sync done 4.\u914d\u7f6e\u7f16\u8bd1\u73af\u5883 \u5b89\u88c5\u7f16\u8bd1\u6240\u9700\u5de5\u5177\uff0c\u786e\u4fdd\u5de5\u5177\u90fd\u6b63\u786e\u5b89\u88c5\uff1a sudo apt-get install repo git-core gitk git-gui gcc-arm-linux-gnueabihf u-boot-tools device-tree-compiler \\ gcc-aarch64-linux-gnu mtools parted libudev-dev libusb-1.0-0-dev python-linaro-image-tools \\ linaro-image-tools autoconf autotools-dev libsigsegv2 m4 intltool libdrm-dev curl sed make \\ binutils build-essential gcc g++ bash patch gzip bzip2 perl tar cpio python unzip rsync file bc wget \\ libncurses5 libqt4-dev libglib2.0-dev libgtk2.0-dev libglade2-dev cvs git mercurial rsync openssh-client \\ subversion asciidoc w3m dblatex graphviz python-matplotlib libc6:i386 libssl-dev texinfo \\ liblz4-tool genext2fs lib32stdc++6 5.\u7f16\u8bd1SDK 5.1\u914d\u7f6e\u7f16\u8bd1\u6587\u4ef6 \u9009\u62e9\u5f00\u53d1\u677f\u5bf9\u5e94\u7684\u914d\u7f6e\u6587\u4ef6\u3002\u914d\u7f6e\u6587\u4ef6\u4f1a\u94fe\u63a5\u5230 device/rockchip/.BoardConfig.mk \uff0c\u67e5\u770b\u8be5\u6587\u4ef6\u53ef\u786e\u8ba4\u5f53\u524d\u6240\u4f7f\u7528\u7684\u914d\u7f6e\u6587\u4ef6\uff1a ./build.sh BoardConfig_debian.mk # \u6587\u4ef6\u8def\u5f84\u5728 `device/rockchip/rk3399/BoardConfig_debian.mk` \u914d\u7f6e\u6587\u4ef6 device/rockchip/rk3399/BoardConfig_debian.mk \u5982\u4e0b\uff1a #!/bin/bash # Target arch export RK_ARCH=arm64 # Uboot defconfig export RK_UBOOT_DEFCONFIG=rk3399 # Kernel defconfig export RK_KERNEL_DEFCONFIG=rockchip_linux_defconfig # Kernel dts export RK_KERNEL_DTS=rk3399-leez-linux # boot image type export RK_BOOT_IMG=boot.img # kernel image path export RK_KERNEL_IMG=kernel/arch/arm64/boot/Image # parameter for GPT table export RK_PARAMETER=parameter-buildroot.txt # Buildroot config export RK_CFG_BUILDROOT=rockchip_rk3399 # Recovery config export RK_CFG_RECOVERY=rockchip_rk3399_recovery # ramboot config export RK_CFG_RAMBOOT= # Pcba config export RK_CFG_PCBA=rockchip_rk3399_pcba # Build jobs export RK_JOBS=12 # target chip export RK_TARGET_PRODUCT=rk3399 # Set rootfs type, including ext2 ext4 squashfs export RK_ROOTFS_TYPE=ext4 # yocto machine export RK_YOCTO_MACHINE=rockchip-rk3399-sapphire-excavator # rootfs image path export RK_ROOTFS_IMG=rockdev/rootfs.${RK_ROOTFS_TYPE} # Set oem partition type, including ext2 squashfs export RK_OEM_FS_TYPE=ext2 # Set userdata partition type, including ext2, fat export RK_USERDATA_FS_TYPE=ext2 # Set flash type. support <emmc, nand, spi_nand, spi_nor> export RK_STORAGE_TYPE=emmc #OEM config export RK_OEM_DIR=oem_normal #userdata config export RK_USERDATA_DIR=userdata_normal #misc image export RK_MISC=blank-misc.img #choose enable distro module export RK_DISTRO_MODULE= BoardConfig_debian.mk \u6587\u4ef6\u9ed8\u8ba4\u914d\u7f6e\u4e3a\u7f16\u8bd1 Buildroot \u56fa\u4ef6\uff0c\u4e0b\u9762\u5bf9 Buildroot \u76f8\u5173\u914d\u7f6e\u8fdb\u884c\u8bf4\u660e\uff1a # Buildroot config export RK_CFG_BUILDROOT=rockchip_rk3399 # Buildroot \u6839\u6587\u4ef6\u7cfb\u7edf\u914d\u7f6e\u6587\u4ef6 # \u6587\u4ef6\u8def\u5f84\u5728 `buildroot/configs/rockchip_rk3399_defconfig` # Recovery config export RK_CFG_RECOVERY=rockchip_rk3399_recovery # recovery \u6a21\u5f0f\u4e0b\u6839\u6587\u4ef6\u7cfb\u7edf\u914d\u7f6e\u6587\u4ef6\uff08\u53ef\u7701\u7565\uff09 # \u6587\u4ef6\u8def\u5f84\u5728 `buildroot/configs/rockchip_rk3399_recovery_defconfig` # rootfs image path export RK_ROOTFS_IMG=buildroot/output/$RK_CFG_BUILDROOT/images/rootfs.$RK_ROOTFS_TYPE # Buildroot \u6839\u6587\u4ef6\u7cfb\u7edf\u955c\u50cf\u8def\u5f84 # \u672c\u4f8b\u4e2d\uff0c\u6587\u4ef6\u8def\u5f84\u5728 `buildroot/output/rockchip_rk3399/images/rootfs.ext4` # \u6ce8\uff1a\u8be5\u6587\u4ef6\u8def\u5f84\u5c06\u5728\u9996\u6b21\u7f16\u8bd1\u6839\u6587\u4ef6\u7cfb\u7edf\u540e\u751f\u6210 \u6267\u884c\u7f16\u8bd1\u547d\u4ee4\u65f6\uff0c\u5c06\u4f1a\u6839\u636e .mk \u6587\u4ef6\u8fdb\u884c\u7f16\u8bd1\u3002 5.2\u5168\u81ea\u52a8\u7f16\u8bd1 \u5168\u81ea\u52a8\u7f16\u8bd1\u4f1a\u7f16\u8bd1\u5e76\u6253\u5305\u56fa\u4ef6 update.img \uff0c\u751f\u6210\u56fa\u4ef6\u76ee\u5f55 rockdev/ \uff1a ./build.sh 5.3\u90e8\u5206\u7f16\u8bd1 \u7f16\u8bd1 kernel ./build.sh kernel \u7f16\u8bd1 kernel modules ./build.sh modules \u7f16\u8bd1 u-boot ./build.sh uboot \u7f16\u8bd1 rootfs \u7f16\u8bd1 Buildroot rootfs \u7f16\u8bd1 Buildroot \u6839\u6587\u4ef6\u7cfb\u7edf\uff0c\u5c06\u4f1a\u5728 buildroot/output \u751f\u6210\u7f16\u8bd1\u8f93\u51fa\u76ee\u5f55\uff1a ./build.sh buildroot # \u6ce8\uff1a\u786e\u4fdd\u4f5c\u4e3a\u666e\u901a\u7528\u6237\u7f16\u8bd1 Buildroot \u6839\u6587\u4ef6\u7cfb\u7edf\uff0c\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u9519\u8bef\u3002\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u4f1a\u81ea\u52a8\u4e0b\u8f7d\u6240\u9700\u8f6f\u4ef6\u5305\uff0c\u8bf7\u4fdd\u6301\u8054\u7f51\u72b6\u6001 \u7f16\u8bd1 debian9 rootfs ./build.sh debian # \u6ce8\uff1a\u786e\u4fdd\u4f5c\u4e3a\u666e\u901a\u7528\u6237\u7f16\u8bd1 debian9 \u6839\u6587\u4ef6\u7cfb\u7edf\uff0c\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u9519\u8bef\u3002\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u4f1a\u81ea\u52a8\u4e0b\u8f7d\u6240\u9700\u8f6f\u4ef6\u5305\uff0c\u8bf7\u4fdd\u6301\u8054\u7f51\u72b6\u6001 \u7f16\u8bd1 debian10 rootfs ./build.sh distro # \u6ce8\uff1a\u786e\u4fdd\u4f5c\u4e3a\u666e\u901a\u7528\u6237\u7f16\u8bd1 debian10 \u6839\u6587\u4ef6\u7cfb\u7edf\uff0c\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u9519\u8bef\u3002\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u4f1a\u81ea\u52a8\u4e0b\u8f7d\u6240\u9700\u8f6f\u4ef6\u5305\uff0c\u8bf7\u4fdd\u6301\u8054\u7f51\u72b6\u6001 \u7f16\u8bd1 yocto rootfs ./build.sh yocto # \u6ce8\uff1a\u786e\u4fdd\u4f5c\u4e3a\u666e\u901a\u7528\u6237\u7f16\u8bd1 yocto \u6839\u6587\u4ef6\u7cfb\u7edf\uff0c\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u9519\u8bef\u3002\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u4f1a\u81ea\u52a8\u4e0b\u8f7d\u6240\u9700\u8f6f\u4ef6\u5305\uff0c\u8bf7\u4fdd\u6301\u8054\u7f51\u72b6\u6001 \u7f16\u8bd1 recovery ./build.sh recovery # \u6ce8\uff1a\u786e\u4fdd\u4f5c\u4e3a\u666e\u901a\u7528\u6237\u7f16\u8bd1 yocto \u6839\u6587\u4ef6\u7cfb\u7edf\uff0c\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u9519\u8bef\u3002\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u4f1a\u81ea\u52a8\u4e0b\u8f7d\u6240\u9700\u8f6f\u4ef6\u5305\uff0c\u8bf7\u4fdd\u6301\u8054\u7f51\u72b6\u6001 5.4\u56fa\u4ef6\u6253\u5305 \u66f4\u65b0\u94fe\u63a5 \u4e3a\u786e\u4fdd rockdev/ \u76ee\u5f55\u4e0b\u6587\u4ef6\u94fe\u63a5\u6b63\u786e\uff0c\u66f4\u65b0\u5404\u90e8\u5206\u955c\u50cf\u94fe\u63a5\uff1a ./mkfirmware.sh \u6253\u5305\u56fa\u4ef6 \u5c06 rockdev \u76ee\u5f55\u7684\u5404\u90e8\u5206\u955c\u50cf\u6253\u5305\u6210\u56fa\u4ef6 update.img \uff1a ./build.sh updateimg 6Buildroot \u4ecb\u7ecd 6.1output \u76ee\u5f55 Buildroot \u7f16\u8bd1\u8f93\u51fa\u7ed3\u679c\u4fdd\u5b58\u5728 output \u76ee\u5f55\uff0c\u5177\u4f53\u76ee\u5f55\u7531\u914d\u7f6e\u6587\u4ef6\u51b3\u5b9a\uff0c\u672c\u4f8b\u4fdd\u5b58\u5728 buildroot/output/rockchip_rk3399 \u76ee\u5f55\uff0c\u540e\u7eed\u53ef\u4ee5\u5728\u8be5\u76ee\u5f55\u6267\u884c make \u7f16\u8bd1\u6839\u6587\u4ef6\u7cfb\u7edf\u3002 \u91c7\u7528\u5168\u81ea\u52a8\u7f16\u8bd1\u65b9\u5f0f\u65f6\uff0c\u9ed8\u8ba4\u4f1a\u751f\u6210 buildroot/output/rockchip_rk3399_recovery \u76ee\u5f55\uff0c\u8fd9\u662f recovery \u7684\u7f16\u8bd1\u8f93\u51fa\u76ee\u5f55\u3002 \u5b50\u76ee\u5f55\u8bf4\u660e\uff1a build/ \u5305\u542b\u6240\u6709\u7684\u6e90\u6587\u4ef6\uff0c\u5305\u62ec Buildroot \u6240\u9700\u4e3b\u673a\u5de5\u5177\u548c\u9009\u62e9\u7684\u5305\uff0c\u8fd9\u4e2a\u76ee\u5f55\u5305\u542b\u6240\u6709 \u6a21\u5757\u6e90\u7801\u3002 host/ \u4e3b\u673a\u7aef\u7f16\u8bd1\u9700\u8981\u7684\u5de5\u5177\u5305\u62ec\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u3002 images/ \u5305\u542b\u538b\u7f29\u597d\u7684\u6839\u6587\u4ef6\u7cfb\u7edf\u955c\u50cf\u6587\u4ef6\u3002 staging/ \u8fd9\u4e2a\u76ee\u5f55\u7c7b\u4f3c\u6839\u6587\u4ef6\u7cfb\u7edf\u7684\u76ee\u5f55\u7ed3\u6784\uff0c\u5305\u542b\u7f16\u8bd1\u751f\u6210\u7684\u6240\u6709\u5934\u6587\u4ef6\u548c\u5e93\uff0c\u4ee5\u53ca\u5176\u4ed6\u5f00\u53d1\u6587\u4ef6\uff0c\u4e0d\u8fc7\u4ed6\u4eec\u6ca1\u6709\u88c1\u526a\uff0c\u6bd4\u8f83\u5e9e\u5927\uff0c\u4e0d\u9002\u7528\u4e8e\u76ee\u6807\u6587\u4ef6\u7cfb\u7edf\u3002 target/ \u5305\u542b\u5b8c\u6574\u7684\u6839\u6587\u4ef6\u7cfb\u7edf\uff0c\u5bf9\u6bd4 staging/ \uff0c\u5b83\u6ca1\u6709\u5f00\u53d1\u6587\u4ef6\uff0c\u4e0d\u5305\u542b\u5934\u6587\u4ef6\uff0c\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e5f\u7ecf\u8fc7 strip \u5904\u7406\u3002 6.2\u81ea\u5b9a\u4e49 Buildroot \u4e0b\u6587\u5c06\u4ecb\u7ecd\u4e00\u4e9b\u81ea\u5b9a\u4e49 Buildroot \u7684\u65b9\u6cd5\u3002 6.2.1\u6a21\u5757\u914d\u7f6e \u9ed8\u8ba4\u7f16\u8bd1\u597d\u7684\u6839\u6587\u4ef6\u7cfb\u7edf\u4e0d\u4e00\u5b9a\u6ee1\u8db3\u6211\u4eec\u7684\u9700\u6c42\uff0c\u6211\u4eec\u53ef\u80fd\u9700\u8981\u589e\u52a0\u4e00\u4e9b\u7b2c\u4e09\u65b9\u5305\uff0c\u6216\u8005\u4fee\u6539\u5305\u7684\u914d\u7f6e\u9009\u9879\uff0cBuildroot \u652f\u6301\u56fe\u5f62\u5316\u65b9\u5f0f\u53bb\u505a\u9009\u62e9\u914d\u7f6e\uff1a cd buildroot/output/rockchip_rk3399/ # \u8fdb\u5165\u56fe\u5f62\u5316\u914d\u7f6e\u754c\u9762\uff0c\u9009\u62e9\u6240\u9700\u6a21\u5757\uff0c\u4fdd\u5b58\u9000\u51fa make menuconfig # \u4fdd\u5b58\u5230\u914d\u7f6e\u6587\u4ef6 'buildroot/configs/rockchip_rk3399_defconfig' make savedefconfig #\u7f16\u8bd1 Buildroot \u6839\u6587\u4ef6\u7cfb\u7edf make \u9700\u8981\u4e86\u89e3\u7684\u662f\uff1a \u8fdb\u884c\u7f16\u8bd1\u65f6\uff0cBuildroot \u6839\u636e\u914d\u7f6e\uff0c\u4f1a\u81ea\u52a8\u4ece\u7f51\u7edc\u83b7\u53d6\u76f8\u5173\u7684\u8f6f\u4ef6\u5305\uff0c\u5305\u62ec\u4e00\u4e9b\u7b2c\u4e09\u65b9\u5e93\uff0c\u63d2\u4ef6\uff0c\u5b9e\u7528\u5de5\u5177\u7b49\uff0c\u653e\u5728dl/\u76ee\u5f55\u3002 \u8f6f\u4ef6\u5305\u4f1a\u89e3\u538b\u5728 output/build/ \u76ee\u5f55\u4e0b\uff0c\u7136\u540e\u8fdb\u884c\u7f16\u8bd1\u3002 \u5982\u679c\u8981\u4fee\u6539\u8f6f\u4ef6\u5305\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u901a\u8fc7\u6253\u8865\u4e01\u7684\u65b9\u5f0f\u8fdb\u884c\u4fee\u6539\uff0c\u8865\u4e01\u96c6\u4e2d\u653e\u5728 package/ \u76ee\u5f55\uff0cBuildroot \u4f1a\u5728\u89e3\u538b\u8f6f\u4ef6\u5305\u65f6\u4e3a\u5176\u6253\u4e0a\u76f8\u5e94\u7684\u8865\u4e01\u3002 6.3.2busybox \u914d\u7f6e\u4fee\u6539 busybox \u7528\u4e8e\u7ba1\u7406\u7cfb\u7edf\u7684\u547d\u4ee4\u5de5\u5177\uff0c\u53ef\u6309\u5982\u4e0b\u65b9\u5f0f\u4fee\u6539\uff1a cd buildroot/output/rockchip_rk3399/ # \u8fdb\u5165\u56fe\u5f62\u5316\u914d\u7f6e\u754c\u9762\uff0c\u9009\u62e9\u6240\u9700\u5de5\u5177\uff0c\u9000\u51fa\u4fdd\u5b58 make busybox-menuconfig # \u4fdd\u5b58\u5230\u914d\u7f6e\u6587\u4ef6 `board/rockchip/common/base/busybox.config` make busybox-update-config make 6.3.3\u6587\u4ef6\u7cfb\u7edf\u8986\u76d6 \u6587\u4ef6\u7cfb\u7edf\u8986\u76d6\u662f\u6307\u5728\u76ee\u6807\u6587\u4ef6\u7cfb\u7edf\u7f16\u8bd1\u5b8c\u6210\u540e\u5c06\u6587\u4ef6\u8986\u76d6\u5230\u6587\u4ef6\u7cfb\u7edf\u76ee\u5f55\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u7684\u6dfb\u52a0\u6216\u4fee\u6539\u4e00\u4e9b\u6587\u4ef6\uff1a \u672c\u4f8b\u8986\u76d6\u76ee\u5f55 buildroot/board/rockchip/rk3399/fs-overlay-64 \u516c\u6709\u8986\u76d6\u76ee\u5f55 buildroot/board/rockchip/common \u4f8b\uff1a buildroot/board/rockchip/rk3399/fs-overlay-64/etc/input-event-daemon.conf \u5c06\u8986\u76d6\u6587\u4ef6\u7cfb\u7edf\u7684 /etc/input-event-daemon.conf \u6587\u4ef6\u3002 7Buildroot \u5b98\u7f51 \u66f4\u52a0\u8be6\u7ec6\u5177\u4f53\u7684\u5f00\u53d1\u6280\u5de7\u53ef\u5230 Buildroot \u5b98\u7f51\u5b66\u4e60\u3002 Buildroot \u5b98\u7f51 Buildroot \u5f00\u53d1\u624b\u518c","title":"1.SDK\u4f7f\u7528\u8bf4\u660e"},{"location":"LeezPi-RK3399_SDK\u4f7f\u7528/#leezpi-rk3399_sdk","text":"LeezPi-RK3399_SDK\u4f7f\u7528 leez-SBC linux-sdk\u4ee3\u7801\u83b7\u53d6 \u83b7\u53d6SDK\u6e90\u7801 1. \u83b7\u53d6repo 2. \u521d\u59cb\u5316\u4ed3\u5e93 3. \u540c\u6b65\u4ee3\u7801 4.\u914d\u7f6e\u7f16\u8bd1\u73af\u5883 5.\u7f16\u8bd1SDK 5.1\u914d\u7f6e\u7f16\u8bd1\u6587\u4ef6 5.2\u5168\u81ea\u52a8\u7f16\u8bd1 5.3\u90e8\u5206\u7f16\u8bd1 5.4\u56fa\u4ef6\u6253\u5305 \u66f4\u65b0\u94fe\u63a5 \u6253\u5305\u56fa\u4ef6 6Buildroot \u4ecb\u7ecd 6.1output \u76ee\u5f55 6.2\u81ea\u5b9a\u4e49 Buildroot 6.2.1\u6a21\u5757\u914d\u7f6e 6.3.2busybox \u914d\u7f6e\u4fee\u6539 6.3.3\u6587\u4ef6\u7cfb\u7edf\u8986\u76d6 7Buildroot \u5b98\u7f51","title":"LeezPi-RK3399_SDK\u4f7f\u7528"},{"location":"LeezPi-RK3399_SDK\u4f7f\u7528/#leez-sbc-linux-sdk","text":"leez-SBC\u5b98\u65b9 github \u5730\u5740","title":"leez-SBC linux-sdk\u4ee3\u7801\u83b7\u53d6"},{"location":"LeezPi-RK3399_SDK\u4f7f\u7528/#sdk","text":"","title":"\u83b7\u53d6SDK\u6e90\u7801"},{"location":"LeezPi-RK3399_SDK\u4f7f\u7528/#1-repo","text":"https\u65b9\u5f0f git clone https://github.com/leez-SBC/repo.git","title":"1. \u83b7\u53d6repo"},{"location":"LeezPi-RK3399_SDK\u4f7f\u7528/#2","text":"\u521b\u5efaleez-sdk \u76ee\u5f55 mkdir leez-sdk && cd leez-sdk Note: \u4f7f\u7528\u4e0a\u9762\u6b65\u9aa4\u83b7\u53d6\u5230\u7684repo \u521d\u59cb\u5316repo\u4ed3\u5e93 ../repo/repo init \\ --repo-url=https://github.com/leez-SBC/repo \\ -u https://github.com/leez-SBC/manifests \\ -b master \\ -m rk3399_linux_release.xml","title":"2. \u521d\u59cb\u5316\u4ed3\u5e93"},{"location":"LeezPi-RK3399_SDK\u4f7f\u7528/#3","text":"Note: \u4f7f\u7528\u4e0a\u9762\u6b65\u9aa4\u83b7\u53d6\u5230\u7684repo ../repo/repo sync Note: \u4e0a\u9762\u547d\u4ee4\u7ecf\u5e38\u4f1a\u56e0\u7f51\u7edc\u800c\u4e2d\u65ad\uff0c\u4f7f\u7528\u4ee5\u4e0b\u811a\u672c\u53ef\u4fdd\u6301\u540c\u6b65 #! /bin/bash ../repo/repo sync while [ $? -ne 0 ]; do ../repo/repo sync done","title":"3. \u540c\u6b65\u4ee3\u7801"},{"location":"LeezPi-RK3399_SDK\u4f7f\u7528/#4","text":"\u5b89\u88c5\u7f16\u8bd1\u6240\u9700\u5de5\u5177\uff0c\u786e\u4fdd\u5de5\u5177\u90fd\u6b63\u786e\u5b89\u88c5\uff1a sudo apt-get install repo git-core gitk git-gui gcc-arm-linux-gnueabihf u-boot-tools device-tree-compiler \\ gcc-aarch64-linux-gnu mtools parted libudev-dev libusb-1.0-0-dev python-linaro-image-tools \\ linaro-image-tools autoconf autotools-dev libsigsegv2 m4 intltool libdrm-dev curl sed make \\ binutils build-essential gcc g++ bash patch gzip bzip2 perl tar cpio python unzip rsync file bc wget \\ libncurses5 libqt4-dev libglib2.0-dev libgtk2.0-dev libglade2-dev cvs git mercurial rsync openssh-client \\ subversion asciidoc w3m dblatex graphviz python-matplotlib libc6:i386 libssl-dev texinfo \\ liblz4-tool genext2fs lib32stdc++6","title":"4.\u914d\u7f6e\u7f16\u8bd1\u73af\u5883"},{"location":"LeezPi-RK3399_SDK\u4f7f\u7528/#5sdk","text":"","title":"5.\u7f16\u8bd1SDK"},{"location":"LeezPi-RK3399_SDK\u4f7f\u7528/#51","text":"\u9009\u62e9\u5f00\u53d1\u677f\u5bf9\u5e94\u7684\u914d\u7f6e\u6587\u4ef6\u3002\u914d\u7f6e\u6587\u4ef6\u4f1a\u94fe\u63a5\u5230 device/rockchip/.BoardConfig.mk \uff0c\u67e5\u770b\u8be5\u6587\u4ef6\u53ef\u786e\u8ba4\u5f53\u524d\u6240\u4f7f\u7528\u7684\u914d\u7f6e\u6587\u4ef6\uff1a ./build.sh BoardConfig_debian.mk # \u6587\u4ef6\u8def\u5f84\u5728 `device/rockchip/rk3399/BoardConfig_debian.mk` \u914d\u7f6e\u6587\u4ef6 device/rockchip/rk3399/BoardConfig_debian.mk \u5982\u4e0b\uff1a #!/bin/bash # Target arch export RK_ARCH=arm64 # Uboot defconfig export RK_UBOOT_DEFCONFIG=rk3399 # Kernel defconfig export RK_KERNEL_DEFCONFIG=rockchip_linux_defconfig # Kernel dts export RK_KERNEL_DTS=rk3399-leez-linux # boot image type export RK_BOOT_IMG=boot.img # kernel image path export RK_KERNEL_IMG=kernel/arch/arm64/boot/Image # parameter for GPT table export RK_PARAMETER=parameter-buildroot.txt # Buildroot config export RK_CFG_BUILDROOT=rockchip_rk3399 # Recovery config export RK_CFG_RECOVERY=rockchip_rk3399_recovery # ramboot config export RK_CFG_RAMBOOT= # Pcba config export RK_CFG_PCBA=rockchip_rk3399_pcba # Build jobs export RK_JOBS=12 # target chip export RK_TARGET_PRODUCT=rk3399 # Set rootfs type, including ext2 ext4 squashfs export RK_ROOTFS_TYPE=ext4 # yocto machine export RK_YOCTO_MACHINE=rockchip-rk3399-sapphire-excavator # rootfs image path export RK_ROOTFS_IMG=rockdev/rootfs.${RK_ROOTFS_TYPE} # Set oem partition type, including ext2 squashfs export RK_OEM_FS_TYPE=ext2 # Set userdata partition type, including ext2, fat export RK_USERDATA_FS_TYPE=ext2 # Set flash type. support <emmc, nand, spi_nand, spi_nor> export RK_STORAGE_TYPE=emmc #OEM config export RK_OEM_DIR=oem_normal #userdata config export RK_USERDATA_DIR=userdata_normal #misc image export RK_MISC=blank-misc.img #choose enable distro module export RK_DISTRO_MODULE= BoardConfig_debian.mk \u6587\u4ef6\u9ed8\u8ba4\u914d\u7f6e\u4e3a\u7f16\u8bd1 Buildroot \u56fa\u4ef6\uff0c\u4e0b\u9762\u5bf9 Buildroot \u76f8\u5173\u914d\u7f6e\u8fdb\u884c\u8bf4\u660e\uff1a # Buildroot config export RK_CFG_BUILDROOT=rockchip_rk3399 # Buildroot \u6839\u6587\u4ef6\u7cfb\u7edf\u914d\u7f6e\u6587\u4ef6 # \u6587\u4ef6\u8def\u5f84\u5728 `buildroot/configs/rockchip_rk3399_defconfig` # Recovery config export RK_CFG_RECOVERY=rockchip_rk3399_recovery # recovery \u6a21\u5f0f\u4e0b\u6839\u6587\u4ef6\u7cfb\u7edf\u914d\u7f6e\u6587\u4ef6\uff08\u53ef\u7701\u7565\uff09 # \u6587\u4ef6\u8def\u5f84\u5728 `buildroot/configs/rockchip_rk3399_recovery_defconfig` # rootfs image path export RK_ROOTFS_IMG=buildroot/output/$RK_CFG_BUILDROOT/images/rootfs.$RK_ROOTFS_TYPE # Buildroot \u6839\u6587\u4ef6\u7cfb\u7edf\u955c\u50cf\u8def\u5f84 # \u672c\u4f8b\u4e2d\uff0c\u6587\u4ef6\u8def\u5f84\u5728 `buildroot/output/rockchip_rk3399/images/rootfs.ext4` # \u6ce8\uff1a\u8be5\u6587\u4ef6\u8def\u5f84\u5c06\u5728\u9996\u6b21\u7f16\u8bd1\u6839\u6587\u4ef6\u7cfb\u7edf\u540e\u751f\u6210 \u6267\u884c\u7f16\u8bd1\u547d\u4ee4\u65f6\uff0c\u5c06\u4f1a\u6839\u636e .mk \u6587\u4ef6\u8fdb\u884c\u7f16\u8bd1\u3002","title":"5.1\u914d\u7f6e\u7f16\u8bd1\u6587\u4ef6"},{"location":"LeezPi-RK3399_SDK\u4f7f\u7528/#52","text":"\u5168\u81ea\u52a8\u7f16\u8bd1\u4f1a\u7f16\u8bd1\u5e76\u6253\u5305\u56fa\u4ef6 update.img \uff0c\u751f\u6210\u56fa\u4ef6\u76ee\u5f55 rockdev/ \uff1a ./build.sh","title":"5.2\u5168\u81ea\u52a8\u7f16\u8bd1"},{"location":"LeezPi-RK3399_SDK\u4f7f\u7528/#53","text":"\u7f16\u8bd1 kernel ./build.sh kernel \u7f16\u8bd1 kernel modules ./build.sh modules \u7f16\u8bd1 u-boot ./build.sh uboot \u7f16\u8bd1 rootfs \u7f16\u8bd1 Buildroot rootfs \u7f16\u8bd1 Buildroot \u6839\u6587\u4ef6\u7cfb\u7edf\uff0c\u5c06\u4f1a\u5728 buildroot/output \u751f\u6210\u7f16\u8bd1\u8f93\u51fa\u76ee\u5f55\uff1a ./build.sh buildroot # \u6ce8\uff1a\u786e\u4fdd\u4f5c\u4e3a\u666e\u901a\u7528\u6237\u7f16\u8bd1 Buildroot \u6839\u6587\u4ef6\u7cfb\u7edf\uff0c\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u9519\u8bef\u3002\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u4f1a\u81ea\u52a8\u4e0b\u8f7d\u6240\u9700\u8f6f\u4ef6\u5305\uff0c\u8bf7\u4fdd\u6301\u8054\u7f51\u72b6\u6001 \u7f16\u8bd1 debian9 rootfs ./build.sh debian # \u6ce8\uff1a\u786e\u4fdd\u4f5c\u4e3a\u666e\u901a\u7528\u6237\u7f16\u8bd1 debian9 \u6839\u6587\u4ef6\u7cfb\u7edf\uff0c\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u9519\u8bef\u3002\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u4f1a\u81ea\u52a8\u4e0b\u8f7d\u6240\u9700\u8f6f\u4ef6\u5305\uff0c\u8bf7\u4fdd\u6301\u8054\u7f51\u72b6\u6001 \u7f16\u8bd1 debian10 rootfs ./build.sh distro # \u6ce8\uff1a\u786e\u4fdd\u4f5c\u4e3a\u666e\u901a\u7528\u6237\u7f16\u8bd1 debian10 \u6839\u6587\u4ef6\u7cfb\u7edf\uff0c\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u9519\u8bef\u3002\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u4f1a\u81ea\u52a8\u4e0b\u8f7d\u6240\u9700\u8f6f\u4ef6\u5305\uff0c\u8bf7\u4fdd\u6301\u8054\u7f51\u72b6\u6001 \u7f16\u8bd1 yocto rootfs ./build.sh yocto # \u6ce8\uff1a\u786e\u4fdd\u4f5c\u4e3a\u666e\u901a\u7528\u6237\u7f16\u8bd1 yocto \u6839\u6587\u4ef6\u7cfb\u7edf\uff0c\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u9519\u8bef\u3002\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u4f1a\u81ea\u52a8\u4e0b\u8f7d\u6240\u9700\u8f6f\u4ef6\u5305\uff0c\u8bf7\u4fdd\u6301\u8054\u7f51\u72b6\u6001 \u7f16\u8bd1 recovery ./build.sh recovery # \u6ce8\uff1a\u786e\u4fdd\u4f5c\u4e3a\u666e\u901a\u7528\u6237\u7f16\u8bd1 yocto \u6839\u6587\u4ef6\u7cfb\u7edf\uff0c\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u9519\u8bef\u3002\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u4f1a\u81ea\u52a8\u4e0b\u8f7d\u6240\u9700\u8f6f\u4ef6\u5305\uff0c\u8bf7\u4fdd\u6301\u8054\u7f51\u72b6\u6001","title":"5.3\u90e8\u5206\u7f16\u8bd1"},{"location":"LeezPi-RK3399_SDK\u4f7f\u7528/#54","text":"","title":"5.4\u56fa\u4ef6\u6253\u5305"},{"location":"LeezPi-RK3399_SDK\u4f7f\u7528/#_1","text":"\u4e3a\u786e\u4fdd rockdev/ \u76ee\u5f55\u4e0b\u6587\u4ef6\u94fe\u63a5\u6b63\u786e\uff0c\u66f4\u65b0\u5404\u90e8\u5206\u955c\u50cf\u94fe\u63a5\uff1a ./mkfirmware.sh","title":"\u66f4\u65b0\u94fe\u63a5"},{"location":"LeezPi-RK3399_SDK\u4f7f\u7528/#_2","text":"\u5c06 rockdev \u76ee\u5f55\u7684\u5404\u90e8\u5206\u955c\u50cf\u6253\u5305\u6210\u56fa\u4ef6 update.img \uff1a ./build.sh updateimg","title":"\u6253\u5305\u56fa\u4ef6"},{"location":"LeezPi-RK3399_SDK\u4f7f\u7528/#6buildroot","text":"","title":"6Buildroot \u4ecb\u7ecd"},{"location":"LeezPi-RK3399_SDK\u4f7f\u7528/#61output","text":"Buildroot \u7f16\u8bd1\u8f93\u51fa\u7ed3\u679c\u4fdd\u5b58\u5728 output \u76ee\u5f55\uff0c\u5177\u4f53\u76ee\u5f55\u7531\u914d\u7f6e\u6587\u4ef6\u51b3\u5b9a\uff0c\u672c\u4f8b\u4fdd\u5b58\u5728 buildroot/output/rockchip_rk3399 \u76ee\u5f55\uff0c\u540e\u7eed\u53ef\u4ee5\u5728\u8be5\u76ee\u5f55\u6267\u884c make \u7f16\u8bd1\u6839\u6587\u4ef6\u7cfb\u7edf\u3002 \u91c7\u7528\u5168\u81ea\u52a8\u7f16\u8bd1\u65b9\u5f0f\u65f6\uff0c\u9ed8\u8ba4\u4f1a\u751f\u6210 buildroot/output/rockchip_rk3399_recovery \u76ee\u5f55\uff0c\u8fd9\u662f recovery \u7684\u7f16\u8bd1\u8f93\u51fa\u76ee\u5f55\u3002 \u5b50\u76ee\u5f55\u8bf4\u660e\uff1a build/ \u5305\u542b\u6240\u6709\u7684\u6e90\u6587\u4ef6\uff0c\u5305\u62ec Buildroot \u6240\u9700\u4e3b\u673a\u5de5\u5177\u548c\u9009\u62e9\u7684\u5305\uff0c\u8fd9\u4e2a\u76ee\u5f55\u5305\u542b\u6240\u6709 \u6a21\u5757\u6e90\u7801\u3002 host/ \u4e3b\u673a\u7aef\u7f16\u8bd1\u9700\u8981\u7684\u5de5\u5177\u5305\u62ec\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u3002 images/ \u5305\u542b\u538b\u7f29\u597d\u7684\u6839\u6587\u4ef6\u7cfb\u7edf\u955c\u50cf\u6587\u4ef6\u3002 staging/ \u8fd9\u4e2a\u76ee\u5f55\u7c7b\u4f3c\u6839\u6587\u4ef6\u7cfb\u7edf\u7684\u76ee\u5f55\u7ed3\u6784\uff0c\u5305\u542b\u7f16\u8bd1\u751f\u6210\u7684\u6240\u6709\u5934\u6587\u4ef6\u548c\u5e93\uff0c\u4ee5\u53ca\u5176\u4ed6\u5f00\u53d1\u6587\u4ef6\uff0c\u4e0d\u8fc7\u4ed6\u4eec\u6ca1\u6709\u88c1\u526a\uff0c\u6bd4\u8f83\u5e9e\u5927\uff0c\u4e0d\u9002\u7528\u4e8e\u76ee\u6807\u6587\u4ef6\u7cfb\u7edf\u3002 target/ \u5305\u542b\u5b8c\u6574\u7684\u6839\u6587\u4ef6\u7cfb\u7edf\uff0c\u5bf9\u6bd4 staging/ \uff0c\u5b83\u6ca1\u6709\u5f00\u53d1\u6587\u4ef6\uff0c\u4e0d\u5305\u542b\u5934\u6587\u4ef6\uff0c\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e5f\u7ecf\u8fc7 strip \u5904\u7406\u3002","title":"6.1output \u76ee\u5f55"},{"location":"LeezPi-RK3399_SDK\u4f7f\u7528/#62-buildroot","text":"\u4e0b\u6587\u5c06\u4ecb\u7ecd\u4e00\u4e9b\u81ea\u5b9a\u4e49 Buildroot \u7684\u65b9\u6cd5\u3002","title":"6.2\u81ea\u5b9a\u4e49 Buildroot"},{"location":"LeezPi-RK3399_SDK\u4f7f\u7528/#621","text":"\u9ed8\u8ba4\u7f16\u8bd1\u597d\u7684\u6839\u6587\u4ef6\u7cfb\u7edf\u4e0d\u4e00\u5b9a\u6ee1\u8db3\u6211\u4eec\u7684\u9700\u6c42\uff0c\u6211\u4eec\u53ef\u80fd\u9700\u8981\u589e\u52a0\u4e00\u4e9b\u7b2c\u4e09\u65b9\u5305\uff0c\u6216\u8005\u4fee\u6539\u5305\u7684\u914d\u7f6e\u9009\u9879\uff0cBuildroot \u652f\u6301\u56fe\u5f62\u5316\u65b9\u5f0f\u53bb\u505a\u9009\u62e9\u914d\u7f6e\uff1a cd buildroot/output/rockchip_rk3399/ # \u8fdb\u5165\u56fe\u5f62\u5316\u914d\u7f6e\u754c\u9762\uff0c\u9009\u62e9\u6240\u9700\u6a21\u5757\uff0c\u4fdd\u5b58\u9000\u51fa make menuconfig # \u4fdd\u5b58\u5230\u914d\u7f6e\u6587\u4ef6 'buildroot/configs/rockchip_rk3399_defconfig' make savedefconfig #\u7f16\u8bd1 Buildroot \u6839\u6587\u4ef6\u7cfb\u7edf make \u9700\u8981\u4e86\u89e3\u7684\u662f\uff1a \u8fdb\u884c\u7f16\u8bd1\u65f6\uff0cBuildroot \u6839\u636e\u914d\u7f6e\uff0c\u4f1a\u81ea\u52a8\u4ece\u7f51\u7edc\u83b7\u53d6\u76f8\u5173\u7684\u8f6f\u4ef6\u5305\uff0c\u5305\u62ec\u4e00\u4e9b\u7b2c\u4e09\u65b9\u5e93\uff0c\u63d2\u4ef6\uff0c\u5b9e\u7528\u5de5\u5177\u7b49\uff0c\u653e\u5728dl/\u76ee\u5f55\u3002 \u8f6f\u4ef6\u5305\u4f1a\u89e3\u538b\u5728 output/build/ \u76ee\u5f55\u4e0b\uff0c\u7136\u540e\u8fdb\u884c\u7f16\u8bd1\u3002 \u5982\u679c\u8981\u4fee\u6539\u8f6f\u4ef6\u5305\u7684\u6e90\u7801\uff0c\u53ef\u4ee5\u901a\u8fc7\u6253\u8865\u4e01\u7684\u65b9\u5f0f\u8fdb\u884c\u4fee\u6539\uff0c\u8865\u4e01\u96c6\u4e2d\u653e\u5728 package/ \u76ee\u5f55\uff0cBuildroot \u4f1a\u5728\u89e3\u538b\u8f6f\u4ef6\u5305\u65f6\u4e3a\u5176\u6253\u4e0a\u76f8\u5e94\u7684\u8865\u4e01\u3002","title":"6.2.1\u6a21\u5757\u914d\u7f6e"},{"location":"LeezPi-RK3399_SDK\u4f7f\u7528/#632busybox","text":"busybox \u7528\u4e8e\u7ba1\u7406\u7cfb\u7edf\u7684\u547d\u4ee4\u5de5\u5177\uff0c\u53ef\u6309\u5982\u4e0b\u65b9\u5f0f\u4fee\u6539\uff1a cd buildroot/output/rockchip_rk3399/ # \u8fdb\u5165\u56fe\u5f62\u5316\u914d\u7f6e\u754c\u9762\uff0c\u9009\u62e9\u6240\u9700\u5de5\u5177\uff0c\u9000\u51fa\u4fdd\u5b58 make busybox-menuconfig # \u4fdd\u5b58\u5230\u914d\u7f6e\u6587\u4ef6 `board/rockchip/common/base/busybox.config` make busybox-update-config make","title":"6.3.2busybox \u914d\u7f6e\u4fee\u6539"},{"location":"LeezPi-RK3399_SDK\u4f7f\u7528/#633","text":"\u6587\u4ef6\u7cfb\u7edf\u8986\u76d6\u662f\u6307\u5728\u76ee\u6807\u6587\u4ef6\u7cfb\u7edf\u7f16\u8bd1\u5b8c\u6210\u540e\u5c06\u6587\u4ef6\u8986\u76d6\u5230\u6587\u4ef6\u7cfb\u7edf\u76ee\u5f55\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u7684\u6dfb\u52a0\u6216\u4fee\u6539\u4e00\u4e9b\u6587\u4ef6\uff1a \u672c\u4f8b\u8986\u76d6\u76ee\u5f55 buildroot/board/rockchip/rk3399/fs-overlay-64 \u516c\u6709\u8986\u76d6\u76ee\u5f55 buildroot/board/rockchip/common \u4f8b\uff1a buildroot/board/rockchip/rk3399/fs-overlay-64/etc/input-event-daemon.conf \u5c06\u8986\u76d6\u6587\u4ef6\u7cfb\u7edf\u7684 /etc/input-event-daemon.conf \u6587\u4ef6\u3002","title":"6.3.3\u6587\u4ef6\u7cfb\u7edf\u8986\u76d6"},{"location":"LeezPi-RK3399_SDK\u4f7f\u7528/#7buildroot","text":"\u66f4\u52a0\u8be6\u7ec6\u5177\u4f53\u7684\u5f00\u53d1\u6280\u5de7\u53ef\u5230 Buildroot \u5b98\u7f51\u5b66\u4e60\u3002 Buildroot \u5b98\u7f51 Buildroot \u5f00\u53d1\u624b\u518c","title":"7Buildroot \u5b98\u7f51"},{"location":"LeezPi-RK3399_\u5f00\u7bb1/","text":"LeezPi-RK3399_\u5f00\u7bb1 LeezPi-RK3399_\u5f00\u7bb1 0\u3001\u5f15\u8a00 1\u3001\u5f00\u7bb1 \u5f00\u53d1\u677f\u6b63\u9762\u71671 \u5f00\u53d1\u677f\u6b63\u9762\u71672 \u5f00\u53d1\u677f\u6b63\u9762\u71673 \u5f00\u53d1\u677f\u5e95\u677f\u7167 2\u3001\u786c\u4ef6\u7279\u6027 3\u3001\u5236\u4f5c\u542f\u52a8\u5361 \u603b\u7ed3&\u53c2\u8003\u8d44\u6599 0\u3001\u5f15\u8a00 \u6817\u5b50\u6d3eLeezPi-RK3399\uff0c\u578b\u53f7Leez P710\uff0c\u662f\u8054\u60f3Leez\u7269\u8054\u57fa\u4e8e RK3399 \u8bbe\u8ba1\u7684\u4e00\u6b3e\u9ad8\u6027\u80fd\u5f00\u53d1\u677f\uff0c\u6807\u914d4GB LPDDR4\u5185\u5b58, \u677f\u8f7d2.4G & 5G\u53cc\u9891WiFi\u6a21\u7ec4, \u5e26\u6709\u6807\u51c6\u5b8c\u6574\u7684M.2 PCIe\u63a5\u53e3, \u53ef\u76f4\u63a5\u5b89\u88c5\u4f7f\u75284G\u6a21\u7ec4\u3002\u8fd8\u5e26\u6709MIPI-CSI\u53cc\u6444\u50cf\u5934\u63a5\u53e3, MIPI-DSI\u548c\u53cc\u663e\u793a\u63a5\u53e3, HDMI 2.0\u89c6\u9891\u8f93\u51fa\u53e3\uff0c\u5e76\u5177\u5907Type-C/DP\uff0cUSB 3.0, USB2.0\uff0cMicroSD, \u5343\u5146\u4ee5\u592a\u7f51\u53e3\uff0c3.5mm\u97f3\u9891\u8f93\u51fa\u53e3\uff0c\u4ee5\u53caAD\u8f93\u5165\uff0c\u8c03\u8bd5\u4e32\u53e3\uff0c40Pin\u6269\u5c55\u53e3\u3002 1\u3001\u5f00\u7bb1 \u5e26 Leez \u6807\u5fd7\u6027\u5916\u76d2 \u5f00\u53d1\u677f\u6b63\u9762\u71671 \u5343\u5146\u4ee5\u592a\u7f51\u63a5\u53e3\uff08\u5411\u4e0b\u517c\u5bb9100\u300110Mbps\uff09 USB2.0 Hostx2 \u590d\u5408\u578bUSB3.0\u63a5\u53e3\uff0c\u4e0a\u65b9\u4e3aHost\uff0c\u4e0b\u65b9\u4e3atypec\u63a5\u53e3\uff0c\u7528\u4e8eOTG\u529f\u80fd PowerKey\uff0c\u7528\u4e8e\u63a7\u5236\u7cfb\u7edf\u7535\u6e90\uff0c\u5b89\u5353\u7cfb\u7edf\u4e0b\u7684\u201c\u5f00\u5173\u673a\u952e\u201d RecoveryKey\uff0c\u5728uboot\u4e0b\u7528\u4e8e\u63a7\u5236\u7cfb\u7edf\u8fdb\u5165Recovery\u6a21\u5f0f\u8fdb\u884c\u5237\u673a Debug\u6392\u9488\uff0c2.54MM\uff0c\u7528\u4e8e\u8fde\u63a5\u4e32\u53e3\u67e5\u770bDebug\u4fe1\u606f IO\u6392\u9488 \u5f00\u53d1\u677f\u6b63\u9762\u71672 40Pin\u6269\u5c55\u53e3 RTC\u7535\u6c60\u63a5\u53e3 \u53ccMIPI\u63a5\u53e3\uff0c\u7528\u4e8e\u8fde\u63a5MIPI\u6444\u50cf\u5934\uff0c\u4e0a\u65b9\u53ef\u4ee5\u8fdeMIPI_DSI\u663e\u793a\u5c4f NanoSIM\u5361\u5ea7 TF\u5361\u5ea7 AP6535S\u6a21\u7ec4\uff1a\u652f\u6301\u53cc\u9891WIFI\u52a0\u84dd\u7259 \u7535\u6e90\u706f\u3001\u7cfb\u7edf\u72b6\u6001\u706f \u5f00\u53d1\u677f\u6b63\u9762\u71673 TypeC\u63a5\u53e3\uff0c\u7528\u4e8e\u677f\u5b50\u4f9b\u7535 HDMI2.0a\u89c6\u9891\u8f93\u51fa 3.5MM\u8033\u673a\u5b54 \u5f00\u53d1\u677f\u5e95\u677f\u7167 \u6807\u51c6\u5b8c\u6574\u7684M.2 PCIe\u63a5\u53e3\uff0c\u53ef\u63a5\u79fb\u8fdcEM05\u6a21\u7ec4 EMMC\u82af\u7247\u5c01\u88c5\uff0c\u5185\u6d4b\u7248\u672a\u8d34\uff0c\u6b63\u5f0f\u7248\u4f1a\u9884\u7f6e 2\u3001\u786c\u4ef6\u7279\u6027 \u4e3b\u63a7\u82af\u7247:Rockchip RK3399\uff1abig.LITTLE hexa-core processor with 2x Arm Cortex-A72 @ up to 1.8 GHz, 4x Cortex-A53 @ up to 1.4 GHz, a Mali-T864 GPU with support OpenGL ES1.1/2.0/3.0/3.1, OpenVG1.1, OpenCL, DX11, and AFBC, and a VPU with 4K VP9 and 4K 10-bit H265/H264 decoding GPU: Mali-T864 GPU\uff0c\u652f\u6301OpenGL ES1.1/2.0/3.0/3.1, OpenVG1.1, OpenCL, DX11, \u652f\u6301AFBC\uff08\u5e27\u7f13\u51b2\u538b\u7f29\uff09\uff1b VPU: \u652f\u63014K VP9 and 4K 10bits H265/H264 \u89c6\u9891\u89e3\u7801\uff0c\u9ad8\u8fbe60fps, \u53ccVOP\u663e\u793a\u7b49\u89c6\u9891\u7f16\u89e3\u7801\u529f\u80fd\uff1b \u7535\u6e90\u7ba1\u7406\u5355\u5143: RK808-D PMIC, \u642d\u914d\u72ec\u7acbDC/DC, \u652f\u6301\u52a8\u6001\u8c03\u538b, \u8f6f\u4ef6\u5173\u673a, \u6309\u952e\u5f00\u673a, RTC\u5524\u9192, \u7761\u7720\u5524\u9192\u7b49\u529f\u80fd\uff1b \u5185\u5b58: \u53cc\u901a\u90534GB LPDDR4\uff1b \u6709\u7ebf\u7f51\u7edc: \u539f\u751f\u5343\u5146\u4ee5\u592a\u7f51\uff1b Wi-Fi/\u84dd\u7259: 802.11a/b/g/n/ac, Bluetooth 4.1 \u53cc\u9891Wi-Fi\u84dd\u7259\u6a21\u5757, 2x2 MIMO, \u53cc\u5929\u7ebf\uff1b \u89c6\u9891: 1\u4e2a\u62162\u4e2a4\u7ebfMIPI-CSI, \u53ccISP\u50cf\u7d20\u5904\u7406\u80fd\u529b\u9ad8\u8fbe13MPix/s\uff0c\u652f\u6301\u53cc\u8def\u6444\u50cf\u5934\u6570\u636e\u540c\u65f6\u8f93\u5165\uff1b \u89c6\u9891\u8f93\u51fa\uff1a HDMI: HDMI 2.0a, \u652f\u63014K@60Hz\u663e\u793a\uff0c\u652f\u6301HDCP 1.4/2.2 DP on Type-C: DisplayPort 1.2 Alt Mode on USB Type-C Audio Out: 3.5mm \u53cc\u901a\u9053\u8033\u673a\u63a5\u53e3, \u6216\u8005\u901a\u8fc7HDMI\u8f93\u51fa USB 2.0: 2\u4e2a\u72ec\u7acb\u7684\u539f\u751fUSB 2.0 Host A\u578b\u63a5\u53e3 USB 3.0: 1\u4e2a\u539f\u751fUSB 3.0 Host A\u578b\u63a5\u53e3+1\u4e2aTypeC\u578bOTG\u53e3 USB Type-C: \u652f\u6301USB3.0 Type-C \u548c DisplayPort 1.2 Alt Mode on USB Type-C PCIe: \u4e00\u4e2a M.2 B-Key \u63a5\u53e3,\u53ef\u76f4\u63a5\u5b89\u88c5\u4f7f\u75284G\u6a21\u7ec4 microSD Slot x 1 40Pin GPIO \u6269\u5c55\u63a5\u53e3: \u8c03\u8bd5\u4e32\u53e3: 4 Pin 2.54mm \u8c03\u8bd5\u4e32\u53e3, 3V\u7535\u5e73, \u6ce2\u7279\u7387\u4e3a1500000 \u6309\u952e: \u7535\u6e90\u6309\u952e, \u7cfb\u7edf\u8fd8\u539f\u6309\u952e LED: 1 x power LED and 1 x GPIO Controled LED RTC\u7535\u6c60\u5ea7\u5b50: 2 Pin 1.27/1.25mm RTC\u5907\u4efd\u7535\u6c60\u63a5\u53e3 \u6563\u70ed\u7247\u548c\u98ce\u6247: 2\u4e2aM2.5\u710a\u63a5\u87ba\u67f1, \u4e13\u95e8\u7528\u4e8e\u56fa\u5b9a\u6563\u70ed\u7247; \u4f9b\u7535\u7535\u6e90: DC 5V/3A TypeC\u63a5\u53e3 3\u3001\u5236\u4f5c\u542f\u52a8\u5361 \u4e0b\u8f7d\u5b98\u65b9\u56fa\u4ef6\u5230 TF \u5361\uff0c\u4f7f\u7528\u5b98\u65b9\u63d0\u4f9b\u7684\u5de5\u5177\u5373\u53ef\u3002 \u603b\u7ed3&\u53c2\u8003\u8d44\u6599","title":"0.\u5f00\u7bb1"},{"location":"LeezPi-RK3399_\u5f00\u7bb1/#leezpi-rk3399_","text":"LeezPi-RK3399_\u5f00\u7bb1 0\u3001\u5f15\u8a00 1\u3001\u5f00\u7bb1 \u5f00\u53d1\u677f\u6b63\u9762\u71671 \u5f00\u53d1\u677f\u6b63\u9762\u71672 \u5f00\u53d1\u677f\u6b63\u9762\u71673 \u5f00\u53d1\u677f\u5e95\u677f\u7167 2\u3001\u786c\u4ef6\u7279\u6027 3\u3001\u5236\u4f5c\u542f\u52a8\u5361 \u603b\u7ed3&\u53c2\u8003\u8d44\u6599","title":"LeezPi-RK3399_\u5f00\u7bb1"},{"location":"LeezPi-RK3399_\u5f00\u7bb1/#0","text":"\u6817\u5b50\u6d3eLeezPi-RK3399\uff0c\u578b\u53f7Leez P710\uff0c\u662f\u8054\u60f3Leez\u7269\u8054\u57fa\u4e8e RK3399 \u8bbe\u8ba1\u7684\u4e00\u6b3e\u9ad8\u6027\u80fd\u5f00\u53d1\u677f\uff0c\u6807\u914d4GB LPDDR4\u5185\u5b58, \u677f\u8f7d2.4G & 5G\u53cc\u9891WiFi\u6a21\u7ec4, \u5e26\u6709\u6807\u51c6\u5b8c\u6574\u7684M.2 PCIe\u63a5\u53e3, \u53ef\u76f4\u63a5\u5b89\u88c5\u4f7f\u75284G\u6a21\u7ec4\u3002\u8fd8\u5e26\u6709MIPI-CSI\u53cc\u6444\u50cf\u5934\u63a5\u53e3, MIPI-DSI\u548c\u53cc\u663e\u793a\u63a5\u53e3, HDMI 2.0\u89c6\u9891\u8f93\u51fa\u53e3\uff0c\u5e76\u5177\u5907Type-C/DP\uff0cUSB 3.0, USB2.0\uff0cMicroSD, \u5343\u5146\u4ee5\u592a\u7f51\u53e3\uff0c3.5mm\u97f3\u9891\u8f93\u51fa\u53e3\uff0c\u4ee5\u53caAD\u8f93\u5165\uff0c\u8c03\u8bd5\u4e32\u53e3\uff0c40Pin\u6269\u5c55\u53e3\u3002","title":"0\u3001\u5f15\u8a00"},{"location":"LeezPi-RK3399_\u5f00\u7bb1/#1","text":"\u5e26 Leez \u6807\u5fd7\u6027\u5916\u76d2","title":"1\u3001\u5f00\u7bb1"},{"location":"LeezPi-RK3399_\u5f00\u7bb1/#1_1","text":"\u5343\u5146\u4ee5\u592a\u7f51\u63a5\u53e3\uff08\u5411\u4e0b\u517c\u5bb9100\u300110Mbps\uff09 USB2.0 Hostx2 \u590d\u5408\u578bUSB3.0\u63a5\u53e3\uff0c\u4e0a\u65b9\u4e3aHost\uff0c\u4e0b\u65b9\u4e3atypec\u63a5\u53e3\uff0c\u7528\u4e8eOTG\u529f\u80fd PowerKey\uff0c\u7528\u4e8e\u63a7\u5236\u7cfb\u7edf\u7535\u6e90\uff0c\u5b89\u5353\u7cfb\u7edf\u4e0b\u7684\u201c\u5f00\u5173\u673a\u952e\u201d RecoveryKey\uff0c\u5728uboot\u4e0b\u7528\u4e8e\u63a7\u5236\u7cfb\u7edf\u8fdb\u5165Recovery\u6a21\u5f0f\u8fdb\u884c\u5237\u673a Debug\u6392\u9488\uff0c2.54MM\uff0c\u7528\u4e8e\u8fde\u63a5\u4e32\u53e3\u67e5\u770bDebug\u4fe1\u606f IO\u6392\u9488","title":"\u5f00\u53d1\u677f\u6b63\u9762\u71671"},{"location":"LeezPi-RK3399_\u5f00\u7bb1/#2","text":"40Pin\u6269\u5c55\u53e3 RTC\u7535\u6c60\u63a5\u53e3 \u53ccMIPI\u63a5\u53e3\uff0c\u7528\u4e8e\u8fde\u63a5MIPI\u6444\u50cf\u5934\uff0c\u4e0a\u65b9\u53ef\u4ee5\u8fdeMIPI_DSI\u663e\u793a\u5c4f NanoSIM\u5361\u5ea7 TF\u5361\u5ea7 AP6535S\u6a21\u7ec4\uff1a\u652f\u6301\u53cc\u9891WIFI\u52a0\u84dd\u7259 \u7535\u6e90\u706f\u3001\u7cfb\u7edf\u72b6\u6001\u706f","title":"\u5f00\u53d1\u677f\u6b63\u9762\u71672"},{"location":"LeezPi-RK3399_\u5f00\u7bb1/#3","text":"TypeC\u63a5\u53e3\uff0c\u7528\u4e8e\u677f\u5b50\u4f9b\u7535 HDMI2.0a\u89c6\u9891\u8f93\u51fa 3.5MM\u8033\u673a\u5b54","title":"\u5f00\u53d1\u677f\u6b63\u9762\u71673"},{"location":"LeezPi-RK3399_\u5f00\u7bb1/#_1","text":"\u6807\u51c6\u5b8c\u6574\u7684M.2 PCIe\u63a5\u53e3\uff0c\u53ef\u63a5\u79fb\u8fdcEM05\u6a21\u7ec4 EMMC\u82af\u7247\u5c01\u88c5\uff0c\u5185\u6d4b\u7248\u672a\u8d34\uff0c\u6b63\u5f0f\u7248\u4f1a\u9884\u7f6e","title":"\u5f00\u53d1\u677f\u5e95\u677f\u7167"},{"location":"LeezPi-RK3399_\u5f00\u7bb1/#2_1","text":"\u4e3b\u63a7\u82af\u7247:Rockchip RK3399\uff1abig.LITTLE hexa-core processor with 2x Arm Cortex-A72 @ up to 1.8 GHz, 4x Cortex-A53 @ up to 1.4 GHz, a Mali-T864 GPU with support OpenGL ES1.1/2.0/3.0/3.1, OpenVG1.1, OpenCL, DX11, and AFBC, and a VPU with 4K VP9 and 4K 10-bit H265/H264 decoding GPU: Mali-T864 GPU\uff0c\u652f\u6301OpenGL ES1.1/2.0/3.0/3.1, OpenVG1.1, OpenCL, DX11, \u652f\u6301AFBC\uff08\u5e27\u7f13\u51b2\u538b\u7f29\uff09\uff1b VPU: \u652f\u63014K VP9 and 4K 10bits H265/H264 \u89c6\u9891\u89e3\u7801\uff0c\u9ad8\u8fbe60fps, \u53ccVOP\u663e\u793a\u7b49\u89c6\u9891\u7f16\u89e3\u7801\u529f\u80fd\uff1b \u7535\u6e90\u7ba1\u7406\u5355\u5143: RK808-D PMIC, \u642d\u914d\u72ec\u7acbDC/DC, \u652f\u6301\u52a8\u6001\u8c03\u538b, \u8f6f\u4ef6\u5173\u673a, \u6309\u952e\u5f00\u673a, RTC\u5524\u9192, \u7761\u7720\u5524\u9192\u7b49\u529f\u80fd\uff1b \u5185\u5b58: \u53cc\u901a\u90534GB LPDDR4\uff1b \u6709\u7ebf\u7f51\u7edc: \u539f\u751f\u5343\u5146\u4ee5\u592a\u7f51\uff1b Wi-Fi/\u84dd\u7259: 802.11a/b/g/n/ac, Bluetooth 4.1 \u53cc\u9891Wi-Fi\u84dd\u7259\u6a21\u5757, 2x2 MIMO, \u53cc\u5929\u7ebf\uff1b \u89c6\u9891: 1\u4e2a\u62162\u4e2a4\u7ebfMIPI-CSI, \u53ccISP\u50cf\u7d20\u5904\u7406\u80fd\u529b\u9ad8\u8fbe13MPix/s\uff0c\u652f\u6301\u53cc\u8def\u6444\u50cf\u5934\u6570\u636e\u540c\u65f6\u8f93\u5165\uff1b \u89c6\u9891\u8f93\u51fa\uff1a HDMI: HDMI 2.0a, \u652f\u63014K@60Hz\u663e\u793a\uff0c\u652f\u6301HDCP 1.4/2.2 DP on Type-C: DisplayPort 1.2 Alt Mode on USB Type-C Audio Out: 3.5mm \u53cc\u901a\u9053\u8033\u673a\u63a5\u53e3, \u6216\u8005\u901a\u8fc7HDMI\u8f93\u51fa USB 2.0: 2\u4e2a\u72ec\u7acb\u7684\u539f\u751fUSB 2.0 Host A\u578b\u63a5\u53e3 USB 3.0: 1\u4e2a\u539f\u751fUSB 3.0 Host A\u578b\u63a5\u53e3+1\u4e2aTypeC\u578bOTG\u53e3 USB Type-C: \u652f\u6301USB3.0 Type-C \u548c DisplayPort 1.2 Alt Mode on USB Type-C PCIe: \u4e00\u4e2a M.2 B-Key \u63a5\u53e3,\u53ef\u76f4\u63a5\u5b89\u88c5\u4f7f\u75284G\u6a21\u7ec4 microSD Slot x 1 40Pin GPIO \u6269\u5c55\u63a5\u53e3: \u8c03\u8bd5\u4e32\u53e3: 4 Pin 2.54mm \u8c03\u8bd5\u4e32\u53e3, 3V\u7535\u5e73, \u6ce2\u7279\u7387\u4e3a1500000 \u6309\u952e: \u7535\u6e90\u6309\u952e, \u7cfb\u7edf\u8fd8\u539f\u6309\u952e LED: 1 x power LED and 1 x GPIO Controled LED RTC\u7535\u6c60\u5ea7\u5b50: 2 Pin 1.27/1.25mm RTC\u5907\u4efd\u7535\u6c60\u63a5\u53e3 \u6563\u70ed\u7247\u548c\u98ce\u6247: 2\u4e2aM2.5\u710a\u63a5\u87ba\u67f1, \u4e13\u95e8\u7528\u4e8e\u56fa\u5b9a\u6563\u70ed\u7247; \u4f9b\u7535\u7535\u6e90: DC 5V/3A TypeC\u63a5\u53e3","title":"2\u3001\u786c\u4ef6\u7279\u6027"},{"location":"LeezPi-RK3399_\u5f00\u7bb1/#3_1","text":"\u4e0b\u8f7d\u5b98\u65b9\u56fa\u4ef6\u5230 TF \u5361\uff0c\u4f7f\u7528\u5b98\u65b9\u63d0\u4f9b\u7684\u5de5\u5177\u5373\u53ef\u3002","title":"3\u3001\u5236\u4f5c\u542f\u52a8\u5361"},{"location":"LeezPi-RK3399_\u5f00\u7bb1/#_2","text":"","title":"\u603b\u7ed3&amp;\u53c2\u8003\u8d44\u6599"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20140.\u5f00\u7bb1/","text":"RK1808S_AI\u8ba1\u7b97\u68d2\u2014\u5f00\u7bb1 RK1808S_AI\u8ba1\u7b97\u68d2\u2014\u5f00\u7bb1 0\u3001\u5f15\u8a00 1\u3001\u5f00\u7bb1 RK1808S\u8ba1\u7b97\u68d2\u6b63\u9762\u7167 RK1808S\u8ba1\u7b97\u68d2\u6b63\u9762\u7167\u8fde\u63a5\u6817\u5b50\u6d3eRK3399 2\u3001RK1808S\u786c\u4ef6\u7279\u6027 \u745e\u82af\u5faeRK1808 NPU\u82af\u7247\u4e3b\u8981\u7684\u4f18\u52bf\u7279\u6027\u5305\u62ec\uff1a 2.1\u3001\u6781\u81f4\u4f4e\u529f\u8017 2.2\u3001\u5f3a\u5927AI\u8fd0\u7b97\u80fd\u529b 2.3\u3001\u9762\u5411AIoT\u5e94\u7528\u7684\u4e30\u5bcc\u63a5\u53e3 2.4. \u6613\u4e8e\u5f00\u53d1 3\u3001\u786c\u4ef6\u89c4\u683c RK1808 \u5177\u4f53\u7684\u89c4\u683c\u4fe1\u606f\u5982\u4e0b\uff1a 4\u3001\u603b\u7ed3&\u53c2\u8003\u8d44\u6599 0\u3001\u5f15\u8a00 \u745e\u82af\u5faeRK1808\u4eba\u5de5\u667a\u80fd\u8ba1\u7b97\u68d2 RK1808\u4eba\u5de5\u667a\u80fd\u8ba1\u7b97\u68d2\u662f\u745e\u82af\u5fae\u65d7\u4e0b\u9996\u6b3eAI\u4eba\u5de5\u667a\u80fd\u8ba1\u7b97\u68d2AI Compute Stick\uff0c\u5185\u7f6e\u9ad8\u7b97\u529bRK1808 NPU\u5904\u7406\u5668\uff0c\u4e3b\u8981\u9762\u5411\u57fa\u4e8e\u4eba\u5de5\u667a\u80fd\u5e73\u53f0\u4ee5\u53ca\u8fb9\u7f18\u8ba1\u7b97\u4ea7\u54c1\u7684\u6df1\u5ea6\u5b66\u4e60\u5f00\u53d1\u8005\uff0c\u662f\u5177\u5907\u5f3a\u5927\u7684\u4eba\u5de5\u667a\u80fd\u7f16\u7a0b\u53ca\u6df1\u5ea6\u5b66\u4e60\u80fd\u529b\u7684AI\u52a0\u901f\u5668\u3002 1\u3001\u5f00\u7bb1 \u8ba9AI\u5f00\u53d1\u66f4\u7b80\u5355 RK1808S\u8ba1\u7b97\u68d2\u6b63\u9762\u7167 RK1808\u4eba\u5de5\u667a\u80fd\u8ba1\u7b97\u68d2\u7b97\u662f\u4f17\u591a\u8fb9\u7f18\u8ba1\u7b97\u8bbe\u5907\u4e2d\u7684\u4f7c\u4f7c\u8005\uff0c\u5916\u89c2\u65f6\u5c1a\u7cbe\u81f4\uff0c\u5c3a\u5bf8\u53ea\u670982 31 13mm\uff08\u5dee\u4e0d\u591a\u4f20\u7edfU\u76d8\u5927\u5c0f\uff09.\u529f\u8017\u4f4e\u3001\u517c\u5bb9\u6027\u5f3a\uff1b\u652f\u6301Windows\u3001Linux\u3001MacOS\u3001Arm Linux\u7b49\u591a\u79cd\u5e73\u53f0\uff1bAI\u5e94\u7528\u5f00\u53d1SDK\u652f\u6301C/C++\u53caPython\uff1b\u57fa\u4e8eUSB3.0Type A\u63a5\u53e3\uff0c\u65e0\u989d\u5916\u786c\u4ef6\uff0c\u4f7f\u7528\u65f6\u65e0\u9700\u8fde\u63a5\u4e91\u7aef\uff0c\u5927\u5927\u964d\u4f4e\u5f00\u53d1\u95e8\u69db\u3002\u5728\u540c\u4e00\u5e73\u53f0\u4e0a\uff0c\u652f\u6301\u591a\u4e2a\u8bbe\u5907\u53e0\u52a0\u4f7f\u7528\uff0c\u4ee5\u6269\u5c55\u4e3b\u673a\u6027\u80fd\u3002\u5177\u5907\u591a\u79cd\u5f00\u53d1\u6a21\u5f0f\uff0c\u5e76\u652f\u6301\u4e8c\u6b21\u5f00\u53d1\uff0c\u8fdb\u884c\u6df1\u5ea6\u5b9a\u5236\u3002 \u652f\u6301 PC\u3001\u5de5\u63a7\u673a\u3001\u673a\u5668\u4eba\u7b49\u786c\u4ef6\u5e73\u53f0\uff0c\u5b66\u4e60\u80fd\u529b\u53ef\u7528\u4e8e\u7269\u4f53\u68c0\u6d4b/\u8bc6\u522b\u3001\u81ea\u7136\u8bed\u8a00\u7406\u89e3\u7b49\u3002\u5728\u5bb6\u7535\u3001\u673a\u5668\u4eba\u3001\u65b0\u96f6\u552e\u3001\u5de5\u4e1a\u89c6\u89c9\u3001\u865a\u62df\u73b0\u5b9e\u3001\u589e\u5f3a\u73b0\u5b9e\u3001\u5b89\u9632\u3001\u6559\u80b2\u3001\u8f66\u8f7d\u3001\u7a7f\u6234\u3001\u7269\u6d41\u7b49\u5404\u573a\u666f\u7684\u5f00\u53d1\u5e94\u7528\u4e2d\uff0cRK1808\u8ba1\u7b97\u68d2\u5747\u80fd\u8ba9\u539f\u578b\u8bbe\u5907\u8fd0\u884c\u5f97\u66f4\u52a0\u5feb\u901f\u3001\u66f4\u52a0\u667a\u80fd\u3002 RK1808S\u8ba1\u7b97\u68d2\u6b63\u9762\u7167\u8fde\u63a5\u6817\u5b50\u6d3eRK3399 \u672c\u6b21\u8bd5\u7528\u662f\u57fa\u4e8eRK3399\u4e3b\u63a7\u4e0erk1808S\u8ba1\u7b97\u68d2\u7ed3\u5408\u7684\u8fb9\u7f18\u8ba1\u7b97\u65b9\u6848\u63a2\u7d22\uff0c\u56e0\u6b64\uff0c\u8bf7\u6765\u672c\u6b21\u7684\u53e6\u4e00\u4f4d\u4e3b\u89d2RK3399\u5f00\u53d1\u677f\uff0c\u4e0b\u9762\u662f\u4ed6\u4eec\u98ce\u4e91\u5408\u74a7\u7684\u7167\u7247\uff1a 2\u3001RK1808S\u786c\u4ef6\u7279\u6027 \u745e\u82af\u5faeRK1808 NPU\u82af\u7247\u4e3b\u8981\u7684\u4f18\u52bf\u7279\u6027\u5305\u62ec\uff1a 2.1\u3001\u6781\u81f4\u4f4e\u529f\u8017 \u82af\u7247\u91c7\u752822nm FD-SOI\u5de5\u827a\uff0c\u76f8\u540c\u6027\u80fd\u4e0b\u529f\u8017\u76f8\u6bd4\u4e3b\u6d4128nm\u5de5\u827a\u53ef\u964d\u4f4e30%\u5de6\u53f3\uff1b \u5185\u7f6e2MB\u7cfb\u7edf\u7ea7SRAM\uff0c\u53ef\u5b9e\u73b0always-on\u8bbe\u5907\u65e0DDR\u8fd0\u884c\uff1b \u5177\u6709\u786c\u4ef6VAD\u529f\u80fd\uff0c\u652f\u6301\u4f4e\u529f\u8017\u4fa6\u542c\u8fdc\u573a\u5524\u9192\u3002 2.2\u3001\u5f3a\u5927AI\u8fd0\u7b97\u80fd\u529b \u5185\u7f6e\u7684NPU\u7b97\u529b\u6700\u9ad8\u53ef\u8fbe3TOPs\uff1b \u652f\u6301INT8/INT16/FP16\u6df7\u5408\u8fd0\u7b97\uff0c \u6700\u5927\u7a0b\u5ea6\u517c\u987e\u6027\u80fd\u3001\u529f\u8017\u53ca\u8fd0\u7b97\u7cbe\u5ea6\uff1b \u652f\u6301TensorFlow/MXNet/PyTorch/Caffe\u7b49\u4e00\u7cfb\u5217\u6846\u67b6\u7684\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\uff0c\u517c\u5bb9\u6027\u5f3a\u3002 2.3\u3001\u9762\u5411AIoT\u5e94\u7528\u7684\u4e30\u5bcc\u63a5\u53e3 RK1808\u5177\u6709\u4e30\u5bcc\u7684\u5916\u8bbe\u63a5\u53e3\uff0c\u4fbf\u4e8e\u5e94\u7528\u6269\u5c55\uff0c\u89c6\u9891\u652f\u6301MIPI/CIF/BT1120\u8f93\u5165\uff0c\u652f\u6301MIPI/RGB\u663e\u793a\u8f93\u51fa\uff1b \u5177\u6709PWM/I2C/SPI/UART\u7b49\u4e00\u7cfb\u5217\u4f20\u611f\u5668\u8f93\u5165\u8f93\u51fa\u63a5\u53e3\uff1b \u5177\u6709USB3.0/USB2.0/PCIE\u7b49\u9ad8\u901f\u8bbe\u5907\u63a5\u53e3\uff0c\u652f\u6301\u5343\u5146\u4ee5\u592a\u7f51\u53ca\u5916\u7f6eWiFi/BT\u6a21\u5757\uff1b \u97f3\u9891\u652f\u6301\u9ea6\u514b\u98ce\u9635\u5217\u8f93\u5165\uff0c\u540c\u65f6\u652f\u6301\u97f3\u9891\u8f93\u51fa\u3002 2.4. \u6613\u4e8e\u5f00\u53d1 \u652f\u6301Linux\u7cfb\u7edf\uff0c AI\u5e94\u7528\u5f00\u53d1SDK\u652f\u6301C/C++\u53caPython\uff0c\u65b9\u4fbf\u5ba2\u6237\u6d6e\u70b9\u5230\u5b9a\u70b9\u7f51\u7edc\u7684\u8f6c\u6362\u4ee5\u53ca\u8c03\u8bd5\uff0c\u5f00\u53d1\u4fbf\u6377\u5ea6\u6781\u5f3a\u3002 3\u3001\u786c\u4ef6\u89c4\u683c \u5728\u786c\u4ef6\u89c4\u683c\u4e0a\uff0c\u745e\u82af\u5faeRK1808 AIoT\u82af\u7247\u91c7\u7528\u53cc\u6838Cortex-A35\u67b6\u6784\uff0c\u8d85\u9ad8\u7b97\u529bNPU\uff0cVPU\u652f\u63011080P\u89c6\u9891\u7f16\u89e3\u7801\uff0c\u652f\u6301\u9ea6\u514b\u98ce\u9635\u5217\u5e76\u5177\u6709\u786c\u4ef6VAD\u529f\u80fd\uff0c\u652f\u6301\u6444\u50cf\u5934\u89c6\u9891\u4fe1\u53f7\u8f93\u5165\u5e76\u5177\u6709\u5185\u7f6eISP\u3002 RK1808 \u5177\u4f53\u7684\u89c4\u683c\u4fe1\u606f\u5982\u4e0b\uff1a \u53cc\u6838Cortex-A35\uff0c\u5185\u90e8\u96c6\u62102MB SRAM DDR 32\u4f4d \u6570\u636e\u5bbd\u5ea6\uff0c\u6700\u5927\u652f\u63012GB DDR3/DDR3L/LPDDR3/LPDDR3L-1600 \u96c6\u6210512KB\u5185\u90e8\u7f13\u51b2\u533a\u7684\u795e\u7ecf\u5904\u7406\u5355\u5143\uff0c\u652f\u6301\uff1a\u6bcf\u4e2a\u5468\u671f\u652f\u6301\u6700\u591a1920 Int8\uff0c\u6700\u591a192 Int16\u4ee5\u53ca\u6700\u591a64 FP16 MAC\u64cd eMMC 4.5 1/4/8\u4f4d\uff0c\u6700\u9ad8\u901f\u7387150MB/s SD/MMC\u652f\u6301 SPI Flash x1-4-8 data \u89c6\u9891\u7f16\u7801\u5668/\u89e3\u7801\u5668\u9ad8\u8fbe1080p \u89c6\u9891\u8f93\u5165DPI 8-10-12-16\u4f4d\u9ad8\u8fbe150MB/s \u6444\u50cf\u5934\u8f93\u5165MIPI CSI\u6700\u591a4\u4e2a\u6570\u636e\u901a\u9053\uff0c2.0Gbps\uff0cMIPI-HS\uff0cMIPI-LP LCD RGB 8/8/8\u9ad8\u8fbe1280\u00d7800@60fps MIPI DSI 1920\u00d71080\uff0c\u6700\u591a4\u4e2a\u6570\u636e\u901a\u9053\uff0c2.0GbpsA \u652f\u6301\u97f3\u9891I2S\u63a5\u53e3\u3001\u5343\u5146\u4ee5\u592a\u7f51\u3001USB2.0 HOST/OTG\u3001USB3.0 5Gbps PCIe 1/2\u94fe\u8def\uff0c\u6bcf\u6761\u94fe\u8def2.5Gbps SPI\uff0cI2C\uff0cUART x4 10bit SAR ADC 1Msps -40~125\u2103\u5de5\u4f5c\u6e29\u5ea6\uff0c\u9488\u5bf9\u6c7d\u8f66\u548c\u5de5\u4e1a\u89c6\u89c9\u5e94\u7528 4\u3001\u603b\u7ed3&\u53c2\u8003\u8d44\u6599 \u5165\u95e8\u6307\u5357 \u793a\u4f8bDemo \u5f00\u53d1\u6d41\u7a0b\u7b80\u4ecb","title":"0.\u5f00\u7bb1"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20140.\u5f00\u7bb1/#rk1808s_ai","text":"RK1808S_AI\u8ba1\u7b97\u68d2\u2014\u5f00\u7bb1 0\u3001\u5f15\u8a00 1\u3001\u5f00\u7bb1 RK1808S\u8ba1\u7b97\u68d2\u6b63\u9762\u7167 RK1808S\u8ba1\u7b97\u68d2\u6b63\u9762\u7167\u8fde\u63a5\u6817\u5b50\u6d3eRK3399 2\u3001RK1808S\u786c\u4ef6\u7279\u6027 \u745e\u82af\u5faeRK1808 NPU\u82af\u7247\u4e3b\u8981\u7684\u4f18\u52bf\u7279\u6027\u5305\u62ec\uff1a 2.1\u3001\u6781\u81f4\u4f4e\u529f\u8017 2.2\u3001\u5f3a\u5927AI\u8fd0\u7b97\u80fd\u529b 2.3\u3001\u9762\u5411AIoT\u5e94\u7528\u7684\u4e30\u5bcc\u63a5\u53e3 2.4. \u6613\u4e8e\u5f00\u53d1 3\u3001\u786c\u4ef6\u89c4\u683c RK1808 \u5177\u4f53\u7684\u89c4\u683c\u4fe1\u606f\u5982\u4e0b\uff1a 4\u3001\u603b\u7ed3&\u53c2\u8003\u8d44\u6599","title":"RK1808S_AI\u8ba1\u7b97\u68d2\u2014\u5f00\u7bb1"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20140.\u5f00\u7bb1/#0","text":"\u745e\u82af\u5faeRK1808\u4eba\u5de5\u667a\u80fd\u8ba1\u7b97\u68d2 RK1808\u4eba\u5de5\u667a\u80fd\u8ba1\u7b97\u68d2\u662f\u745e\u82af\u5fae\u65d7\u4e0b\u9996\u6b3eAI\u4eba\u5de5\u667a\u80fd\u8ba1\u7b97\u68d2AI Compute Stick\uff0c\u5185\u7f6e\u9ad8\u7b97\u529bRK1808 NPU\u5904\u7406\u5668\uff0c\u4e3b\u8981\u9762\u5411\u57fa\u4e8e\u4eba\u5de5\u667a\u80fd\u5e73\u53f0\u4ee5\u53ca\u8fb9\u7f18\u8ba1\u7b97\u4ea7\u54c1\u7684\u6df1\u5ea6\u5b66\u4e60\u5f00\u53d1\u8005\uff0c\u662f\u5177\u5907\u5f3a\u5927\u7684\u4eba\u5de5\u667a\u80fd\u7f16\u7a0b\u53ca\u6df1\u5ea6\u5b66\u4e60\u80fd\u529b\u7684AI\u52a0\u901f\u5668\u3002","title":"0\u3001\u5f15\u8a00"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20140.\u5f00\u7bb1/#1","text":"\u8ba9AI\u5f00\u53d1\u66f4\u7b80\u5355","title":"1\u3001\u5f00\u7bb1"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20140.\u5f00\u7bb1/#rk1808s","text":"RK1808\u4eba\u5de5\u667a\u80fd\u8ba1\u7b97\u68d2\u7b97\u662f\u4f17\u591a\u8fb9\u7f18\u8ba1\u7b97\u8bbe\u5907\u4e2d\u7684\u4f7c\u4f7c\u8005\uff0c\u5916\u89c2\u65f6\u5c1a\u7cbe\u81f4\uff0c\u5c3a\u5bf8\u53ea\u670982 31 13mm\uff08\u5dee\u4e0d\u591a\u4f20\u7edfU\u76d8\u5927\u5c0f\uff09.\u529f\u8017\u4f4e\u3001\u517c\u5bb9\u6027\u5f3a\uff1b\u652f\u6301Windows\u3001Linux\u3001MacOS\u3001Arm Linux\u7b49\u591a\u79cd\u5e73\u53f0\uff1bAI\u5e94\u7528\u5f00\u53d1SDK\u652f\u6301C/C++\u53caPython\uff1b\u57fa\u4e8eUSB3.0Type A\u63a5\u53e3\uff0c\u65e0\u989d\u5916\u786c\u4ef6\uff0c\u4f7f\u7528\u65f6\u65e0\u9700\u8fde\u63a5\u4e91\u7aef\uff0c\u5927\u5927\u964d\u4f4e\u5f00\u53d1\u95e8\u69db\u3002\u5728\u540c\u4e00\u5e73\u53f0\u4e0a\uff0c\u652f\u6301\u591a\u4e2a\u8bbe\u5907\u53e0\u52a0\u4f7f\u7528\uff0c\u4ee5\u6269\u5c55\u4e3b\u673a\u6027\u80fd\u3002\u5177\u5907\u591a\u79cd\u5f00\u53d1\u6a21\u5f0f\uff0c\u5e76\u652f\u6301\u4e8c\u6b21\u5f00\u53d1\uff0c\u8fdb\u884c\u6df1\u5ea6\u5b9a\u5236\u3002 \u652f\u6301 PC\u3001\u5de5\u63a7\u673a\u3001\u673a\u5668\u4eba\u7b49\u786c\u4ef6\u5e73\u53f0\uff0c\u5b66\u4e60\u80fd\u529b\u53ef\u7528\u4e8e\u7269\u4f53\u68c0\u6d4b/\u8bc6\u522b\u3001\u81ea\u7136\u8bed\u8a00\u7406\u89e3\u7b49\u3002\u5728\u5bb6\u7535\u3001\u673a\u5668\u4eba\u3001\u65b0\u96f6\u552e\u3001\u5de5\u4e1a\u89c6\u89c9\u3001\u865a\u62df\u73b0\u5b9e\u3001\u589e\u5f3a\u73b0\u5b9e\u3001\u5b89\u9632\u3001\u6559\u80b2\u3001\u8f66\u8f7d\u3001\u7a7f\u6234\u3001\u7269\u6d41\u7b49\u5404\u573a\u666f\u7684\u5f00\u53d1\u5e94\u7528\u4e2d\uff0cRK1808\u8ba1\u7b97\u68d2\u5747\u80fd\u8ba9\u539f\u578b\u8bbe\u5907\u8fd0\u884c\u5f97\u66f4\u52a0\u5feb\u901f\u3001\u66f4\u52a0\u667a\u80fd\u3002","title":"RK1808S\u8ba1\u7b97\u68d2\u6b63\u9762\u7167"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20140.\u5f00\u7bb1/#rk1808srk3399","text":"\u672c\u6b21\u8bd5\u7528\u662f\u57fa\u4e8eRK3399\u4e3b\u63a7\u4e0erk1808S\u8ba1\u7b97\u68d2\u7ed3\u5408\u7684\u8fb9\u7f18\u8ba1\u7b97\u65b9\u6848\u63a2\u7d22\uff0c\u56e0\u6b64\uff0c\u8bf7\u6765\u672c\u6b21\u7684\u53e6\u4e00\u4f4d\u4e3b\u89d2RK3399\u5f00\u53d1\u677f\uff0c\u4e0b\u9762\u662f\u4ed6\u4eec\u98ce\u4e91\u5408\u74a7\u7684\u7167\u7247\uff1a","title":"RK1808S\u8ba1\u7b97\u68d2\u6b63\u9762\u7167\u8fde\u63a5\u6817\u5b50\u6d3eRK3399"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20140.\u5f00\u7bb1/#2rk1808s","text":"","title":"2\u3001RK1808S\u786c\u4ef6\u7279\u6027"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20140.\u5f00\u7bb1/#rk1808-npu","text":"","title":"\u745e\u82af\u5faeRK1808 NPU\u82af\u7247\u4e3b\u8981\u7684\u4f18\u52bf\u7279\u6027\u5305\u62ec\uff1a"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20140.\u5f00\u7bb1/#21","text":"\u82af\u7247\u91c7\u752822nm FD-SOI\u5de5\u827a\uff0c\u76f8\u540c\u6027\u80fd\u4e0b\u529f\u8017\u76f8\u6bd4\u4e3b\u6d4128nm\u5de5\u827a\u53ef\u964d\u4f4e30%\u5de6\u53f3\uff1b \u5185\u7f6e2MB\u7cfb\u7edf\u7ea7SRAM\uff0c\u53ef\u5b9e\u73b0always-on\u8bbe\u5907\u65e0DDR\u8fd0\u884c\uff1b \u5177\u6709\u786c\u4ef6VAD\u529f\u80fd\uff0c\u652f\u6301\u4f4e\u529f\u8017\u4fa6\u542c\u8fdc\u573a\u5524\u9192\u3002","title":"2.1\u3001\u6781\u81f4\u4f4e\u529f\u8017"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20140.\u5f00\u7bb1/#22ai","text":"\u5185\u7f6e\u7684NPU\u7b97\u529b\u6700\u9ad8\u53ef\u8fbe3TOPs\uff1b \u652f\u6301INT8/INT16/FP16\u6df7\u5408\u8fd0\u7b97\uff0c \u6700\u5927\u7a0b\u5ea6\u517c\u987e\u6027\u80fd\u3001\u529f\u8017\u53ca\u8fd0\u7b97\u7cbe\u5ea6\uff1b \u652f\u6301TensorFlow/MXNet/PyTorch/Caffe\u7b49\u4e00\u7cfb\u5217\u6846\u67b6\u7684\u7f51\u7edc\u6a21\u578b\u8f6c\u6362\uff0c\u517c\u5bb9\u6027\u5f3a\u3002","title":"2.2\u3001\u5f3a\u5927AI\u8fd0\u7b97\u80fd\u529b"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20140.\u5f00\u7bb1/#23aiot","text":"RK1808\u5177\u6709\u4e30\u5bcc\u7684\u5916\u8bbe\u63a5\u53e3\uff0c\u4fbf\u4e8e\u5e94\u7528\u6269\u5c55\uff0c\u89c6\u9891\u652f\u6301MIPI/CIF/BT1120\u8f93\u5165\uff0c\u652f\u6301MIPI/RGB\u663e\u793a\u8f93\u51fa\uff1b \u5177\u6709PWM/I2C/SPI/UART\u7b49\u4e00\u7cfb\u5217\u4f20\u611f\u5668\u8f93\u5165\u8f93\u51fa\u63a5\u53e3\uff1b \u5177\u6709USB3.0/USB2.0/PCIE\u7b49\u9ad8\u901f\u8bbe\u5907\u63a5\u53e3\uff0c\u652f\u6301\u5343\u5146\u4ee5\u592a\u7f51\u53ca\u5916\u7f6eWiFi/BT\u6a21\u5757\uff1b \u97f3\u9891\u652f\u6301\u9ea6\u514b\u98ce\u9635\u5217\u8f93\u5165\uff0c\u540c\u65f6\u652f\u6301\u97f3\u9891\u8f93\u51fa\u3002","title":"2.3\u3001\u9762\u5411AIoT\u5e94\u7528\u7684\u4e30\u5bcc\u63a5\u53e3"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20140.\u5f00\u7bb1/#24","text":"\u652f\u6301Linux\u7cfb\u7edf\uff0c AI\u5e94\u7528\u5f00\u53d1SDK\u652f\u6301C/C++\u53caPython\uff0c\u65b9\u4fbf\u5ba2\u6237\u6d6e\u70b9\u5230\u5b9a\u70b9\u7f51\u7edc\u7684\u8f6c\u6362\u4ee5\u53ca\u8c03\u8bd5\uff0c\u5f00\u53d1\u4fbf\u6377\u5ea6\u6781\u5f3a\u3002","title":"2.4. \u6613\u4e8e\u5f00\u53d1"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20140.\u5f00\u7bb1/#3","text":"\u5728\u786c\u4ef6\u89c4\u683c\u4e0a\uff0c\u745e\u82af\u5faeRK1808 AIoT\u82af\u7247\u91c7\u7528\u53cc\u6838Cortex-A35\u67b6\u6784\uff0c\u8d85\u9ad8\u7b97\u529bNPU\uff0cVPU\u652f\u63011080P\u89c6\u9891\u7f16\u89e3\u7801\uff0c\u652f\u6301\u9ea6\u514b\u98ce\u9635\u5217\u5e76\u5177\u6709\u786c\u4ef6VAD\u529f\u80fd\uff0c\u652f\u6301\u6444\u50cf\u5934\u89c6\u9891\u4fe1\u53f7\u8f93\u5165\u5e76\u5177\u6709\u5185\u7f6eISP\u3002","title":"3\u3001\u786c\u4ef6\u89c4\u683c"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20140.\u5f00\u7bb1/#rk1808","text":"\u53cc\u6838Cortex-A35\uff0c\u5185\u90e8\u96c6\u62102MB SRAM DDR 32\u4f4d \u6570\u636e\u5bbd\u5ea6\uff0c\u6700\u5927\u652f\u63012GB DDR3/DDR3L/LPDDR3/LPDDR3L-1600 \u96c6\u6210512KB\u5185\u90e8\u7f13\u51b2\u533a\u7684\u795e\u7ecf\u5904\u7406\u5355\u5143\uff0c\u652f\u6301\uff1a\u6bcf\u4e2a\u5468\u671f\u652f\u6301\u6700\u591a1920 Int8\uff0c\u6700\u591a192 Int16\u4ee5\u53ca\u6700\u591a64 FP16 MAC\u64cd eMMC 4.5 1/4/8\u4f4d\uff0c\u6700\u9ad8\u901f\u7387150MB/s SD/MMC\u652f\u6301 SPI Flash x1-4-8 data \u89c6\u9891\u7f16\u7801\u5668/\u89e3\u7801\u5668\u9ad8\u8fbe1080p \u89c6\u9891\u8f93\u5165DPI 8-10-12-16\u4f4d\u9ad8\u8fbe150MB/s \u6444\u50cf\u5934\u8f93\u5165MIPI CSI\u6700\u591a4\u4e2a\u6570\u636e\u901a\u9053\uff0c2.0Gbps\uff0cMIPI-HS\uff0cMIPI-LP LCD RGB 8/8/8\u9ad8\u8fbe1280\u00d7800@60fps MIPI DSI 1920\u00d71080\uff0c\u6700\u591a4\u4e2a\u6570\u636e\u901a\u9053\uff0c2.0GbpsA \u652f\u6301\u97f3\u9891I2S\u63a5\u53e3\u3001\u5343\u5146\u4ee5\u592a\u7f51\u3001USB2.0 HOST/OTG\u3001USB3.0 5Gbps PCIe 1/2\u94fe\u8def\uff0c\u6bcf\u6761\u94fe\u8def2.5Gbps SPI\uff0cI2C\uff0cUART x4 10bit SAR ADC 1Msps -40~125\u2103\u5de5\u4f5c\u6e29\u5ea6\uff0c\u9488\u5bf9\u6c7d\u8f66\u548c\u5de5\u4e1a\u89c6\u89c9\u5e94\u7528","title":"RK1808 \u5177\u4f53\u7684\u89c4\u683c\u4fe1\u606f\u5982\u4e0b\uff1a"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20140.\u5f00\u7bb1/#4","text":"\u5165\u95e8\u6307\u5357 \u793a\u4f8bDemo \u5f00\u53d1\u6d41\u7a0b\u7b80\u4ecb","title":"4\u3001\u603b\u7ed3&amp;\u53c2\u8003\u8d44\u6599"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20141.\u642d\u5efaWindows\u5f00\u53d1\u73af\u5883/","text":"RK1808S_AI\u8ba1\u7b97\u68d2\u2014\u642d\u5efaWindows\u5f00\u53d1\u73af\u5883 RK1808S_AI\u8ba1\u7b97\u68d2\u2014\u642d\u5efaWindows\u5f00\u53d1\u73af\u5883 0\u3001\u5f15\u8a00 \u672c\u6587\u5c06\u5b9e\u73b0 Anaconda3+TensorFlow(1.15)+Python3.6+RKNN(\u8ba1\u7b97\u68d2\u4e13\u7528\u63a5\u53e3)+VSCode+OpenCV-Python \u5728Windows\u4e0b\u9762\u5b9e\u73b0\u7684\u53ef\u65ad\u70b9\u4eff\u771f\u73af\u5883\u642d\u5efa 1\u3001\u5b89\u88c5\u865a\u62df\u73af\u5883Anaconda3 1.1\u3001\u4e0b\u8f7d\u5b89\u88c5 1.2\u3001\u4e0b\u8f7d\u5b8c\u6210 1.3\u3001\u521b\u5efa\u4e13\u7528\u865a\u62df\u73af\u5883 2\u3001\u5b89\u88c5TensorFlow 3\u3001\u5b89\u88c5OpenCV-Python 4\u3001\u5b89\u88c5RKNN(AI\u8ba1\u7b97\u68d2\u7684py\u63a5\u53e3) 5\u3001\u5b89\u88c5VSCode 6\u3001VSCode\u4f7f\u7528\u96c6\u6210\u5316\u73af\u5883 \u8fdb\u5165\u5355\u6b65\u8c03\u8bd5\u754c\u9762\uff0c\u70b9\u51fb\u754c\u9762\u4e0a\u7684\u201c\u8c03\u8bd5\u201d->\u201c\u542f\u52a8\u8c03\u8bd5\u201d\u6216\u8005\u5feb\u6377F5\u5373\u53ef\uff0c\u4e00\u952e\u5373\u53ef\u8fdb\u5165\u8c03\u8bd5\u73af\u5883\uff1a 0\u3001\u5f15\u8a00 \u672c\u6587\u5c06\u5b9e\u73b0 Anaconda3 + TensorFlow(1.15) + Python3.6 + RKNN(\u8ba1\u7b97\u68d2\u4e13\u7528\u63a5\u53e3) + VSCode + OpenCV-Python \u5728Windows\u4e0b\u9762\u5b9e\u73b0\u7684\u53ef\u65ad\u70b9\u4eff\u771f\u73af\u5883\u642d\u5efa \u4e3b\u673a\uff1aWindows10 VS Code\u7248\u672c \u7248\u672c: 1.39.1 (user setup) \u63d0\u4ea4: 88f15d17dca836346e787762685a40bb5cce75a8 \u65e5\u671f: 2019-10-10T23:31:28.683Z Electron: 4.2.10 Chrome: 69.0.3497.128 Node.js: 10.11.0 V8: 6.9.427.31-electron.0 OS: Windows_NT x64 10.0.17134 VS Code\u63d2\u4ef6\uff1apython \uff08\u5728\u6269\u5c55\u91cc\u9762\u6dfb\u52a0\u5373\u53ef\uff09 1\u3001\u5b89\u88c5\u865a\u62df\u73af\u5883Anaconda3 1.1\u3001\u4e0b\u8f7d\u5b89\u88c5 \u5b98\u7f51\u4e0b\u8f7d\u5730\u5740 \u63a8\u8350\u5230\u6e05\u534e\u955c\u50cf\u7ad9\u4e0b\u8f7d\uff0c\u597d\u5904\uff1a\u4e0b\u8f7d\u901f\u5ea6\u5feb\uff0c\u7248\u672c\u9f50\u5168\uff0c\u5305\u62ec\u5404\u4e2a\u7cfb\u7edf\u7684\u90fd\u6709--> \u4f20\u9001\u95e8 windows\u5b89\u88c5\u81ea\u7136\u4e0d\u7528\u8bf4\uff0c\u4e0d\u65ad\u6309Next\uff0c\u9009\u62e9\u4f60\u7684\u5b89\u88c5\u76ee\u5f55\u5373\u53ef\uff0c\u8fc7\u7a0b\u4e0d\u518d\u8d58\u8ff0\uff01 1.2\u3001\u4e0b\u8f7d\u5b8c\u6210 \u5b8c\u88c5\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u5728\u5f00\u59cb\u83dc\u5355\u770b\u5230\uff1a 1.3\u3001\u521b\u5efa\u4e13\u7528\u865a\u62df\u73af\u5883 \u8fd0\u884cAnaconda Prompt\uff1a\u70b9\u51fb\u56fe\u6807 Anaconda Prompt \u5373\u53ef\u8fdb\u5165Anaconda\u547d\u4ee4\u884c\u73af\u5883\uff1a \u6b64\u65f6\uff0c\u8f93\u5165\u4ee5\u4e0b\u6307\u4ee4\uff0c\u53ef\u4ee5\u5f00\u59cb\u56fd\u5185\u955c\u50cf\u6e90\u662f\u91c7\u7528\u7684\u6e05\u534e\u5927\u5b66\u5f00\u6e90\u8f6f\u4ef6\u955c\u50cf\u7ad9: conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/ conda config --set show_channel_urls yes \u6b64\u65f6\uff0c\u8f93\u5165\u4ee5\u4e0b\u6307\u4ee4\uff0c\u53ef\u4ee5\u5f00\u59cb\u521b\u5efa\u6211\u4eec\u4e13\u7528\u7684\u865a\u62df\u73af\u5883\uff1a conda create -n RK1808S_AI python=3.6.8 anaconda \u6309\u63d0\u793a\u8f93\u5165\uff1a y \u5373\u53ef\uff1a \u4e4b\u540e\uff0c\u4fbf\u5f00\u59cb\u5b89\u88c5\u6216\u8005\u4e0b\u8f7d\u76f8\u5e94\u7684\u5305\uff1a \u73af\u5883\u521b\u5efa\u6210\u529f\u4e4b\u540e\uff0c\u5c31\u4f1a\u51fa\u73b0\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u540c\u65f6\uff0c\u5f00\u59cb\u83dc\u5355\u5c31\u4f1a\u51fa\u73b0\u5982\u4e0b\u56fe\u6240\u793a\uff1a 2\u3001\u5b89\u88c5TensorFlow \u56e0\u4e3a\u4e0d\u662f\u6240\u6709\u7684\u7535\u8111\u90fd\u662fN\u5361\uff0c\u4e5f\u4e0d\u4e00\u5b9a\u652f\u6301CUDA\uff0c\u6240\u4ee5\u6211\u4eec\u9009\u62e9\u5b89\u88c5TensorFlow CPU\u7248\u672c\u7684\uff0c\u901a\u7528\u6027\u66f4\u5e7f\u4e00\u4e9b\u3002 \u6fc0\u6d3b\u6b65\u9aa41\u4e2d\u7684\u865a\u62df\u73af\u5883\uff0c\u5728 Anaconda Prompt \u8f93\u5165\uff1a activate RK1808S_AI \u5373\u53ef\u542f\u52a8\u6b65\u9aa41\u4e2d\u7684\u73af\u5883\uff1b\u5982\u679c\u8f93\u5165 deactivate \u5373\u51fa\u5f53\u524d\u73af\u5883\u3002\u65b9\u6cd5\u4e8c\uff0c\u53ef\u4ee5\u5728\u5f00\u59cb\u83dc\u5355\u4e2d\u70b9\u51fb Anaconda Prompt(RK1808S_AI) \uff0c\u5373\u53ef\u8fdb\u5165\u76f8\u5e94\u7684\u73af\u5883\u3002 \u5c06pip\u6e90\u6539\u4e3a\u6e05\u534e\u5927\u5b66\u6e90 pip install pip -U pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple \u5982\u679c\u60a8\u5230 pip \u9ed8\u8ba4\u6e90\u7684\u7f51\u7edc\u8fde\u63a5\u8f83\u5dee\uff0c\u4e34\u65f6\u4f7f\u7528\u672c\u955c\u50cf\u7ad9\u6765\u5347\u7ea7 pip\uff1a pip install -i https://pypi.tuna.tsinghua.edu.cn/simple pip -U \u6b64\u65f6\uff0c\u8f93\u5165\u4ee5\u4e0b\u6307\u4ee4\uff0c\u53ef\u4ee5\u5728\u7ebf\u5b89\u88c5TensorFlow: pip install tensorflow==1.13.1 \u5b89\u88c5\u5b8c\u6210\uff1a 3\u3001\u5b89\u88c5OpenCV-Python pip install opencv-python 4\u3001\u5b89\u88c5RKNN(AI\u8ba1\u7b97\u68d2\u7684py\u63a5\u53e3) \u5207\u6362\u5230RKNN\u7684whl\u5305\u76ee\u5f55\uff0c\u624b\u52a8\u6267\u884c\u5b89\u88c5\u5373\u53ef\uff0c\u5177\u4f53\u76ee\u5f55\u4ee5\u4f60\u81ea\u5df1\u7684\u4e3a\u51c6\uff1a pip install lmdb-0.95-cp36-cp36m-win_amd64.whl pip install rknn_toolkit-1.2.0-cp36-cp36m-win_amd64.whl \u5148\u5b89\u88c5 lmdb-0.95-cp36-cp36m-win_amd64.whl ,\u518d\u5b89\u88c5 rknn_toolkit-1.2.0-cp36-cp36m-win_amd64.whl ;\u5176\u4e2d\u5b89\u88c5lmdb\u5c31\u5f88\u5feb\u5b8c\u6210\uff0c\u4f46rknn\u9700\u8981\u4f9d\u8d56\u5f88\u591a\u4f9d\u8d56\u9879\uff0c\u5b89\u88c5\u6bd4\u8f83\u6162\uff0c\u5982\u4e0b\u56fe\uff1a \u5b8c\u88c5\u5b8c\u6210\uff0c\u6548\u679c\u5982\u4e0b\uff1a 5\u3001\u5b89\u88c5VSCode VSCode\u7684\u5b89\u88c5\u5c31\u4e0d\u518d\u7d2f\u8ff0\u4e86\uff0c\u5b98\u7f51\u4e0b\u8f7d\uff0c\u4e09\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u652f\u6301 \u9700\u8981\u5f3a\u8c03\u7684\u662f\uff1aVScode\u5b89\u88c5\u6210\u529f\u540e\uff0c\u9700\u8981\u5b89\u88c5\u4e00\u4e9b\u63d2\u4ef6\uff0c\u6b64\u6587\u5fc5\u9700\u6709\uff1apython\u3001\u4e2d\u6587\u8bed\u8a00\u5305 6\u3001VSCode\u4f7f\u7528\u96c6\u6210\u5316\u73af\u5883 \u6253\u5f00VSCode\u5e76\u65b0\u589e\u4e00\u4e2apy\u6587\u4ef6\uff0c\u540c\u65f6\u9009\u62e9\u524d\u6587\u642d\u5efa\u597d\u7684\u7248\u672c\u5373\u53ef\uff1a \u4e66\u5199\u76f8\u5173\u4ee3\u7801\u65f6\u53ef\u4ee5\u770b\u5230\u76f8\u5e94\u7684\u63a5\u53e3\u63d0\u793a\uff1a \u8fdb\u5165\u5355\u6b65\u8c03\u8bd5\u754c\u9762\uff0c\u70b9\u51fb\u754c\u9762\u4e0a\u7684\u201c\u8c03\u8bd5\u201d->\u201c\u542f\u52a8\u8c03\u8bd5\u201d\u6216\u8005\u5feb\u6377F5\u5373\u53ef\uff0c\u4e00\u952e\u5373\u53ef\u8fdb\u5165\u8c03\u8bd5\u73af\u5883\uff1a","title":"1.\u5f00\u53d1\u73af\u5883\u642d\u5efa"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20141.\u642d\u5efaWindows\u5f00\u53d1\u73af\u5883/#rk1808s_aiwindows","text":"RK1808S_AI\u8ba1\u7b97\u68d2\u2014\u642d\u5efaWindows\u5f00\u53d1\u73af\u5883 0\u3001\u5f15\u8a00 \u672c\u6587\u5c06\u5b9e\u73b0 Anaconda3+TensorFlow(1.15)+Python3.6+RKNN(\u8ba1\u7b97\u68d2\u4e13\u7528\u63a5\u53e3)+VSCode+OpenCV-Python \u5728Windows\u4e0b\u9762\u5b9e\u73b0\u7684\u53ef\u65ad\u70b9\u4eff\u771f\u73af\u5883\u642d\u5efa 1\u3001\u5b89\u88c5\u865a\u62df\u73af\u5883Anaconda3 1.1\u3001\u4e0b\u8f7d\u5b89\u88c5 1.2\u3001\u4e0b\u8f7d\u5b8c\u6210 1.3\u3001\u521b\u5efa\u4e13\u7528\u865a\u62df\u73af\u5883 2\u3001\u5b89\u88c5TensorFlow 3\u3001\u5b89\u88c5OpenCV-Python 4\u3001\u5b89\u88c5RKNN(AI\u8ba1\u7b97\u68d2\u7684py\u63a5\u53e3) 5\u3001\u5b89\u88c5VSCode 6\u3001VSCode\u4f7f\u7528\u96c6\u6210\u5316\u73af\u5883 \u8fdb\u5165\u5355\u6b65\u8c03\u8bd5\u754c\u9762\uff0c\u70b9\u51fb\u754c\u9762\u4e0a\u7684\u201c\u8c03\u8bd5\u201d->\u201c\u542f\u52a8\u8c03\u8bd5\u201d\u6216\u8005\u5feb\u6377F5\u5373\u53ef\uff0c\u4e00\u952e\u5373\u53ef\u8fdb\u5165\u8c03\u8bd5\u73af\u5883\uff1a","title":"RK1808S_AI\u8ba1\u7b97\u68d2\u2014\u642d\u5efaWindows\u5f00\u53d1\u73af\u5883"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20141.\u642d\u5efaWindows\u5f00\u53d1\u73af\u5883/#0","text":"","title":"0\u3001\u5f15\u8a00"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20141.\u642d\u5efaWindows\u5f00\u53d1\u73af\u5883/#anaconda3tensorflow115python36rknnvscodeopencv-python","text":"","title":"\u672c\u6587\u5c06\u5b9e\u73b0 Anaconda3+TensorFlow(1.15)+Python3.6+RKNN(\u8ba1\u7b97\u68d2\u4e13\u7528\u63a5\u53e3)+VSCode+OpenCV-Python"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20141.\u642d\u5efaWindows\u5f00\u53d1\u73af\u5883/#windows","text":"\u4e3b\u673a\uff1aWindows10 VS Code\u7248\u672c \u7248\u672c: 1.39.1 (user setup) \u63d0\u4ea4: 88f15d17dca836346e787762685a40bb5cce75a8 \u65e5\u671f: 2019-10-10T23:31:28.683Z Electron: 4.2.10 Chrome: 69.0.3497.128 Node.js: 10.11.0 V8: 6.9.427.31-electron.0 OS: Windows_NT x64 10.0.17134 VS Code\u63d2\u4ef6\uff1apython \uff08\u5728\u6269\u5c55\u91cc\u9762\u6dfb\u52a0\u5373\u53ef\uff09","title":"\u5728Windows\u4e0b\u9762\u5b9e\u73b0\u7684\u53ef\u65ad\u70b9\u4eff\u771f\u73af\u5883\u642d\u5efa"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20141.\u642d\u5efaWindows\u5f00\u53d1\u73af\u5883/#1anaconda3","text":"","title":"1\u3001\u5b89\u88c5\u865a\u62df\u73af\u5883Anaconda3"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20141.\u642d\u5efaWindows\u5f00\u53d1\u73af\u5883/#11","text":"\u5b98\u7f51\u4e0b\u8f7d\u5730\u5740 \u63a8\u8350\u5230\u6e05\u534e\u955c\u50cf\u7ad9\u4e0b\u8f7d\uff0c\u597d\u5904\uff1a\u4e0b\u8f7d\u901f\u5ea6\u5feb\uff0c\u7248\u672c\u9f50\u5168\uff0c\u5305\u62ec\u5404\u4e2a\u7cfb\u7edf\u7684\u90fd\u6709--> \u4f20\u9001\u95e8 windows\u5b89\u88c5\u81ea\u7136\u4e0d\u7528\u8bf4\uff0c\u4e0d\u65ad\u6309Next\uff0c\u9009\u62e9\u4f60\u7684\u5b89\u88c5\u76ee\u5f55\u5373\u53ef\uff0c\u8fc7\u7a0b\u4e0d\u518d\u8d58\u8ff0\uff01","title":"1.1\u3001\u4e0b\u8f7d\u5b89\u88c5"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20141.\u642d\u5efaWindows\u5f00\u53d1\u73af\u5883/#12","text":"\u5b8c\u88c5\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u5728\u5f00\u59cb\u83dc\u5355\u770b\u5230\uff1a","title":"1.2\u3001\u4e0b\u8f7d\u5b8c\u6210"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20141.\u642d\u5efaWindows\u5f00\u53d1\u73af\u5883/#13","text":"\u8fd0\u884cAnaconda Prompt\uff1a\u70b9\u51fb\u56fe\u6807 Anaconda Prompt \u5373\u53ef\u8fdb\u5165Anaconda\u547d\u4ee4\u884c\u73af\u5883\uff1a \u6b64\u65f6\uff0c\u8f93\u5165\u4ee5\u4e0b\u6307\u4ee4\uff0c\u53ef\u4ee5\u5f00\u59cb\u56fd\u5185\u955c\u50cf\u6e90\u662f\u91c7\u7528\u7684\u6e05\u534e\u5927\u5b66\u5f00\u6e90\u8f6f\u4ef6\u955c\u50cf\u7ad9: conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/ conda config --set show_channel_urls yes \u6b64\u65f6\uff0c\u8f93\u5165\u4ee5\u4e0b\u6307\u4ee4\uff0c\u53ef\u4ee5\u5f00\u59cb\u521b\u5efa\u6211\u4eec\u4e13\u7528\u7684\u865a\u62df\u73af\u5883\uff1a conda create -n RK1808S_AI python=3.6.8 anaconda \u6309\u63d0\u793a\u8f93\u5165\uff1a y \u5373\u53ef\uff1a \u4e4b\u540e\uff0c\u4fbf\u5f00\u59cb\u5b89\u88c5\u6216\u8005\u4e0b\u8f7d\u76f8\u5e94\u7684\u5305\uff1a \u73af\u5883\u521b\u5efa\u6210\u529f\u4e4b\u540e\uff0c\u5c31\u4f1a\u51fa\u73b0\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u540c\u65f6\uff0c\u5f00\u59cb\u83dc\u5355\u5c31\u4f1a\u51fa\u73b0\u5982\u4e0b\u56fe\u6240\u793a\uff1a","title":"1.3\u3001\u521b\u5efa\u4e13\u7528\u865a\u62df\u73af\u5883"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20141.\u642d\u5efaWindows\u5f00\u53d1\u73af\u5883/#2tensorflow","text":"\u56e0\u4e3a\u4e0d\u662f\u6240\u6709\u7684\u7535\u8111\u90fd\u662fN\u5361\uff0c\u4e5f\u4e0d\u4e00\u5b9a\u652f\u6301CUDA\uff0c\u6240\u4ee5\u6211\u4eec\u9009\u62e9\u5b89\u88c5TensorFlow CPU\u7248\u672c\u7684\uff0c\u901a\u7528\u6027\u66f4\u5e7f\u4e00\u4e9b\u3002 \u6fc0\u6d3b\u6b65\u9aa41\u4e2d\u7684\u865a\u62df\u73af\u5883\uff0c\u5728 Anaconda Prompt \u8f93\u5165\uff1a activate RK1808S_AI \u5373\u53ef\u542f\u52a8\u6b65\u9aa41\u4e2d\u7684\u73af\u5883\uff1b\u5982\u679c\u8f93\u5165 deactivate \u5373\u51fa\u5f53\u524d\u73af\u5883\u3002\u65b9\u6cd5\u4e8c\uff0c\u53ef\u4ee5\u5728\u5f00\u59cb\u83dc\u5355\u4e2d\u70b9\u51fb Anaconda Prompt(RK1808S_AI) \uff0c\u5373\u53ef\u8fdb\u5165\u76f8\u5e94\u7684\u73af\u5883\u3002 \u5c06pip\u6e90\u6539\u4e3a\u6e05\u534e\u5927\u5b66\u6e90 pip install pip -U pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple \u5982\u679c\u60a8\u5230 pip \u9ed8\u8ba4\u6e90\u7684\u7f51\u7edc\u8fde\u63a5\u8f83\u5dee\uff0c\u4e34\u65f6\u4f7f\u7528\u672c\u955c\u50cf\u7ad9\u6765\u5347\u7ea7 pip\uff1a pip install -i https://pypi.tuna.tsinghua.edu.cn/simple pip -U \u6b64\u65f6\uff0c\u8f93\u5165\u4ee5\u4e0b\u6307\u4ee4\uff0c\u53ef\u4ee5\u5728\u7ebf\u5b89\u88c5TensorFlow: pip install tensorflow==1.13.1 \u5b89\u88c5\u5b8c\u6210\uff1a","title":"2\u3001\u5b89\u88c5TensorFlow"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20141.\u642d\u5efaWindows\u5f00\u53d1\u73af\u5883/#3opencv-python","text":"pip install opencv-python","title":"3\u3001\u5b89\u88c5OpenCV-Python"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20141.\u642d\u5efaWindows\u5f00\u53d1\u73af\u5883/#4rknnaipy","text":"\u5207\u6362\u5230RKNN\u7684whl\u5305\u76ee\u5f55\uff0c\u624b\u52a8\u6267\u884c\u5b89\u88c5\u5373\u53ef\uff0c\u5177\u4f53\u76ee\u5f55\u4ee5\u4f60\u81ea\u5df1\u7684\u4e3a\u51c6\uff1a pip install lmdb-0.95-cp36-cp36m-win_amd64.whl pip install rknn_toolkit-1.2.0-cp36-cp36m-win_amd64.whl \u5148\u5b89\u88c5 lmdb-0.95-cp36-cp36m-win_amd64.whl ,\u518d\u5b89\u88c5 rknn_toolkit-1.2.0-cp36-cp36m-win_amd64.whl ;\u5176\u4e2d\u5b89\u88c5lmdb\u5c31\u5f88\u5feb\u5b8c\u6210\uff0c\u4f46rknn\u9700\u8981\u4f9d\u8d56\u5f88\u591a\u4f9d\u8d56\u9879\uff0c\u5b89\u88c5\u6bd4\u8f83\u6162\uff0c\u5982\u4e0b\u56fe\uff1a \u5b8c\u88c5\u5b8c\u6210\uff0c\u6548\u679c\u5982\u4e0b\uff1a","title":"4\u3001\u5b89\u88c5RKNN(AI\u8ba1\u7b97\u68d2\u7684py\u63a5\u53e3)"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20141.\u642d\u5efaWindows\u5f00\u53d1\u73af\u5883/#5vscode","text":"VSCode\u7684\u5b89\u88c5\u5c31\u4e0d\u518d\u7d2f\u8ff0\u4e86\uff0c\u5b98\u7f51\u4e0b\u8f7d\uff0c\u4e09\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u652f\u6301 \u9700\u8981\u5f3a\u8c03\u7684\u662f\uff1aVScode\u5b89\u88c5\u6210\u529f\u540e\uff0c\u9700\u8981\u5b89\u88c5\u4e00\u4e9b\u63d2\u4ef6\uff0c\u6b64\u6587\u5fc5\u9700\u6709\uff1apython\u3001\u4e2d\u6587\u8bed\u8a00\u5305","title":"5\u3001\u5b89\u88c5VSCode"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20141.\u642d\u5efaWindows\u5f00\u53d1\u73af\u5883/#6vscode","text":"\u6253\u5f00VSCode\u5e76\u65b0\u589e\u4e00\u4e2apy\u6587\u4ef6\uff0c\u540c\u65f6\u9009\u62e9\u524d\u6587\u642d\u5efa\u597d\u7684\u7248\u672c\u5373\u53ef\uff1a \u4e66\u5199\u76f8\u5173\u4ee3\u7801\u65f6\u53ef\u4ee5\u770b\u5230\u76f8\u5e94\u7684\u63a5\u53e3\u63d0\u793a\uff1a","title":"6\u3001VSCode\u4f7f\u7528\u96c6\u6210\u5316\u73af\u5883"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20141.\u642d\u5efaWindows\u5f00\u53d1\u73af\u5883/#-f5","text":"","title":"\u8fdb\u5165\u5355\u6b65\u8c03\u8bd5\u754c\u9762\uff0c\u70b9\u51fb\u754c\u9762\u4e0a\u7684\u201c\u8c03\u8bd5\u201d-&gt;\u201c\u542f\u52a8\u8c03\u8bd5\u201d\u6216\u8005\u5feb\u6377F5\u5373\u53ef\uff0c\u4e00\u952e\u5373\u53ef\u8fdb\u5165\u8c03\u8bd5\u73af\u5883\uff1a"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20142.RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0bmobilenet_v1\u6a21\u578b\u6d4b\u8bd5/","text":"RK1808S_AI\u8ba1\u7b97\u68d2\u2014RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0bmobilenet_v1\u6a21\u578b\u6d4b\u8bd5 RK1808S_AI\u8ba1\u7b97\u68d2\u2014RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0bmobilenet_v1\u6a21\u578b\u6d4b\u8bd5 0\u3001\u5f15\u8a00 \u88ab\u52a8\u6a21\u5f0f\u5f00\u53d1\u6d41\u7a0b\u7b80\u4ecb \u8fd9\u91cc\u4ee5mobilenet_v1\u4e3a\u4f8b\uff0c\u5728\u642d\u5efa\u597d\u7684windows\u73af\u5883\u4e0b\u4f7f\u7528mobilenet_v1\u6a21\u578b\uff0c\u793a\u4f8b\u5b9e\u73b0\u7684\u529f\u80fd\u662f\u5bf9\u4e00\u5f20\u56fe\u7247\u8fdb\u884c\u7279\u5f81\u63d0\u53d6\uff0c\u5e76\u8bc6\u522b\u8fd9\u5f20\u56fe\u7247\u6240\u5c5e\u5206\u7c7b\u3002 \u672c\u6587\u5c06\u5b9e\u73b0\u57fa\u4e8e\u4e0a\u7bc7\u6587\u7ae0\u5b9e\u73b0\u7684 Anaconda3+TensorFlow(1.15)+Python3.6+RKNN(\u8ba1\u7b97\u68d2\u4e13\u7528\u63a5\u53e3)+VSCode+OpenCV-Python\u73af\u5883\u4e0b\u7684mobilenet_v1\u6a21\u578b\u6d4b\u8bd5 1\u3001\u4e0b\u8f7d\u6e90\u4ee3\u7801 2\u3001\u6e90\u4ee3\u7801\u76ee\u5f55\u8bf4\u660e 3\u3001\u8fd0\u884c\u6d4b\u8bd5\uff1a 4\u3001\u7ed3\u679c\u8bf4\u660e\uff1a 0\u3001\u5f15\u8a00 \u88ab\u52a8\u6a21\u5f0f\u5f00\u53d1\u6d41\u7a0b\u7b80\u4ecb \u88ab\u52a8\u6a21\u5f0f\u4e0b\uff1aRK1808 \u4eba\u5de5\u667a\u80fd\u8ba1\u7b97\u68d2\u662f\u4e00\u4e2a\u901a\u7528AI\u52a0\u901f\u5668\u3002\u4e3b\u673a\u7aef\u901a\u8fc7RKNN-Toolkit\u5c06\u6a21\u578b\u53ca\u524d\u5904\u7406\u540e\u7684\u6570\u636e\u4f20\u8f93\u7ed9RK1808 \u4eba\u5de5\u667a\u80fd\u8ba1\u7b97\u68d2\uff0cRK1808 \u4eba\u5de5\u667a\u80fd\u8ba1\u7b97\u68d2\u5b8c\u6210\u63a8\u7406\uff0c\u5e76\u628a\u7ed3\u679c\u8fd4\u56de\u4e3b\u63a7\u7aef\uff0c\u4e3b\u673a\u7aef\u8fdb\u884c\u540e\u5904\u7406\u4ee5\u53ca\u663e\u793a\u7b49\u64cd\u4f5c\u3002 \u66f4\u591a\u5173\u4e8e\u88ab\u52a8\u6a21\u5f0f\u5f00\u53d1\u6d41\u7a0b\u7684\u4ecb\u7ecd\uff0c\u53ef\u4ee5\u53c2\u8003 \u5b98\u7f51wiki \u8fd9\u91cc\u4ee5mobilenet_v1\u4e3a\u4f8b\uff0c\u5728\u642d\u5efa\u597d\u7684windows\u73af\u5883\u4e0b\u4f7f\u7528mobilenet_v1\u6a21\u578b\uff0c\u793a\u4f8b\u5b9e\u73b0\u7684\u529f\u80fd\u662f\u5bf9\u4e00\u5f20\u56fe\u7247\u8fdb\u884c\u7279\u5f81\u63d0\u53d6\uff0c\u5e76\u8bc6\u522b\u8fd9\u5f20\u56fe\u7247\u6240\u5c5e\u5206\u7c7b\u3002 \u672c\u6587\u5c06\u5b9e\u73b0\u57fa\u4e8e\u4e0a\u7bc7\u6587\u7ae0\u5b9e\u73b0\u7684 Anaconda3 + TensorFlow(1.15) + Python3.6 + RKNN(\u8ba1\u7b97\u68d2\u4e13\u7528\u63a5\u53e3) + VSCode + OpenCV-Python \u73af\u5883\u4e0b\u7684mobilenet_v1\u6a21\u578b\u6d4b\u8bd5 1\u3001\u4e0b\u8f7d\u6e90\u4ee3\u7801 \u4ece\u5b98\u65b9FTP\u6587\u4ef6\u670d\u52a1\u5668\u4e0b\u8f7dmobilenet_v1\u538b\u7f29\u5305\uff0c\u5e76\u89e3\u538b\u51fa\u6765\uff1a wget http://repo.rock-chips.com/rk1808/mobilenet_v1.tar.gz tar xvf mobilenet_v1.tar.gz //win\u4f7f\u7528\u53f3\u952e\u89e3\u538b 2\u3001\u6e90\u4ee3\u7801\u76ee\u5f55\u8bf4\u660e \u4ee5\u4e0b\u662fmobilenet_v1\u793a\u4f8b\u7684\u76ee\u5f55\u7ed3\u6784\u53ca\u8bf4\u660e\u5982\u4e0b\uff1a dataset.txt: \u5305\u542b\u6d4b\u8bd5\u56fe\u7247\u8def\u5f84\u7684\u6587\u672c\u6587\u4ef6\u3002 dog_224x224.jpg: \u4f5c\u4e3amobilenet_v1\u793a\u4f8b\u7684\u6d4b\u8bd5\u56fe\u7247\u3002 mobilenet_v1.tflite: TensorFlow Lite\u6a21\u578b\u6587\u4ef6\u3002 mobilenet_v1.rknn: rknn\u6a21\u578b\u6587\u4ef6\u3002\u7531\u975erknn\u6a21\u578b\u6587\u4ef6\uff08\u8fd9\u91cc\u662fTensorFlow Lite\u6a21\u578b\uff09\u7ecf\u8fc7RKNN-Toolkit\u6a21\u578b\u8f6c\u6362\u751f\u6210\u7684\u8be5rknn\u6a21\u578b\u6587\u4ef6\u3002 test.py: \u793a\u4f8b\u8fd0\u884c\u811a\u672c(\u5305\u542brknn\u6a21\u578b\u8f6c\u6362\u90e8\u5206)\u3002 test_inference.py: \u793a\u4f8b\u8fd0\u884c\u811a\u672c\uff08\u4ec5\u52a0\u8f7drknn\u6a21\u578b\u8fdb\u884c\u63a8\u7406\uff09\u3002 3\u3001\u8fd0\u884c\u6d4b\u8bd5\uff1a \u4f7f\u7528VScode\u6253\u5f00 test.py \u6587\u4ef6\uff0c\u5982\u56fe\u6240\u793a\uff0c\u9009\u62e9\u6b63\u786e\u7684\u8fd0\u884c\u73af\u5883\uff1a \u8fd0\u884c\u6548\u679c\uff1a --> config model done --> Loading model done --> Building model done --> Export RKNN model done --> Init runtime environment done --> Running model mobilenet_v1 -----TOP 5----- [156]: 0.8837890625 [155]: 0.0677490234375 [188 205]: 0.00867462158203125 [188 205]: 0.00867462158203125 [263]: 0.0057525634765625 done --> Begin evaluate model performance ======================================================================== Performance ======================================================================== FPS: 136.30 ======================================================================== done 4\u3001\u7ed3\u679c\u8bf4\u660e\uff1a \u6839\u636e\u4ee5\u4e0a\u6267\u884c\u7ed3\u679c\u53ef\u77e5\uff0cTOP5\u8868\u793a\u6a21\u578b\u9884\u6d4b\u51fa\u6765\u7684\u6392\u540d\u524d5\u7684\u5206\u7c7b\u7684\u7ed3\u679c\uff0c\u5176\u4e2d[156]\u8868\u793a\u72d7\u7684\u6807\u7b7e\uff0c0.8837890625\u8868\u793a\u9884\u6d4b\u4e3a\u8be5\u6807\u7b7e\u7684\u6982\u7387\uff0c\u53ef\u4ee5\u770b\u51fa\u9884\u6d4b\u7ed3\u679c\u4e3a\u72d7\u7684\u53ef\u80fd\u6027\u6700\u5927\uff0c\u4ece\u6d4b\u8bd5\u56fe\u7247\uff08dog_224x224.jpg\uff09\u53ef\u4ee5\u770b\u51fa\u9884\u6d4b\u7ed3\u679c\u662f\u51c6\u786e\u7684\u3002","title":"2.\u88ab\u52a8\u6a21\u5f0f\u4e0bmobilenet_v1\u6a21\u578b\u6d4b\u8bd5"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20142.RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0bmobilenet_v1\u6a21\u578b\u6d4b\u8bd5/#rk1808s_airk1808mobilenet_v1","text":"RK1808S_AI\u8ba1\u7b97\u68d2\u2014RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0bmobilenet_v1\u6a21\u578b\u6d4b\u8bd5 0\u3001\u5f15\u8a00 \u88ab\u52a8\u6a21\u5f0f\u5f00\u53d1\u6d41\u7a0b\u7b80\u4ecb \u8fd9\u91cc\u4ee5mobilenet_v1\u4e3a\u4f8b\uff0c\u5728\u642d\u5efa\u597d\u7684windows\u73af\u5883\u4e0b\u4f7f\u7528mobilenet_v1\u6a21\u578b\uff0c\u793a\u4f8b\u5b9e\u73b0\u7684\u529f\u80fd\u662f\u5bf9\u4e00\u5f20\u56fe\u7247\u8fdb\u884c\u7279\u5f81\u63d0\u53d6\uff0c\u5e76\u8bc6\u522b\u8fd9\u5f20\u56fe\u7247\u6240\u5c5e\u5206\u7c7b\u3002 \u672c\u6587\u5c06\u5b9e\u73b0\u57fa\u4e8e\u4e0a\u7bc7\u6587\u7ae0\u5b9e\u73b0\u7684 Anaconda3+TensorFlow(1.15)+Python3.6+RKNN(\u8ba1\u7b97\u68d2\u4e13\u7528\u63a5\u53e3)+VSCode+OpenCV-Python\u73af\u5883\u4e0b\u7684mobilenet_v1\u6a21\u578b\u6d4b\u8bd5 1\u3001\u4e0b\u8f7d\u6e90\u4ee3\u7801 2\u3001\u6e90\u4ee3\u7801\u76ee\u5f55\u8bf4\u660e 3\u3001\u8fd0\u884c\u6d4b\u8bd5\uff1a 4\u3001\u7ed3\u679c\u8bf4\u660e\uff1a","title":"RK1808S_AI\u8ba1\u7b97\u68d2\u2014RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0bmobilenet_v1\u6a21\u578b\u6d4b\u8bd5"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20142.RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0bmobilenet_v1\u6a21\u578b\u6d4b\u8bd5/#0","text":"","title":"0\u3001\u5f15\u8a00"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20142.RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0bmobilenet_v1\u6a21\u578b\u6d4b\u8bd5/#_1","text":"\u88ab\u52a8\u6a21\u5f0f\u4e0b\uff1aRK1808 \u4eba\u5de5\u667a\u80fd\u8ba1\u7b97\u68d2\u662f\u4e00\u4e2a\u901a\u7528AI\u52a0\u901f\u5668\u3002\u4e3b\u673a\u7aef\u901a\u8fc7RKNN-Toolkit\u5c06\u6a21\u578b\u53ca\u524d\u5904\u7406\u540e\u7684\u6570\u636e\u4f20\u8f93\u7ed9RK1808 \u4eba\u5de5\u667a\u80fd\u8ba1\u7b97\u68d2\uff0cRK1808 \u4eba\u5de5\u667a\u80fd\u8ba1\u7b97\u68d2\u5b8c\u6210\u63a8\u7406\uff0c\u5e76\u628a\u7ed3\u679c\u8fd4\u56de\u4e3b\u63a7\u7aef\uff0c\u4e3b\u673a\u7aef\u8fdb\u884c\u540e\u5904\u7406\u4ee5\u53ca\u663e\u793a\u7b49\u64cd\u4f5c\u3002 \u66f4\u591a\u5173\u4e8e\u88ab\u52a8\u6a21\u5f0f\u5f00\u53d1\u6d41\u7a0b\u7684\u4ecb\u7ecd\uff0c\u53ef\u4ee5\u53c2\u8003 \u5b98\u7f51wiki","title":"\u88ab\u52a8\u6a21\u5f0f\u5f00\u53d1\u6d41\u7a0b\u7b80\u4ecb"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20142.RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0bmobilenet_v1\u6a21\u578b\u6d4b\u8bd5/#mobilenet_v1windowsmobilenet_v1","text":"","title":"\u8fd9\u91cc\u4ee5mobilenet_v1\u4e3a\u4f8b\uff0c\u5728\u642d\u5efa\u597d\u7684windows\u73af\u5883\u4e0b\u4f7f\u7528mobilenet_v1\u6a21\u578b\uff0c\u793a\u4f8b\u5b9e\u73b0\u7684\u529f\u80fd\u662f\u5bf9\u4e00\u5f20\u56fe\u7247\u8fdb\u884c\u7279\u5f81\u63d0\u53d6\uff0c\u5e76\u8bc6\u522b\u8fd9\u5f20\u56fe\u7247\u6240\u5c5e\u5206\u7c7b\u3002"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20142.RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0bmobilenet_v1\u6a21\u578b\u6d4b\u8bd5/#anaconda3tensorflow115python36rknnvscodeopencv-pythonmobilenet_v1","text":"","title":"\u672c\u6587\u5c06\u5b9e\u73b0\u57fa\u4e8e\u4e0a\u7bc7\u6587\u7ae0\u5b9e\u73b0\u7684 Anaconda3+TensorFlow(1.15)+Python3.6+RKNN(\u8ba1\u7b97\u68d2\u4e13\u7528\u63a5\u53e3)+VSCode+OpenCV-Python\u73af\u5883\u4e0b\u7684mobilenet_v1\u6a21\u578b\u6d4b\u8bd5"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20142.RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0bmobilenet_v1\u6a21\u578b\u6d4b\u8bd5/#1","text":"\u4ece\u5b98\u65b9FTP\u6587\u4ef6\u670d\u52a1\u5668\u4e0b\u8f7dmobilenet_v1\u538b\u7f29\u5305\uff0c\u5e76\u89e3\u538b\u51fa\u6765\uff1a wget http://repo.rock-chips.com/rk1808/mobilenet_v1.tar.gz tar xvf mobilenet_v1.tar.gz //win\u4f7f\u7528\u53f3\u952e\u89e3\u538b","title":"1\u3001\u4e0b\u8f7d\u6e90\u4ee3\u7801"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20142.RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0bmobilenet_v1\u6a21\u578b\u6d4b\u8bd5/#2","text":"\u4ee5\u4e0b\u662fmobilenet_v1\u793a\u4f8b\u7684\u76ee\u5f55\u7ed3\u6784\u53ca\u8bf4\u660e\u5982\u4e0b\uff1a dataset.txt: \u5305\u542b\u6d4b\u8bd5\u56fe\u7247\u8def\u5f84\u7684\u6587\u672c\u6587\u4ef6\u3002 dog_224x224.jpg: \u4f5c\u4e3amobilenet_v1\u793a\u4f8b\u7684\u6d4b\u8bd5\u56fe\u7247\u3002 mobilenet_v1.tflite: TensorFlow Lite\u6a21\u578b\u6587\u4ef6\u3002 mobilenet_v1.rknn: rknn\u6a21\u578b\u6587\u4ef6\u3002\u7531\u975erknn\u6a21\u578b\u6587\u4ef6\uff08\u8fd9\u91cc\u662fTensorFlow Lite\u6a21\u578b\uff09\u7ecf\u8fc7RKNN-Toolkit\u6a21\u578b\u8f6c\u6362\u751f\u6210\u7684\u8be5rknn\u6a21\u578b\u6587\u4ef6\u3002 test.py: \u793a\u4f8b\u8fd0\u884c\u811a\u672c(\u5305\u542brknn\u6a21\u578b\u8f6c\u6362\u90e8\u5206)\u3002 test_inference.py: \u793a\u4f8b\u8fd0\u884c\u811a\u672c\uff08\u4ec5\u52a0\u8f7drknn\u6a21\u578b\u8fdb\u884c\u63a8\u7406\uff09\u3002","title":"2\u3001\u6e90\u4ee3\u7801\u76ee\u5f55\u8bf4\u660e"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20142.RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0bmobilenet_v1\u6a21\u578b\u6d4b\u8bd5/#3","text":"\u4f7f\u7528VScode\u6253\u5f00 test.py \u6587\u4ef6\uff0c\u5982\u56fe\u6240\u793a\uff0c\u9009\u62e9\u6b63\u786e\u7684\u8fd0\u884c\u73af\u5883\uff1a \u8fd0\u884c\u6548\u679c\uff1a --> config model done --> Loading model done --> Building model done --> Export RKNN model done --> Init runtime environment done --> Running model mobilenet_v1 -----TOP 5----- [156]: 0.8837890625 [155]: 0.0677490234375 [188 205]: 0.00867462158203125 [188 205]: 0.00867462158203125 [263]: 0.0057525634765625 done --> Begin evaluate model performance ======================================================================== Performance ======================================================================== FPS: 136.30 ======================================================================== done","title":"3\u3001\u8fd0\u884c\u6d4b\u8bd5\uff1a"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20142.RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0bmobilenet_v1\u6a21\u578b\u6d4b\u8bd5/#4","text":"\u6839\u636e\u4ee5\u4e0a\u6267\u884c\u7ed3\u679c\u53ef\u77e5\uff0cTOP5\u8868\u793a\u6a21\u578b\u9884\u6d4b\u51fa\u6765\u7684\u6392\u540d\u524d5\u7684\u5206\u7c7b\u7684\u7ed3\u679c\uff0c\u5176\u4e2d[156]\u8868\u793a\u72d7\u7684\u6807\u7b7e\uff0c0.8837890625\u8868\u793a\u9884\u6d4b\u4e3a\u8be5\u6807\u7b7e\u7684\u6982\u7387\uff0c\u53ef\u4ee5\u770b\u51fa\u9884\u6d4b\u7ed3\u679c\u4e3a\u72d7\u7684\u53ef\u80fd\u6027\u6700\u5927\uff0c\u4ece\u6d4b\u8bd5\u56fe\u7247\uff08dog_224x224.jpg\uff09\u53ef\u4ee5\u770b\u51fa\u9884\u6d4b\u7ed3\u679c\u662f\u51c6\u786e\u7684\u3002","title":"4\u3001\u7ed3\u679c\u8bf4\u660e\uff1a"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20143.RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0bmobilenet_v1\u6a21\u578b\u6539\u8fdb/","text":"RK1808S_AI\u8ba1\u7b97\u68d2\u2014RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0bmobilenet_v1\u6a21\u578b\u6d4b\u8bd5 RK1808S_AI\u8ba1\u7b97\u68d2\u2014RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0bmobilenet_v1\u6a21\u578b\u6d4b\u8bd5 0\u3001\u5f15\u8a00 \u88ab\u52a8\u6a21\u5f0f\u5f00\u53d1\u6d41\u7a0b\u7b80\u4ecb \u8fd9\u91cc\u4ee5mobilenet_v1\u4e3a\u4f8b\uff0c\u5728\u642d\u5efa\u597d\u7684windows\u73af\u5883\u4e0b\u4f7f\u7528mobilenet_v1\u6a21\u578b\uff0c\u793a\u4f8b\u5b9e\u73b0\u7684\u529f\u80fd\u662f\u5bf9\u4e00\u5f20\u56fe\u7247\u8fdb\u884c\u7279\u5f81\u63d0\u53d6\uff0c\u5e76\u8bc6\u522b\u8fd9\u5f20\u56fe\u7247\u6240\u5c5e\u5206\u7c7b\u3002 \u672c\u6587\u5c06\u5b9e\u73b0\u57fa\u4e8e\u4e0a\u7bc7\u6587\u7ae0\u5b9e\u73b0\u7684 Anaconda3+TensorFlow(1.15)+Python3.6+RKNN(\u8ba1\u7b97\u68d2\u4e13\u7528\u63a5\u53e3)+VSCode+OpenCV-Python\u73af\u5883\u4e0b\u7684mobilenet_v1\u6a21\u578b\u6d4b\u8bd5 1\u3001\u4e0b\u8f7d\u6e90\u4ee3\u7801 2\u3001\u6e90\u4ee3\u7801\u76ee\u5f55\u8bf4\u660e 3\u3001\u8fd0\u884c\u6d4b\u8bd5\uff1a 4\u3001\u7ed3\u679c\u8bf4\u660e\uff1a 0\u3001\u5f15\u8a00 \u88ab\u52a8\u6a21\u5f0f\u5f00\u53d1\u6d41\u7a0b\u7b80\u4ecb \u88ab\u52a8\u6a21\u5f0f\u4e0b\uff1aRK1808 \u4eba\u5de5\u667a\u80fd\u8ba1\u7b97\u68d2\u662f\u4e00\u4e2a\u901a\u7528AI\u52a0\u901f\u5668\u3002\u4e3b\u673a\u7aef\u901a\u8fc7RKNN-Toolkit\u5c06\u6a21\u578b\u53ca\u524d\u5904\u7406\u540e\u7684\u6570\u636e\u4f20\u8f93\u7ed9RK1808 \u4eba\u5de5\u667a\u80fd\u8ba1\u7b97\u68d2\uff0cRK1808 \u4eba\u5de5\u667a\u80fd\u8ba1\u7b97\u68d2\u5b8c\u6210\u63a8\u7406\uff0c\u5e76\u628a\u7ed3\u679c\u8fd4\u56de\u4e3b\u63a7\u7aef\uff0c\u4e3b\u673a\u7aef\u8fdb\u884c\u540e\u5904\u7406\u4ee5\u53ca\u663e\u793a\u7b49\u64cd\u4f5c\u3002 \u66f4\u591a\u5173\u4e8e\u88ab\u52a8\u6a21\u5f0f\u5f00\u53d1\u6d41\u7a0b\u7684\u4ecb\u7ecd\uff0c\u53ef\u4ee5\u53c2\u8003 \u5b98\u7f51wiki \u8fd9\u91cc\u4ee5mobilenet_v1\u4e3a\u4f8b\uff0c\u5728\u642d\u5efa\u597d\u7684windows\u73af\u5883\u4e0b\u4f7f\u7528mobilenet_v1\u6a21\u578b\uff0c\u793a\u4f8b\u5b9e\u73b0\u7684\u529f\u80fd\u662f\u5bf9\u4e00\u5f20\u56fe\u7247\u8fdb\u884c\u7279\u5f81\u63d0\u53d6\uff0c\u5e76\u8bc6\u522b\u8fd9\u5f20\u56fe\u7247\u6240\u5c5e\u5206\u7c7b\u3002 \u672c\u6587\u5c06\u5b9e\u73b0\u57fa\u4e8e\u4e0a\u7bc7\u6587\u7ae0\u5b9e\u73b0\u7684 Anaconda3 + TensorFlow(1.15) + Python3.6 + RKNN(\u8ba1\u7b97\u68d2\u4e13\u7528\u63a5\u53e3) + VSCode + OpenCV-Python \u73af\u5883\u4e0b\u7684mobilenet_v1\u6a21\u578b\u6d4b\u8bd5 1\u3001\u4e0b\u8f7d\u6e90\u4ee3\u7801 \u4ece\u5b98\u65b9FTP\u6587\u4ef6\u670d\u52a1\u5668\u4e0b\u8f7dmobilenet_v1\u538b\u7f29\u5305\uff0c\u5e76\u89e3\u538b\u51fa\u6765\uff1a wget http://repo.rock-chips.com/rk1808/mobilenet_v1.tar.gz tar xvf mobilenet_v1.tar.gz //win\u4f7f\u7528\u53f3\u952e\u89e3\u538b 2\u3001\u6e90\u4ee3\u7801\u76ee\u5f55\u8bf4\u660e \u4ee5\u4e0b\u662fmobilenet_v1\u793a\u4f8b\u7684\u76ee\u5f55\u7ed3\u6784\u53ca\u8bf4\u660e\u5982\u4e0b\uff1a dataset.txt: \u5305\u542b\u6d4b\u8bd5\u56fe\u7247\u8def\u5f84\u7684\u6587\u672c\u6587\u4ef6\u3002 dog_224x224.jpg: \u4f5c\u4e3amobilenet_v1\u793a\u4f8b\u7684\u6d4b\u8bd5\u56fe\u7247\u3002 mobilenet_v1.tflite: TensorFlow Lite\u6a21\u578b\u6587\u4ef6\u3002 mobilenet_v1.rknn: rknn\u6a21\u578b\u6587\u4ef6\u3002\u7531\u975erknn\u6a21\u578b\u6587\u4ef6\uff08\u8fd9\u91cc\u662fTensorFlow Lite\u6a21\u578b\uff09\u7ecf\u8fc7RKNN-Toolkit\u6a21\u578b\u8f6c\u6362\u751f\u6210\u7684\u8be5rknn\u6a21\u578b\u6587\u4ef6\u3002 test.py: \u793a\u4f8b\u8fd0\u884c\u811a\u672c(\u5305\u542brknn\u6a21\u578b\u8f6c\u6362\u90e8\u5206)\u3002 test_inference.py: \u793a\u4f8b\u8fd0\u884c\u811a\u672c\uff08\u4ec5\u52a0\u8f7drknn\u6a21\u578b\u8fdb\u884c\u63a8\u7406\uff09\u3002 3\u3001\u8fd0\u884c\u6d4b\u8bd5\uff1a \u4f7f\u7528VScode\u6253\u5f00 test.py \u6587\u4ef6\uff0c\u5982\u56fe\u6240\u793a\uff0c\u9009\u62e9\u6b63\u786e\u7684\u8fd0\u884c\u73af\u5883\uff1a \u8fd0\u884c\u6548\u679c\uff1a --> config model done --> Loading model done --> Building model done --> Export RKNN model done --> Init runtime environment done --> Running model mobilenet_v1 -----TOP 5----- [156]: 0.8837890625 [155]: 0.0677490234375 [188 205]: 0.00867462158203125 [188 205]: 0.00867462158203125 [263]: 0.0057525634765625 done --> Begin evaluate model performance ======================================================================== Performance ======================================================================== FPS: 136.30 ======================================================================== done 4\u3001\u7ed3\u679c\u8bf4\u660e\uff1a \u6839\u636e\u4ee5\u4e0a\u6267\u884c\u7ed3\u679c\u53ef\u77e5\uff0cTOP5\u8868\u793a\u6a21\u578b\u9884\u6d4b\u51fa\u6765\u7684\u6392\u540d\u524d5\u7684\u5206\u7c7b\u7684\u7ed3\u679c\uff0c\u5176\u4e2d[156]\u8868\u793a\u72d7\u7684\u6807\u7b7e\uff0c0.8837890625\u8868\u793a\u9884\u6d4b\u4e3a\u8be5\u6807\u7b7e\u7684\u6982\u7387\uff0c\u53ef\u4ee5\u770b\u51fa\u9884\u6d4b\u7ed3\u679c\u4e3a\u72d7\u7684\u53ef\u80fd\u6027\u6700\u5927\uff0c\u4ece\u6d4b\u8bd5\u56fe\u7247\uff08dog_224x224.jpg\uff09\u53ef\u4ee5\u770b\u51fa\u9884\u6d4b\u7ed3\u679c\u662f\u51c6\u786e\u7684\u3002","title":"RK1808S_AI\u8ba1\u7b97\u68d2\u2014RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0bmobilenet_v1\u6a21\u578b\u6d4b\u8bd5"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20143.RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0bmobilenet_v1\u6a21\u578b\u6539\u8fdb/#rk1808s_airk1808mobilenet_v1","text":"RK1808S_AI\u8ba1\u7b97\u68d2\u2014RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0bmobilenet_v1\u6a21\u578b\u6d4b\u8bd5 0\u3001\u5f15\u8a00 \u88ab\u52a8\u6a21\u5f0f\u5f00\u53d1\u6d41\u7a0b\u7b80\u4ecb \u8fd9\u91cc\u4ee5mobilenet_v1\u4e3a\u4f8b\uff0c\u5728\u642d\u5efa\u597d\u7684windows\u73af\u5883\u4e0b\u4f7f\u7528mobilenet_v1\u6a21\u578b\uff0c\u793a\u4f8b\u5b9e\u73b0\u7684\u529f\u80fd\u662f\u5bf9\u4e00\u5f20\u56fe\u7247\u8fdb\u884c\u7279\u5f81\u63d0\u53d6\uff0c\u5e76\u8bc6\u522b\u8fd9\u5f20\u56fe\u7247\u6240\u5c5e\u5206\u7c7b\u3002 \u672c\u6587\u5c06\u5b9e\u73b0\u57fa\u4e8e\u4e0a\u7bc7\u6587\u7ae0\u5b9e\u73b0\u7684 Anaconda3+TensorFlow(1.15)+Python3.6+RKNN(\u8ba1\u7b97\u68d2\u4e13\u7528\u63a5\u53e3)+VSCode+OpenCV-Python\u73af\u5883\u4e0b\u7684mobilenet_v1\u6a21\u578b\u6d4b\u8bd5 1\u3001\u4e0b\u8f7d\u6e90\u4ee3\u7801 2\u3001\u6e90\u4ee3\u7801\u76ee\u5f55\u8bf4\u660e 3\u3001\u8fd0\u884c\u6d4b\u8bd5\uff1a 4\u3001\u7ed3\u679c\u8bf4\u660e\uff1a","title":"RK1808S_AI\u8ba1\u7b97\u68d2\u2014RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0bmobilenet_v1\u6a21\u578b\u6d4b\u8bd5"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20143.RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0bmobilenet_v1\u6a21\u578b\u6539\u8fdb/#0","text":"","title":"0\u3001\u5f15\u8a00"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20143.RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0bmobilenet_v1\u6a21\u578b\u6539\u8fdb/#_1","text":"\u88ab\u52a8\u6a21\u5f0f\u4e0b\uff1aRK1808 \u4eba\u5de5\u667a\u80fd\u8ba1\u7b97\u68d2\u662f\u4e00\u4e2a\u901a\u7528AI\u52a0\u901f\u5668\u3002\u4e3b\u673a\u7aef\u901a\u8fc7RKNN-Toolkit\u5c06\u6a21\u578b\u53ca\u524d\u5904\u7406\u540e\u7684\u6570\u636e\u4f20\u8f93\u7ed9RK1808 \u4eba\u5de5\u667a\u80fd\u8ba1\u7b97\u68d2\uff0cRK1808 \u4eba\u5de5\u667a\u80fd\u8ba1\u7b97\u68d2\u5b8c\u6210\u63a8\u7406\uff0c\u5e76\u628a\u7ed3\u679c\u8fd4\u56de\u4e3b\u63a7\u7aef\uff0c\u4e3b\u673a\u7aef\u8fdb\u884c\u540e\u5904\u7406\u4ee5\u53ca\u663e\u793a\u7b49\u64cd\u4f5c\u3002 \u66f4\u591a\u5173\u4e8e\u88ab\u52a8\u6a21\u5f0f\u5f00\u53d1\u6d41\u7a0b\u7684\u4ecb\u7ecd\uff0c\u53ef\u4ee5\u53c2\u8003 \u5b98\u7f51wiki","title":"\u88ab\u52a8\u6a21\u5f0f\u5f00\u53d1\u6d41\u7a0b\u7b80\u4ecb"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20143.RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0bmobilenet_v1\u6a21\u578b\u6539\u8fdb/#mobilenet_v1windowsmobilenet_v1","text":"","title":"\u8fd9\u91cc\u4ee5mobilenet_v1\u4e3a\u4f8b\uff0c\u5728\u642d\u5efa\u597d\u7684windows\u73af\u5883\u4e0b\u4f7f\u7528mobilenet_v1\u6a21\u578b\uff0c\u793a\u4f8b\u5b9e\u73b0\u7684\u529f\u80fd\u662f\u5bf9\u4e00\u5f20\u56fe\u7247\u8fdb\u884c\u7279\u5f81\u63d0\u53d6\uff0c\u5e76\u8bc6\u522b\u8fd9\u5f20\u56fe\u7247\u6240\u5c5e\u5206\u7c7b\u3002"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20143.RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0bmobilenet_v1\u6a21\u578b\u6539\u8fdb/#anaconda3tensorflow115python36rknnvscodeopencv-pythonmobilenet_v1","text":"","title":"\u672c\u6587\u5c06\u5b9e\u73b0\u57fa\u4e8e\u4e0a\u7bc7\u6587\u7ae0\u5b9e\u73b0\u7684 Anaconda3+TensorFlow(1.15)+Python3.6+RKNN(\u8ba1\u7b97\u68d2\u4e13\u7528\u63a5\u53e3)+VSCode+OpenCV-Python\u73af\u5883\u4e0b\u7684mobilenet_v1\u6a21\u578b\u6d4b\u8bd5"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20143.RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0bmobilenet_v1\u6a21\u578b\u6539\u8fdb/#1","text":"\u4ece\u5b98\u65b9FTP\u6587\u4ef6\u670d\u52a1\u5668\u4e0b\u8f7dmobilenet_v1\u538b\u7f29\u5305\uff0c\u5e76\u89e3\u538b\u51fa\u6765\uff1a wget http://repo.rock-chips.com/rk1808/mobilenet_v1.tar.gz tar xvf mobilenet_v1.tar.gz //win\u4f7f\u7528\u53f3\u952e\u89e3\u538b","title":"1\u3001\u4e0b\u8f7d\u6e90\u4ee3\u7801"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20143.RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0bmobilenet_v1\u6a21\u578b\u6539\u8fdb/#2","text":"\u4ee5\u4e0b\u662fmobilenet_v1\u793a\u4f8b\u7684\u76ee\u5f55\u7ed3\u6784\u53ca\u8bf4\u660e\u5982\u4e0b\uff1a dataset.txt: \u5305\u542b\u6d4b\u8bd5\u56fe\u7247\u8def\u5f84\u7684\u6587\u672c\u6587\u4ef6\u3002 dog_224x224.jpg: \u4f5c\u4e3amobilenet_v1\u793a\u4f8b\u7684\u6d4b\u8bd5\u56fe\u7247\u3002 mobilenet_v1.tflite: TensorFlow Lite\u6a21\u578b\u6587\u4ef6\u3002 mobilenet_v1.rknn: rknn\u6a21\u578b\u6587\u4ef6\u3002\u7531\u975erknn\u6a21\u578b\u6587\u4ef6\uff08\u8fd9\u91cc\u662fTensorFlow Lite\u6a21\u578b\uff09\u7ecf\u8fc7RKNN-Toolkit\u6a21\u578b\u8f6c\u6362\u751f\u6210\u7684\u8be5rknn\u6a21\u578b\u6587\u4ef6\u3002 test.py: \u793a\u4f8b\u8fd0\u884c\u811a\u672c(\u5305\u542brknn\u6a21\u578b\u8f6c\u6362\u90e8\u5206)\u3002 test_inference.py: \u793a\u4f8b\u8fd0\u884c\u811a\u672c\uff08\u4ec5\u52a0\u8f7drknn\u6a21\u578b\u8fdb\u884c\u63a8\u7406\uff09\u3002","title":"2\u3001\u6e90\u4ee3\u7801\u76ee\u5f55\u8bf4\u660e"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20143.RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0bmobilenet_v1\u6a21\u578b\u6539\u8fdb/#3","text":"\u4f7f\u7528VScode\u6253\u5f00 test.py \u6587\u4ef6\uff0c\u5982\u56fe\u6240\u793a\uff0c\u9009\u62e9\u6b63\u786e\u7684\u8fd0\u884c\u73af\u5883\uff1a \u8fd0\u884c\u6548\u679c\uff1a --> config model done --> Loading model done --> Building model done --> Export RKNN model done --> Init runtime environment done --> Running model mobilenet_v1 -----TOP 5----- [156]: 0.8837890625 [155]: 0.0677490234375 [188 205]: 0.00867462158203125 [188 205]: 0.00867462158203125 [263]: 0.0057525634765625 done --> Begin evaluate model performance ======================================================================== Performance ======================================================================== FPS: 136.30 ======================================================================== done","title":"3\u3001\u8fd0\u884c\u6d4b\u8bd5\uff1a"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20143.RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0bmobilenet_v1\u6a21\u578b\u6539\u8fdb/#4","text":"\u6839\u636e\u4ee5\u4e0a\u6267\u884c\u7ed3\u679c\u53ef\u77e5\uff0cTOP5\u8868\u793a\u6a21\u578b\u9884\u6d4b\u51fa\u6765\u7684\u6392\u540d\u524d5\u7684\u5206\u7c7b\u7684\u7ed3\u679c\uff0c\u5176\u4e2d[156]\u8868\u793a\u72d7\u7684\u6807\u7b7e\uff0c0.8837890625\u8868\u793a\u9884\u6d4b\u4e3a\u8be5\u6807\u7b7e\u7684\u6982\u7387\uff0c\u53ef\u4ee5\u770b\u51fa\u9884\u6d4b\u7ed3\u679c\u4e3a\u72d7\u7684\u53ef\u80fd\u6027\u6700\u5927\uff0c\u4ece\u6d4b\u8bd5\u56fe\u7247\uff08dog_224x224.jpg\uff09\u53ef\u4ee5\u770b\u51fa\u9884\u6d4b\u7ed3\u679c\u662f\u51c6\u786e\u7684\u3002","title":"4\u3001\u7ed3\u679c\u8bf4\u660e\uff1a"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20144.RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0byolo_v3\u6a21\u578b\u6d4b\u8bd5/","text":"RK1808S_AI\u8ba1\u7b97\u68d2\u2014RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0bmobilenet_v1\u6a21\u578b\u6d4b\u8bd5 RK1808S_AI\u8ba1\u7b97\u68d2\u2014RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0bmobilenet_v1\u6a21\u578b\u6d4b\u8bd5 0\u3001\u5f15\u8a00 \u88ab\u52a8\u6a21\u5f0f\u5f00\u53d1\u6d41\u7a0b\u7b80\u4ecb \u8fd9\u91cc\u4ee5mobilenet_v1\u4e3a\u4f8b\uff0c\u5728\u642d\u5efa\u597d\u7684windows\u73af\u5883\u4e0b\u4f7f\u7528mobilenet_v1\u6a21\u578b\uff0c\u793a\u4f8b\u5b9e\u73b0\u7684\u529f\u80fd\u662f\u5bf9\u4e00\u5f20\u56fe\u7247\u8fdb\u884c\u7279\u5f81\u63d0\u53d6\uff0c\u5e76\u8bc6\u522b\u8fd9\u5f20\u56fe\u7247\u6240\u5c5e\u5206\u7c7b\u3002 \u672c\u6587\u5c06\u5b9e\u73b0\u57fa\u4e8e\u4e0a\u7bc7\u6587\u7ae0\u5b9e\u73b0\u7684 Anaconda3+TensorFlow(1.15)+Python3.6+RKNN(\u8ba1\u7b97\u68d2\u4e13\u7528\u63a5\u53e3)+VSCode+OpenCV-Python\u73af\u5883\u4e0b\u7684mobilenet_v1\u6a21\u578b\u6d4b\u8bd5 1\u3001\u4e0b\u8f7d\u6e90\u4ee3\u7801 2\u3001\u6e90\u4ee3\u7801\u76ee\u5f55\u8bf4\u660e 3\u3001\u8fd0\u884c\u6d4b\u8bd5\uff1a 4\u3001\u7ed3\u679c\u8bf4\u660e\uff1a 0\u3001\u5f15\u8a00 \u88ab\u52a8\u6a21\u5f0f\u5f00\u53d1\u6d41\u7a0b\u7b80\u4ecb \u88ab\u52a8\u6a21\u5f0f\u4e0b\uff1aRK1808 \u4eba\u5de5\u667a\u80fd\u8ba1\u7b97\u68d2\u662f\u4e00\u4e2a\u901a\u7528AI\u52a0\u901f\u5668\u3002\u4e3b\u673a\u7aef\u901a\u8fc7RKNN-Toolkit\u5c06\u6a21\u578b\u53ca\u524d\u5904\u7406\u540e\u7684\u6570\u636e\u4f20\u8f93\u7ed9RK1808 \u4eba\u5de5\u667a\u80fd\u8ba1\u7b97\u68d2\uff0cRK1808 \u4eba\u5de5\u667a\u80fd\u8ba1\u7b97\u68d2\u5b8c\u6210\u63a8\u7406\uff0c\u5e76\u628a\u7ed3\u679c\u8fd4\u56de\u4e3b\u63a7\u7aef\uff0c\u4e3b\u673a\u7aef\u8fdb\u884c\u540e\u5904\u7406\u4ee5\u53ca\u663e\u793a\u7b49\u64cd\u4f5c\u3002 \u66f4\u591a\u5173\u4e8e\u88ab\u52a8\u6a21\u5f0f\u5f00\u53d1\u6d41\u7a0b\u7684\u4ecb\u7ecd\uff0c\u53ef\u4ee5\u53c2\u8003 \u5b98\u7f51wiki \u8fd9\u91cc\u4ee5mobilenet_v1\u4e3a\u4f8b\uff0c\u5728\u642d\u5efa\u597d\u7684windows\u73af\u5883\u4e0b\u4f7f\u7528mobilenet_v1\u6a21\u578b\uff0c\u793a\u4f8b\u5b9e\u73b0\u7684\u529f\u80fd\u662f\u5bf9\u4e00\u5f20\u56fe\u7247\u8fdb\u884c\u7279\u5f81\u63d0\u53d6\uff0c\u5e76\u8bc6\u522b\u8fd9\u5f20\u56fe\u7247\u6240\u5c5e\u5206\u7c7b\u3002 \u672c\u6587\u5c06\u5b9e\u73b0\u57fa\u4e8e\u4e0a\u7bc7\u6587\u7ae0\u5b9e\u73b0\u7684 Anaconda3 + TensorFlow(1.15) + Python3.6 + RKNN(\u8ba1\u7b97\u68d2\u4e13\u7528\u63a5\u53e3) + VSCode + OpenCV-Python \u73af\u5883\u4e0b\u7684mobilenet_v1\u6a21\u578b\u6d4b\u8bd5 1\u3001\u4e0b\u8f7d\u6e90\u4ee3\u7801 \u4ece\u5b98\u65b9FTP\u6587\u4ef6\u670d\u52a1\u5668\u4e0b\u8f7dmobilenet_v1\u538b\u7f29\u5305\uff0c\u5e76\u89e3\u538b\u51fa\u6765\uff1a wget http://repo.rock-chips.com/rk1808/mobilenet_v1.tar.gz tar xvf mobilenet_v1.tar.gz //win\u4f7f\u7528\u53f3\u952e\u89e3\u538b 2\u3001\u6e90\u4ee3\u7801\u76ee\u5f55\u8bf4\u660e \u4ee5\u4e0b\u662fmobilenet_v1\u793a\u4f8b\u7684\u76ee\u5f55\u7ed3\u6784\u53ca\u8bf4\u660e\u5982\u4e0b\uff1a dataset.txt: \u5305\u542b\u6d4b\u8bd5\u56fe\u7247\u8def\u5f84\u7684\u6587\u672c\u6587\u4ef6\u3002 dog_224x224.jpg: \u4f5c\u4e3amobilenet_v1\u793a\u4f8b\u7684\u6d4b\u8bd5\u56fe\u7247\u3002 mobilenet_v1.tflite: TensorFlow Lite\u6a21\u578b\u6587\u4ef6\u3002 mobilenet_v1.rknn: rknn\u6a21\u578b\u6587\u4ef6\u3002\u7531\u975erknn\u6a21\u578b\u6587\u4ef6\uff08\u8fd9\u91cc\u662fTensorFlow Lite\u6a21\u578b\uff09\u7ecf\u8fc7RKNN-Toolkit\u6a21\u578b\u8f6c\u6362\u751f\u6210\u7684\u8be5rknn\u6a21\u578b\u6587\u4ef6\u3002 test.py: \u793a\u4f8b\u8fd0\u884c\u811a\u672c(\u5305\u542brknn\u6a21\u578b\u8f6c\u6362\u90e8\u5206)\u3002 test_inference.py: \u793a\u4f8b\u8fd0\u884c\u811a\u672c\uff08\u4ec5\u52a0\u8f7drknn\u6a21\u578b\u8fdb\u884c\u63a8\u7406\uff09\u3002 3\u3001\u8fd0\u884c\u6d4b\u8bd5\uff1a \u4f7f\u7528VScode\u6253\u5f00 test.py \u6587\u4ef6\uff0c\u5982\u56fe\u6240\u793a\uff0c\u9009\u62e9\u6b63\u786e\u7684\u8fd0\u884c\u73af\u5883\uff1a \u8fd0\u884c\u6548\u679c\uff1a --> config model done --> Loading model done --> Building model done --> Export RKNN model done --> Init runtime environment done --> Running model mobilenet_v1 -----TOP 5----- [156]: 0.8837890625 [155]: 0.0677490234375 [188 205]: 0.00867462158203125 [188 205]: 0.00867462158203125 [263]: 0.0057525634765625 done --> Begin evaluate model performance ======================================================================== Performance ======================================================================== FPS: 136.30 ======================================================================== done 4\u3001\u7ed3\u679c\u8bf4\u660e\uff1a \u6839\u636e\u4ee5\u4e0a\u6267\u884c\u7ed3\u679c\u53ef\u77e5\uff0cTOP5\u8868\u793a\u6a21\u578b\u9884\u6d4b\u51fa\u6765\u7684\u6392\u540d\u524d5\u7684\u5206\u7c7b\u7684\u7ed3\u679c\uff0c\u5176\u4e2d[156]\u8868\u793a\u72d7\u7684\u6807\u7b7e\uff0c0.8837890625\u8868\u793a\u9884\u6d4b\u4e3a\u8be5\u6807\u7b7e\u7684\u6982\u7387\uff0c\u53ef\u4ee5\u770b\u51fa\u9884\u6d4b\u7ed3\u679c\u4e3a\u72d7\u7684\u53ef\u80fd\u6027\u6700\u5927\uff0c\u4ece\u6d4b\u8bd5\u56fe\u7247\uff08dog_224x224.jpg\uff09\u53ef\u4ee5\u770b\u51fa\u9884\u6d4b\u7ed3\u679c\u662f\u51c6\u786e\u7684\u3002","title":"RK1808S_AI\u8ba1\u7b97\u68d2\u2014RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0bmobilenet_v1\u6a21\u578b\u6d4b\u8bd5"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20144.RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0byolo_v3\u6a21\u578b\u6d4b\u8bd5/#rk1808s_airk1808mobilenet_v1","text":"RK1808S_AI\u8ba1\u7b97\u68d2\u2014RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0bmobilenet_v1\u6a21\u578b\u6d4b\u8bd5 0\u3001\u5f15\u8a00 \u88ab\u52a8\u6a21\u5f0f\u5f00\u53d1\u6d41\u7a0b\u7b80\u4ecb \u8fd9\u91cc\u4ee5mobilenet_v1\u4e3a\u4f8b\uff0c\u5728\u642d\u5efa\u597d\u7684windows\u73af\u5883\u4e0b\u4f7f\u7528mobilenet_v1\u6a21\u578b\uff0c\u793a\u4f8b\u5b9e\u73b0\u7684\u529f\u80fd\u662f\u5bf9\u4e00\u5f20\u56fe\u7247\u8fdb\u884c\u7279\u5f81\u63d0\u53d6\uff0c\u5e76\u8bc6\u522b\u8fd9\u5f20\u56fe\u7247\u6240\u5c5e\u5206\u7c7b\u3002 \u672c\u6587\u5c06\u5b9e\u73b0\u57fa\u4e8e\u4e0a\u7bc7\u6587\u7ae0\u5b9e\u73b0\u7684 Anaconda3+TensorFlow(1.15)+Python3.6+RKNN(\u8ba1\u7b97\u68d2\u4e13\u7528\u63a5\u53e3)+VSCode+OpenCV-Python\u73af\u5883\u4e0b\u7684mobilenet_v1\u6a21\u578b\u6d4b\u8bd5 1\u3001\u4e0b\u8f7d\u6e90\u4ee3\u7801 2\u3001\u6e90\u4ee3\u7801\u76ee\u5f55\u8bf4\u660e 3\u3001\u8fd0\u884c\u6d4b\u8bd5\uff1a 4\u3001\u7ed3\u679c\u8bf4\u660e\uff1a","title":"RK1808S_AI\u8ba1\u7b97\u68d2\u2014RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0bmobilenet_v1\u6a21\u578b\u6d4b\u8bd5"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20144.RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0byolo_v3\u6a21\u578b\u6d4b\u8bd5/#0","text":"","title":"0\u3001\u5f15\u8a00"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20144.RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0byolo_v3\u6a21\u578b\u6d4b\u8bd5/#_1","text":"\u88ab\u52a8\u6a21\u5f0f\u4e0b\uff1aRK1808 \u4eba\u5de5\u667a\u80fd\u8ba1\u7b97\u68d2\u662f\u4e00\u4e2a\u901a\u7528AI\u52a0\u901f\u5668\u3002\u4e3b\u673a\u7aef\u901a\u8fc7RKNN-Toolkit\u5c06\u6a21\u578b\u53ca\u524d\u5904\u7406\u540e\u7684\u6570\u636e\u4f20\u8f93\u7ed9RK1808 \u4eba\u5de5\u667a\u80fd\u8ba1\u7b97\u68d2\uff0cRK1808 \u4eba\u5de5\u667a\u80fd\u8ba1\u7b97\u68d2\u5b8c\u6210\u63a8\u7406\uff0c\u5e76\u628a\u7ed3\u679c\u8fd4\u56de\u4e3b\u63a7\u7aef\uff0c\u4e3b\u673a\u7aef\u8fdb\u884c\u540e\u5904\u7406\u4ee5\u53ca\u663e\u793a\u7b49\u64cd\u4f5c\u3002 \u66f4\u591a\u5173\u4e8e\u88ab\u52a8\u6a21\u5f0f\u5f00\u53d1\u6d41\u7a0b\u7684\u4ecb\u7ecd\uff0c\u53ef\u4ee5\u53c2\u8003 \u5b98\u7f51wiki","title":"\u88ab\u52a8\u6a21\u5f0f\u5f00\u53d1\u6d41\u7a0b\u7b80\u4ecb"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20144.RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0byolo_v3\u6a21\u578b\u6d4b\u8bd5/#mobilenet_v1windowsmobilenet_v1","text":"","title":"\u8fd9\u91cc\u4ee5mobilenet_v1\u4e3a\u4f8b\uff0c\u5728\u642d\u5efa\u597d\u7684windows\u73af\u5883\u4e0b\u4f7f\u7528mobilenet_v1\u6a21\u578b\uff0c\u793a\u4f8b\u5b9e\u73b0\u7684\u529f\u80fd\u662f\u5bf9\u4e00\u5f20\u56fe\u7247\u8fdb\u884c\u7279\u5f81\u63d0\u53d6\uff0c\u5e76\u8bc6\u522b\u8fd9\u5f20\u56fe\u7247\u6240\u5c5e\u5206\u7c7b\u3002"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20144.RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0byolo_v3\u6a21\u578b\u6d4b\u8bd5/#anaconda3tensorflow115python36rknnvscodeopencv-pythonmobilenet_v1","text":"","title":"\u672c\u6587\u5c06\u5b9e\u73b0\u57fa\u4e8e\u4e0a\u7bc7\u6587\u7ae0\u5b9e\u73b0\u7684 Anaconda3+TensorFlow(1.15)+Python3.6+RKNN(\u8ba1\u7b97\u68d2\u4e13\u7528\u63a5\u53e3)+VSCode+OpenCV-Python\u73af\u5883\u4e0b\u7684mobilenet_v1\u6a21\u578b\u6d4b\u8bd5"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20144.RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0byolo_v3\u6a21\u578b\u6d4b\u8bd5/#1","text":"\u4ece\u5b98\u65b9FTP\u6587\u4ef6\u670d\u52a1\u5668\u4e0b\u8f7dmobilenet_v1\u538b\u7f29\u5305\uff0c\u5e76\u89e3\u538b\u51fa\u6765\uff1a wget http://repo.rock-chips.com/rk1808/mobilenet_v1.tar.gz tar xvf mobilenet_v1.tar.gz //win\u4f7f\u7528\u53f3\u952e\u89e3\u538b","title":"1\u3001\u4e0b\u8f7d\u6e90\u4ee3\u7801"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20144.RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0byolo_v3\u6a21\u578b\u6d4b\u8bd5/#2","text":"\u4ee5\u4e0b\u662fmobilenet_v1\u793a\u4f8b\u7684\u76ee\u5f55\u7ed3\u6784\u53ca\u8bf4\u660e\u5982\u4e0b\uff1a dataset.txt: \u5305\u542b\u6d4b\u8bd5\u56fe\u7247\u8def\u5f84\u7684\u6587\u672c\u6587\u4ef6\u3002 dog_224x224.jpg: \u4f5c\u4e3amobilenet_v1\u793a\u4f8b\u7684\u6d4b\u8bd5\u56fe\u7247\u3002 mobilenet_v1.tflite: TensorFlow Lite\u6a21\u578b\u6587\u4ef6\u3002 mobilenet_v1.rknn: rknn\u6a21\u578b\u6587\u4ef6\u3002\u7531\u975erknn\u6a21\u578b\u6587\u4ef6\uff08\u8fd9\u91cc\u662fTensorFlow Lite\u6a21\u578b\uff09\u7ecf\u8fc7RKNN-Toolkit\u6a21\u578b\u8f6c\u6362\u751f\u6210\u7684\u8be5rknn\u6a21\u578b\u6587\u4ef6\u3002 test.py: \u793a\u4f8b\u8fd0\u884c\u811a\u672c(\u5305\u542brknn\u6a21\u578b\u8f6c\u6362\u90e8\u5206)\u3002 test_inference.py: \u793a\u4f8b\u8fd0\u884c\u811a\u672c\uff08\u4ec5\u52a0\u8f7drknn\u6a21\u578b\u8fdb\u884c\u63a8\u7406\uff09\u3002","title":"2\u3001\u6e90\u4ee3\u7801\u76ee\u5f55\u8bf4\u660e"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20144.RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0byolo_v3\u6a21\u578b\u6d4b\u8bd5/#3","text":"\u4f7f\u7528VScode\u6253\u5f00 test.py \u6587\u4ef6\uff0c\u5982\u56fe\u6240\u793a\uff0c\u9009\u62e9\u6b63\u786e\u7684\u8fd0\u884c\u73af\u5883\uff1a \u8fd0\u884c\u6548\u679c\uff1a --> config model done --> Loading model done --> Building model done --> Export RKNN model done --> Init runtime environment done --> Running model mobilenet_v1 -----TOP 5----- [156]: 0.8837890625 [155]: 0.0677490234375 [188 205]: 0.00867462158203125 [188 205]: 0.00867462158203125 [263]: 0.0057525634765625 done --> Begin evaluate model performance ======================================================================== Performance ======================================================================== FPS: 136.30 ======================================================================== done","title":"3\u3001\u8fd0\u884c\u6d4b\u8bd5\uff1a"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20144.RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0byolo_v3\u6a21\u578b\u6d4b\u8bd5/#4","text":"\u6839\u636e\u4ee5\u4e0a\u6267\u884c\u7ed3\u679c\u53ef\u77e5\uff0cTOP5\u8868\u793a\u6a21\u578b\u9884\u6d4b\u51fa\u6765\u7684\u6392\u540d\u524d5\u7684\u5206\u7c7b\u7684\u7ed3\u679c\uff0c\u5176\u4e2d[156]\u8868\u793a\u72d7\u7684\u6807\u7b7e\uff0c0.8837890625\u8868\u793a\u9884\u6d4b\u4e3a\u8be5\u6807\u7b7e\u7684\u6982\u7387\uff0c\u53ef\u4ee5\u770b\u51fa\u9884\u6d4b\u7ed3\u679c\u4e3a\u72d7\u7684\u53ef\u80fd\u6027\u6700\u5927\uff0c\u4ece\u6d4b\u8bd5\u56fe\u7247\uff08dog_224x224.jpg\uff09\u53ef\u4ee5\u770b\u51fa\u9884\u6d4b\u7ed3\u679c\u662f\u51c6\u786e\u7684\u3002","title":"4\u3001\u7ed3\u679c\u8bf4\u660e\uff1a"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20145.RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0byolo_v3\u6a21\u578b\u6539\u8fdb/","text":"RK1808S_AI\u8ba1\u7b97\u68d2\u2014RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0bmobilenet_v1\u6a21\u578b\u6d4b\u8bd5 RK1808S_AI\u8ba1\u7b97\u68d2\u2014RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0bmobilenet_v1\u6a21\u578b\u6d4b\u8bd5 0\u3001\u5f15\u8a00 \u88ab\u52a8\u6a21\u5f0f\u5f00\u53d1\u6d41\u7a0b\u7b80\u4ecb \u8fd9\u91cc\u4ee5mobilenet_v1\u4e3a\u4f8b\uff0c\u5728\u642d\u5efa\u597d\u7684windows\u73af\u5883\u4e0b\u4f7f\u7528mobilenet_v1\u6a21\u578b\uff0c\u793a\u4f8b\u5b9e\u73b0\u7684\u529f\u80fd\u662f\u5bf9\u4e00\u5f20\u56fe\u7247\u8fdb\u884c\u7279\u5f81\u63d0\u53d6\uff0c\u5e76\u8bc6\u522b\u8fd9\u5f20\u56fe\u7247\u6240\u5c5e\u5206\u7c7b\u3002 \u672c\u6587\u5c06\u5b9e\u73b0\u57fa\u4e8e\u4e0a\u7bc7\u6587\u7ae0\u5b9e\u73b0\u7684 Anaconda3+TensorFlow(1.15)+Python3.6+RKNN(\u8ba1\u7b97\u68d2\u4e13\u7528\u63a5\u53e3)+VSCode+OpenCV-Python\u73af\u5883\u4e0b\u7684mobilenet_v1\u6a21\u578b\u6d4b\u8bd5 1\u3001\u4e0b\u8f7d\u6e90\u4ee3\u7801 2\u3001\u6e90\u4ee3\u7801\u76ee\u5f55\u8bf4\u660e 3\u3001\u8fd0\u884c\u6d4b\u8bd5\uff1a 4\u3001\u7ed3\u679c\u8bf4\u660e\uff1a 0\u3001\u5f15\u8a00 \u88ab\u52a8\u6a21\u5f0f\u5f00\u53d1\u6d41\u7a0b\u7b80\u4ecb \u88ab\u52a8\u6a21\u5f0f\u4e0b\uff1aRK1808 \u4eba\u5de5\u667a\u80fd\u8ba1\u7b97\u68d2\u662f\u4e00\u4e2a\u901a\u7528AI\u52a0\u901f\u5668\u3002\u4e3b\u673a\u7aef\u901a\u8fc7RKNN-Toolkit\u5c06\u6a21\u578b\u53ca\u524d\u5904\u7406\u540e\u7684\u6570\u636e\u4f20\u8f93\u7ed9RK1808 \u4eba\u5de5\u667a\u80fd\u8ba1\u7b97\u68d2\uff0cRK1808 \u4eba\u5de5\u667a\u80fd\u8ba1\u7b97\u68d2\u5b8c\u6210\u63a8\u7406\uff0c\u5e76\u628a\u7ed3\u679c\u8fd4\u56de\u4e3b\u63a7\u7aef\uff0c\u4e3b\u673a\u7aef\u8fdb\u884c\u540e\u5904\u7406\u4ee5\u53ca\u663e\u793a\u7b49\u64cd\u4f5c\u3002 \u66f4\u591a\u5173\u4e8e\u88ab\u52a8\u6a21\u5f0f\u5f00\u53d1\u6d41\u7a0b\u7684\u4ecb\u7ecd\uff0c\u53ef\u4ee5\u53c2\u8003 \u5b98\u7f51wiki \u8fd9\u91cc\u4ee5mobilenet_v1\u4e3a\u4f8b\uff0c\u5728\u642d\u5efa\u597d\u7684windows\u73af\u5883\u4e0b\u4f7f\u7528mobilenet_v1\u6a21\u578b\uff0c\u793a\u4f8b\u5b9e\u73b0\u7684\u529f\u80fd\u662f\u5bf9\u4e00\u5f20\u56fe\u7247\u8fdb\u884c\u7279\u5f81\u63d0\u53d6\uff0c\u5e76\u8bc6\u522b\u8fd9\u5f20\u56fe\u7247\u6240\u5c5e\u5206\u7c7b\u3002 \u672c\u6587\u5c06\u5b9e\u73b0\u57fa\u4e8e\u4e0a\u7bc7\u6587\u7ae0\u5b9e\u73b0\u7684 Anaconda3 + TensorFlow(1.15) + Python3.6 + RKNN(\u8ba1\u7b97\u68d2\u4e13\u7528\u63a5\u53e3) + VSCode + OpenCV-Python \u73af\u5883\u4e0b\u7684mobilenet_v1\u6a21\u578b\u6d4b\u8bd5 1\u3001\u4e0b\u8f7d\u6e90\u4ee3\u7801 \u4ece\u5b98\u65b9FTP\u6587\u4ef6\u670d\u52a1\u5668\u4e0b\u8f7dmobilenet_v1\u538b\u7f29\u5305\uff0c\u5e76\u89e3\u538b\u51fa\u6765\uff1a wget http://repo.rock-chips.com/rk1808/mobilenet_v1.tar.gz tar xvf mobilenet_v1.tar.gz //win\u4f7f\u7528\u53f3\u952e\u89e3\u538b 2\u3001\u6e90\u4ee3\u7801\u76ee\u5f55\u8bf4\u660e \u4ee5\u4e0b\u662fmobilenet_v1\u793a\u4f8b\u7684\u76ee\u5f55\u7ed3\u6784\u53ca\u8bf4\u660e\u5982\u4e0b\uff1a dataset.txt: \u5305\u542b\u6d4b\u8bd5\u56fe\u7247\u8def\u5f84\u7684\u6587\u672c\u6587\u4ef6\u3002 dog_224x224.jpg: \u4f5c\u4e3amobilenet_v1\u793a\u4f8b\u7684\u6d4b\u8bd5\u56fe\u7247\u3002 mobilenet_v1.tflite: TensorFlow Lite\u6a21\u578b\u6587\u4ef6\u3002 mobilenet_v1.rknn: rknn\u6a21\u578b\u6587\u4ef6\u3002\u7531\u975erknn\u6a21\u578b\u6587\u4ef6\uff08\u8fd9\u91cc\u662fTensorFlow Lite\u6a21\u578b\uff09\u7ecf\u8fc7RKNN-Toolkit\u6a21\u578b\u8f6c\u6362\u751f\u6210\u7684\u8be5rknn\u6a21\u578b\u6587\u4ef6\u3002 test.py: \u793a\u4f8b\u8fd0\u884c\u811a\u672c(\u5305\u542brknn\u6a21\u578b\u8f6c\u6362\u90e8\u5206)\u3002 test_inference.py: \u793a\u4f8b\u8fd0\u884c\u811a\u672c\uff08\u4ec5\u52a0\u8f7drknn\u6a21\u578b\u8fdb\u884c\u63a8\u7406\uff09\u3002 3\u3001\u8fd0\u884c\u6d4b\u8bd5\uff1a \u4f7f\u7528VScode\u6253\u5f00 test.py \u6587\u4ef6\uff0c\u5982\u56fe\u6240\u793a\uff0c\u9009\u62e9\u6b63\u786e\u7684\u8fd0\u884c\u73af\u5883\uff1a \u8fd0\u884c\u6548\u679c\uff1a --> config model done --> Loading model done --> Building model done --> Export RKNN model done --> Init runtime environment done --> Running model mobilenet_v1 -----TOP 5----- [156]: 0.8837890625 [155]: 0.0677490234375 [188 205]: 0.00867462158203125 [188 205]: 0.00867462158203125 [263]: 0.0057525634765625 done --> Begin evaluate model performance ======================================================================== Performance ======================================================================== FPS: 136.30 ======================================================================== done 4\u3001\u7ed3\u679c\u8bf4\u660e\uff1a \u6839\u636e\u4ee5\u4e0a\u6267\u884c\u7ed3\u679c\u53ef\u77e5\uff0cTOP5\u8868\u793a\u6a21\u578b\u9884\u6d4b\u51fa\u6765\u7684\u6392\u540d\u524d5\u7684\u5206\u7c7b\u7684\u7ed3\u679c\uff0c\u5176\u4e2d[156]\u8868\u793a\u72d7\u7684\u6807\u7b7e\uff0c0.8837890625\u8868\u793a\u9884\u6d4b\u4e3a\u8be5\u6807\u7b7e\u7684\u6982\u7387\uff0c\u53ef\u4ee5\u770b\u51fa\u9884\u6d4b\u7ed3\u679c\u4e3a\u72d7\u7684\u53ef\u80fd\u6027\u6700\u5927\uff0c\u4ece\u6d4b\u8bd5\u56fe\u7247\uff08dog_224x224.jpg\uff09\u53ef\u4ee5\u770b\u51fa\u9884\u6d4b\u7ed3\u679c\u662f\u51c6\u786e\u7684\u3002","title":"RK1808S_AI\u8ba1\u7b97\u68d2\u2014RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0bmobilenet_v1\u6a21\u578b\u6d4b\u8bd5"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20145.RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0byolo_v3\u6a21\u578b\u6539\u8fdb/#rk1808s_airk1808mobilenet_v1","text":"RK1808S_AI\u8ba1\u7b97\u68d2\u2014RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0bmobilenet_v1\u6a21\u578b\u6d4b\u8bd5 0\u3001\u5f15\u8a00 \u88ab\u52a8\u6a21\u5f0f\u5f00\u53d1\u6d41\u7a0b\u7b80\u4ecb \u8fd9\u91cc\u4ee5mobilenet_v1\u4e3a\u4f8b\uff0c\u5728\u642d\u5efa\u597d\u7684windows\u73af\u5883\u4e0b\u4f7f\u7528mobilenet_v1\u6a21\u578b\uff0c\u793a\u4f8b\u5b9e\u73b0\u7684\u529f\u80fd\u662f\u5bf9\u4e00\u5f20\u56fe\u7247\u8fdb\u884c\u7279\u5f81\u63d0\u53d6\uff0c\u5e76\u8bc6\u522b\u8fd9\u5f20\u56fe\u7247\u6240\u5c5e\u5206\u7c7b\u3002 \u672c\u6587\u5c06\u5b9e\u73b0\u57fa\u4e8e\u4e0a\u7bc7\u6587\u7ae0\u5b9e\u73b0\u7684 Anaconda3+TensorFlow(1.15)+Python3.6+RKNN(\u8ba1\u7b97\u68d2\u4e13\u7528\u63a5\u53e3)+VSCode+OpenCV-Python\u73af\u5883\u4e0b\u7684mobilenet_v1\u6a21\u578b\u6d4b\u8bd5 1\u3001\u4e0b\u8f7d\u6e90\u4ee3\u7801 2\u3001\u6e90\u4ee3\u7801\u76ee\u5f55\u8bf4\u660e 3\u3001\u8fd0\u884c\u6d4b\u8bd5\uff1a 4\u3001\u7ed3\u679c\u8bf4\u660e\uff1a","title":"RK1808S_AI\u8ba1\u7b97\u68d2\u2014RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0bmobilenet_v1\u6a21\u578b\u6d4b\u8bd5"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20145.RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0byolo_v3\u6a21\u578b\u6539\u8fdb/#0","text":"","title":"0\u3001\u5f15\u8a00"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20145.RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0byolo_v3\u6a21\u578b\u6539\u8fdb/#_1","text":"\u88ab\u52a8\u6a21\u5f0f\u4e0b\uff1aRK1808 \u4eba\u5de5\u667a\u80fd\u8ba1\u7b97\u68d2\u662f\u4e00\u4e2a\u901a\u7528AI\u52a0\u901f\u5668\u3002\u4e3b\u673a\u7aef\u901a\u8fc7RKNN-Toolkit\u5c06\u6a21\u578b\u53ca\u524d\u5904\u7406\u540e\u7684\u6570\u636e\u4f20\u8f93\u7ed9RK1808 \u4eba\u5de5\u667a\u80fd\u8ba1\u7b97\u68d2\uff0cRK1808 \u4eba\u5de5\u667a\u80fd\u8ba1\u7b97\u68d2\u5b8c\u6210\u63a8\u7406\uff0c\u5e76\u628a\u7ed3\u679c\u8fd4\u56de\u4e3b\u63a7\u7aef\uff0c\u4e3b\u673a\u7aef\u8fdb\u884c\u540e\u5904\u7406\u4ee5\u53ca\u663e\u793a\u7b49\u64cd\u4f5c\u3002 \u66f4\u591a\u5173\u4e8e\u88ab\u52a8\u6a21\u5f0f\u5f00\u53d1\u6d41\u7a0b\u7684\u4ecb\u7ecd\uff0c\u53ef\u4ee5\u53c2\u8003 \u5b98\u7f51wiki","title":"\u88ab\u52a8\u6a21\u5f0f\u5f00\u53d1\u6d41\u7a0b\u7b80\u4ecb"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20145.RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0byolo_v3\u6a21\u578b\u6539\u8fdb/#mobilenet_v1windowsmobilenet_v1","text":"","title":"\u8fd9\u91cc\u4ee5mobilenet_v1\u4e3a\u4f8b\uff0c\u5728\u642d\u5efa\u597d\u7684windows\u73af\u5883\u4e0b\u4f7f\u7528mobilenet_v1\u6a21\u578b\uff0c\u793a\u4f8b\u5b9e\u73b0\u7684\u529f\u80fd\u662f\u5bf9\u4e00\u5f20\u56fe\u7247\u8fdb\u884c\u7279\u5f81\u63d0\u53d6\uff0c\u5e76\u8bc6\u522b\u8fd9\u5f20\u56fe\u7247\u6240\u5c5e\u5206\u7c7b\u3002"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20145.RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0byolo_v3\u6a21\u578b\u6539\u8fdb/#anaconda3tensorflow115python36rknnvscodeopencv-pythonmobilenet_v1","text":"","title":"\u672c\u6587\u5c06\u5b9e\u73b0\u57fa\u4e8e\u4e0a\u7bc7\u6587\u7ae0\u5b9e\u73b0\u7684 Anaconda3+TensorFlow(1.15)+Python3.6+RKNN(\u8ba1\u7b97\u68d2\u4e13\u7528\u63a5\u53e3)+VSCode+OpenCV-Python\u73af\u5883\u4e0b\u7684mobilenet_v1\u6a21\u578b\u6d4b\u8bd5"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20145.RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0byolo_v3\u6a21\u578b\u6539\u8fdb/#1","text":"\u4ece\u5b98\u65b9FTP\u6587\u4ef6\u670d\u52a1\u5668\u4e0b\u8f7dmobilenet_v1\u538b\u7f29\u5305\uff0c\u5e76\u89e3\u538b\u51fa\u6765\uff1a wget http://repo.rock-chips.com/rk1808/mobilenet_v1.tar.gz tar xvf mobilenet_v1.tar.gz //win\u4f7f\u7528\u53f3\u952e\u89e3\u538b","title":"1\u3001\u4e0b\u8f7d\u6e90\u4ee3\u7801"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20145.RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0byolo_v3\u6a21\u578b\u6539\u8fdb/#2","text":"\u4ee5\u4e0b\u662fmobilenet_v1\u793a\u4f8b\u7684\u76ee\u5f55\u7ed3\u6784\u53ca\u8bf4\u660e\u5982\u4e0b\uff1a dataset.txt: \u5305\u542b\u6d4b\u8bd5\u56fe\u7247\u8def\u5f84\u7684\u6587\u672c\u6587\u4ef6\u3002 dog_224x224.jpg: \u4f5c\u4e3amobilenet_v1\u793a\u4f8b\u7684\u6d4b\u8bd5\u56fe\u7247\u3002 mobilenet_v1.tflite: TensorFlow Lite\u6a21\u578b\u6587\u4ef6\u3002 mobilenet_v1.rknn: rknn\u6a21\u578b\u6587\u4ef6\u3002\u7531\u975erknn\u6a21\u578b\u6587\u4ef6\uff08\u8fd9\u91cc\u662fTensorFlow Lite\u6a21\u578b\uff09\u7ecf\u8fc7RKNN-Toolkit\u6a21\u578b\u8f6c\u6362\u751f\u6210\u7684\u8be5rknn\u6a21\u578b\u6587\u4ef6\u3002 test.py: \u793a\u4f8b\u8fd0\u884c\u811a\u672c(\u5305\u542brknn\u6a21\u578b\u8f6c\u6362\u90e8\u5206)\u3002 test_inference.py: \u793a\u4f8b\u8fd0\u884c\u811a\u672c\uff08\u4ec5\u52a0\u8f7drknn\u6a21\u578b\u8fdb\u884c\u63a8\u7406\uff09\u3002","title":"2\u3001\u6e90\u4ee3\u7801\u76ee\u5f55\u8bf4\u660e"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20145.RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0byolo_v3\u6a21\u578b\u6539\u8fdb/#3","text":"\u4f7f\u7528VScode\u6253\u5f00 test.py \u6587\u4ef6\uff0c\u5982\u56fe\u6240\u793a\uff0c\u9009\u62e9\u6b63\u786e\u7684\u8fd0\u884c\u73af\u5883\uff1a \u8fd0\u884c\u6548\u679c\uff1a --> config model done --> Loading model done --> Building model done --> Export RKNN model done --> Init runtime environment done --> Running model mobilenet_v1 -----TOP 5----- [156]: 0.8837890625 [155]: 0.0677490234375 [188 205]: 0.00867462158203125 [188 205]: 0.00867462158203125 [263]: 0.0057525634765625 done --> Begin evaluate model performance ======================================================================== Performance ======================================================================== FPS: 136.30 ======================================================================== done","title":"3\u3001\u8fd0\u884c\u6d4b\u8bd5\uff1a"},{"location":"RK1808S_AI\u8ba1\u7b97\u68d2\u20145.RK1808\u88ab\u52a8\u6a21\u5f0f\u4e0byolo_v3\u6a21\u578b\u6539\u8fdb/#4","text":"\u6839\u636e\u4ee5\u4e0a\u6267\u884c\u7ed3\u679c\u53ef\u77e5\uff0cTOP5\u8868\u793a\u6a21\u578b\u9884\u6d4b\u51fa\u6765\u7684\u6392\u540d\u524d5\u7684\u5206\u7c7b\u7684\u7ed3\u679c\uff0c\u5176\u4e2d[156]\u8868\u793a\u72d7\u7684\u6807\u7b7e\uff0c0.8837890625\u8868\u793a\u9884\u6d4b\u4e3a\u8be5\u6807\u7b7e\u7684\u6982\u7387\uff0c\u53ef\u4ee5\u770b\u51fa\u9884\u6d4b\u7ed3\u679c\u4e3a\u72d7\u7684\u53ef\u80fd\u6027\u6700\u5927\uff0c\u4ece\u6d4b\u8bd5\u56fe\u7247\uff08dog_224x224.jpg\uff09\u53ef\u4ee5\u770b\u51fa\u9884\u6d4b\u7ed3\u679c\u662f\u51c6\u786e\u7684\u3002","title":"4\u3001\u7ed3\u679c\u8bf4\u660e\uff1a"},{"location":"SUMMARY/","text":"\u9a71\u52a8\u7b2c\u4e00\u5929---\u9a71\u52a8\u57fa\u7840 \u9a71\u52a8\u7b2c\u4e8c\u5929---\u4e2d\u65ad\u4e0eI/O \u9a71\u52a8\u7b2c\u4e09\u5929---\u603b\u7ebf \u4e09\u79cd\u603b\u7ebf\u7684\u6a2a\u5411\u5bf9\u6bd4\u8868 ARM Linux\u8bbe\u5907\u6811 \u624b\u628a\u624b\u6559\u4f60\u4ece\u5355\u7247\u673a\u79fb\u690d\u9a71\u52a8\u5230ARM Linux\u4e0a [\u53f2\u4e0a\u6700\u8be6\u7ec6]VS Code\u642d\u5efaARM Linux Makefile\u5de5\u7a0bIDE\uff08C/C++\uff09","title":"SUMMARY"},{"location":"Ubuntu+VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/","text":"[\u9996\u53d1][\u53f2\u4e0a\u6700\u8be6\u7ec6][Ubuntu]VSCode\u642d\u5efaLinux Kernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883 [\u9996\u53d1][\u53f2\u4e0a\u6700\u8be6\u7ec6][Ubuntu]VSCode\u642d\u5efaLinux Kernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883 0.\u73af\u5883\u4ecb\u7ecd 0.0 \u4e3b\u673a\u7248\u672c 0.1 VS Code\u7248\u672c 1.\u51c6\u5907\u5de5\u4f5c 1.1\u3001\u5b89\u88c5Ubuntu 1.2\u3001\u5b89\u88c5VSCode 1.3\u3001\u5b89\u88c5VSCode\u63d2\u4ef6 1.4\u3001\u4e0b\u8f7dLinux\u5185\u6838\u4ee3\u7801 1.5\u3001\u642d\u5efaLinux\u5185\u6838\u7f16\u8bd1\u73af\u5883 2.Ubuntu\u4e0bVSCode\u642d\u5efaIDE 2.1\u3001\u4f7f\u7528VSCode\u6253\u5f00\u5185\u6838\u6e90\u7801 2.2\u3001\u5f00\u59cb\u7f16\u8bd1\u5185\u6838 2.3\u3001\u7f16\u8bd1Rootfs 2.4\u3001\u8fd0\u884cRootfs 2.5\u3001\u6d4b\u8bd5Debian\u7cfb\u7edf 2.6\u3001\u4e3b\u673a\u548c QEMU \u865a\u62df\u673a\u4e4b\u95f4\u5171\u4eab\u6587\u4ef6 \u6211\u4eec\u5728\u540e\u7eed\u4f1a\u7ecf\u5e38\u5229\u7528\u8fd9\u4e2a\u7279\u6027\uff0c\u6bd4\u5982\u628a\u7f16\u8bd1\u597d\u7684\u5185\u6838\u6a21\u5757\u6216\u8005\u5185\u6838\u6a21 \u5757\u6e90\u4ee3\u7801\u653e\u5165QEMU \u865a\u62df\u673a\u3002 3. \u4e00\u952e\u5355\u6b65\u8c03\u8bd5\u5185\u6838 3.1\u3001\u914d\u7f6e\u5185\u6838\u8c03\u8bd5\u547d\u4ee4 3.2\u3001\u914d\u7f6eVSCode Debug\u9009\u9879 3.3\u3001\u4e00\u952e\u8c03\u8bd5 3.4\u3001\u66f4\u591aGDB\u8c03\u8bd5\u6280\u5de7 4.\u5355\u6b65\u8c03\u8bd5\u5e94\u7528\u5c42+\u5185\u6838 4.1 \u521b\u5efa\u7b80\u5355\u7684APP\u7a0b\u5e8f 4.2 \u7f16\u8bd1&\u8c03\u8bd5 5.\u5355\u6b65\u8c03\u8bd5modules+\u5185\u6838 5.1\u3001\u7b80\u5355\u6d4b\u8bd5\u4ee3\u7801\u51c6\u5907 5.2\u3001\u5f00\u59cb\u8c03\u8bd5 \u7ee7\u4e0a\u4e00\u7bc7\u4ecb\u7ecd\u7eafWin10\u73af\u5883\u4e0b\u7684 [\u9996\u53d1][\u7eafWIN\u73af\u5883][\u53f2\u4e0a\u6700\u8be6\u7ec6]Win10\u4e0bVSCode\u642d\u5efaLinux Kernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883 \u672c\u7bc7\u7ee7\u7eed\u4ecb\u7ecd\u5728\u7eafUbuntu\u4e0b\u5229\u7528VSCode\u642d\u5efaLinux Kernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883 0.\u73af\u5883\u4ecb\u7ecd 0.0 \u4e3b\u673a\u7248\u672c \u4e3b\u673a\uff1aUbuntu\uff08\u5176\u4ed6\u4efb\u610fLinux\u53d1\u884c\u7248\u3001\u865a\u62df\u673a\u3001\u771f\u673a\u5747\u53ef\uff09 \u7248\u672c:18.04.4 \u7f16\u8bd1\u5668\uff1aaarch64-linux-gnu-gcc (gcc version 5.5.0) \u8c03\u8bd5\u5668\uff1a\u4e3b\u673a\uff1aaarch64-linux-gnu-gdb (gcc version 5.5.0) 0.1 VS Code\u7248\u672c \u7248\u672c: 1.46.1 \u63d0\u4ea4: cd9ea6488829f560dc949a8b2fb789f3cdc05f5d \u65e5\u671f: 2020-06-17T21:13:08.304Z Electron: 7.3.1 Chrome: 78.0.3904.130 Node.js: 12.8.1 V8: 7.8.279.23-electron.0 OS: Linux x64 5.3.0-28-generic 1.\u51c6\u5907\u5de5\u4f5c 1.1\u3001\u5b89\u88c5Ubuntu \u4e0b\u8f7d\u5b89\u88c5Ubuntu\uff0c\u5982\u672c\u4f8b\u4e2d\u63d0\u5230\u7684\uff1a ubuntu18.04 1.2\u3001\u5b89\u88c5VSCode Ubuntu\u7248\u7684VSCode\uff1a \u4e0b\u8f7d\u5730\u5740 1.3\u3001\u5b89\u88c5VSCode\u63d2\u4ef6 \u5728\u6269\u5c55\u91cc\u9762\u6dfb\u52a0\u5373\u53ef C/C++ (\u5fc5\u9009) C/C++ Intellisense(\u53ef\u9009) C/C++ Snippets(\u53ef\u9009) Remote Development(\u5fc5\u9009\u4e09\u4ef6\u5957\uff0c\u5fae\u8f6f\u5b98\u65b9\u51fa\u54c1) Remote-WSL Remote-SSH Remote-Containers \u8bbe\u5907\u6811\u63d2\u4ef6 Embedded Linux Dev Kconfig(\u8bbe\u5907\u6811\u63d2\u4ef6\u4f9d\u8d56) 1.4\u3001\u4e0b\u8f7dLinux\u5185\u6838\u4ee3\u7801 \u63a8\u8350\u4e0b\u8f7d\uff1a git clone https://e.coding.net/benshushu/runninglinuxkernel_4.0.git -b rlk_basic \u63a8\u8350\u7406\u7531\uff1a 1\u30014.0\u7248\u672c\u975e\u5e38\u7ecf\u5178\uff0c\u9002\u5408\u5b66\u4e60 2\u3001\u8be5\u4ee3\u7801\u4ed3\u5e93\u662f\u4e66\u7c4d\u7684\u914d\u5957\u4ee3\u7801\uff0c\u6bd4\u8f83\u5b8c\u5584 3\u3001\u8be5\u4ee3\u7801\u4ed3\u5e93\u5df2\u7ecf\u914d\u7f6e\u597d\u4e86\u5404\u79cd\u6bd4\u8f83\u70e6\u6742\u7684\u73af\u5883\uff0c\u5982\uff1aqemu\u7f51\u7edc\u6865\u63a5\u3001\u6839\u6587\u4ef6\u7cfb\u7edf\u3001qemu\u5171\u4eab\u6587\u4ef6\u5939\u7b49 4\u3001\u6700\u540e\u5f3a\u8c03\uff1a\u524d\u671f\u914d\u5957\u5f00\u53d1\u73af\u5883\uff0c\u4e0d\u9700\u8981\u91cd\u590d\u9020\u8f6e\u5b50\uff0c\u7ea0\u7ed3\u4e8e\u5c0f\u7ec6\u8282\uff0c\u5148\u7ad9\u5728\u5de8\u4eba\u80a9\u4e0a\uff0c\u6574\u5957\u6d41\u7a0b\u719f\u6089\u4e4b\u540e\uff0c\u53ef\u4ee5\u968f\u65f6\u66ff\u6362\u3001\u4fee\u6539\u8fd9\u5957\u73af\u5883 1.5\u3001\u642d\u5efaLinux\u5185\u6838\u7f16\u8bd1\u73af\u5883 Ubuntu18.04\u76f8\u5173\u95ee\u9898\u53ef\u76f4\u63a5\u767e\u5ea6\u67e5\u627e Linux\u73af\u5883\uff1aubuntu18.04 Linux\u5b89\u88c5\u4f9d\u8d56\u5305\uff1a sudo apt-get install qemu libncurses5-dev libssl-dev build-essential openssl bison bc flex git \u5f53\u7136\u4f60\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u5b89\u88c5\u7f16\u8bd1\u5185\u6838\u9700\u8981\u7684\u6240\u6709\u4f9d\u8d56\u5305\u3002 ./run_debian_arm64.sh run sudo apt build-dep linux-image-generic Linux\u73af\u5883\u5b89\u88c5\u7f16\u8bd1\u94fe\uff1a \u56e0\u4e3alinux \u5185\u6838\u7248\u672c\u539f\u56e0\uff0c\u56e0\u4e3a\u6240\u7528\u7248\u672c\u4e3a4.0\uff0c\u6240\u4ee5\u9700\u89815.x\u7684gcc\u4ea4\u53c9\u94fe \u4e00\u6b21\u6027\u5b89\u88c5ARM32/64\u6240\u7528\u7684\u4ea4\u53c9\u94fe sudo apt install gcc-5-aarch64-linux-gnu gcc-5-arm-linux-gnueabihf \u5982\u679c\u7cfb\u7edf\u4e2d\u5df2\u7ecf\u6709\u5176\u4ed6\u7248\u672c\u7684gcc\u4ea4\u53c9\u94fe\uff0c\u53ef\u4f7f\u7528 update-alternatives \u8fdb\u884c\u7ba1\u7406,\u53ef\u4ee5\u53c2\u8003\uff1a update-alternatives \u547d\u4ee4\u7684\u4e3b\u8981\u53c2\u6570\u5982\u4e0b update-alternatives --install <link> <name> <path> <priority> link\uff1a\u6307\u5411/etc/alternatives/<name>\u7684\u7b26\u53f7\u5f15\u7528 name\uff1a\u94fe\u63a5\u7684\u540d\u79f0 path\uff1a\u8fd9\u4e2a\u547d\u4ee4\u5bf9\u5e94\u7684\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5b9e\u9645\u8def\u5f84 priority\uff1a\u4f18\u5148\u7ea7\uff0c\u5728 auto \u6a21\u5f0f\u4e0b\uff0c\u6570\u5b57\u5927\u7684\u4f18\u5148\u7ea7\u6bd4\u8f83\u9ad8\u3002 2.Ubuntu\u4e0bVSCode\u642d\u5efaIDE \u5230\u8fd9\u91cc\u6211\u4eec\u5df2\u7ecf\u5b8c\u6210\u4e86Ubuntu\u3001VScode\u53ca\u5176\u63d2\u4ef6\u7684\u5b89\u88c5\uff0c\u63a5\u4e0b\u6765\u53ef\u4ee5\u4f7f\u7528VSCode\u8fdb\u884c\u7f16\u8bd1\u3001\u8c03\u8bd5 2.1\u3001\u4f7f\u7528VSCode\u6253\u5f00\u5185\u6838\u6e90\u7801 2.2\u3001\u5f00\u59cb\u7f16\u8bd1\u5185\u6838 \u5176\u5b9e\u8be5\u6e90\u7801\u76ee\u5f55\u5df2\u7ecf\u96c6\u6210\u597d\u7f16\u8bd1\u3001\u8fd0\u884c\u3001\u8c03\u8bd5\u6240\u9700\u8981\u7684\u811a\u672c \u8be5\u6e90\u7801\u5df2\u7ecf\u652f\u6301ARM32+debian\u6216ARM64+debian\uff0c\u672c\u4f8b\u4ee5\u4e3aARM64+Debian\u4e3a\u4f8b \u5728VSCode\u4e2d\u6309\u4e0b Ctrl+~ \u5373\u53ef\u8c03\u51fa\u7cfb\u7edf\u7ec8\u7aef\uff0c\u5728\u7ec8\u7aef\u4e2d\u8fd0\u884c\uff1a ./run_debian_arm64.sh build_kernel \u7f16\u8bd1\u5b8c\u6210\uff1a 2.3\u3001\u7f16\u8bd1Rootfs \u7f16\u8bd1 ARM64 \u7248\u672c\u7684Debian \u7cfb\u7edf rootfs $sudo ./run_debian_arm64.sh build_rootfs \u6ce8\u610f\uff1a\u8fd9\u91cc\u9700\u8981\u4f7f\u7528 root \u6743\u9650\u3002 \u7f16\u8bd1\u5b8c\u6210\u540e\u4f1a\u751f\u6210\u4e00\u4e2a rootfs_debian_arm64.ext4 \u7684\u6587\u4ef6\u7cfb\u7edf\u3002 2.4\u3001\u8fd0\u884cRootfs $ ./run_debian_arm64.sh run \u6ce8\u610f\uff1a\u8fd0\u884c\u6b64\u547d\u4ee4\u4e0d\u9700\u8981 root \u6743\u9650\u3002 \u6ce8\u610f\uff1a\u7528\u6237\u540d\uff1aroot \u5bc6\u7801:123 \u6210\u529f\u8fd0\u884c\u4e4b\u540e\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u6210\u529f\u767b\u5f55\u4e4b\u540e\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a 2.5\u3001\u6d4b\u8bd5Debian\u7cfb\u7edf \u56e0\u4e3a\u662f\u57fa\u4e8eDebian\u7cfb\u7edf\uff0c\u4e14\u7f51\u7edc\u7b49\u90fd\u662f\u5df2\u7ecf\u642d\u5efa\u597d\u7684\uff0c\u76f4\u63a5\u53ef\u4ee5\u4f7f\u7528APT\u7b49\u547d\u4ee4\u8fdb\u884c\u5b89\u88c5\u5728\u7ebf\u5305\uff0c\u4ee5\u4e0b\u4e3a\u7b80\u5355\u6d4b\u8bd5\uff1a QEMU \u865a\u62df\u673a\u53ef\u4ee5\u901a\u8fc7VirtIO-NET \u6280\u672f\u6765\u751f\u6210\u4e00\u4e2a\u865a\u62df\u7684\u7f51\u5361\uff0c\u5e76\u4e14\u901a\u8fc7 NAT\u7f51 \u7edc\u6865\u63a5\u6280\u672f\u548c\u4e3b\u673a\u8fdb\u884c\u7f51\u7edc\u5171\u4eab\u3002\u9996\u5148\u4f7f\u7528 ifconfig \u547d\u4ee4\u6765\u68c0\u67e5\u7f51\u7edc\u914d\u7f6e\u3002 \u53ef\u4ee5\u770b\u5230\u751f\u6210\u4e86\u4e00\u4e2a\u540d\u4e3a eth0 \u7684\u7f51\u5361\u8bbe\u5907\uff0c\u5206\u914d\u7684 IP \u5730\u5740\u4e3a\uff1a 10.0.2.15 \u3002 \u901a\u8fc7 apt update \u547d\u4ee4\u6765\u66f4\u65b0 Debian \u7cfb\u7edf\u7684\u8f6f\u4ef6\u4ed3\u5e93\u3002 2.6\u3001\u4e3b\u673a\u548c QEMU \u865a\u62df\u673a\u4e4b\u95f4\u5171\u4eab\u6587\u4ef6 \u4e3b\u673a\u548c QEMU \u865a\u62df\u673a\u53ef\u4ee5\u901a\u8fc7NET_9P \u6280\u672f\u8fdb\u884c\u6587\u4ef6\u5171\u4eab\uff0c\u8fd9\u4e2a\u9700\u8981 QEMU \u865a \u62df\u673a\u7684 Linux \u5185\u6838\u4f7f\u80fd NET_9P \u7684\u5185\u6838\u6a21\u5757\u3002\u672c\u5e73\u53f0\u5df2\u7ecf\u652f\u6301\u4e3b\u673a\u548c QEMU \u865a\u62df\u673a\u7684\u5171\u4eab\u6587\u4ef6\uff0c\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u7b80\u5355\u65b9\u6cd5\u6765\u6d4b\u8bd5\u3002 \u5171\u4eab\u76ee\u5f55\u4e3a:kmodules \u7cfb\u7edf\u76ee\u5f55\u4e3a:mnt \u6548\u679c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u5728 kmodules \u76ee\u5f55\u4e0b\u9762\u65b0\u5efa\u4e00\u4e2a test.c \u6587\u4ef6\u3002 \u6211\u4eec\u5728\u540e\u7eed\u4f1a\u7ecf\u5e38\u5229\u7528\u8fd9\u4e2a\u7279\u6027\uff0c\u6bd4\u5982\u628a\u7f16\u8bd1\u597d\u7684\u5185\u6838\u6a21\u5757\u6216\u8005\u5185\u6838\u6a21 \u5757\u6e90\u4ee3\u7801\u653e\u5165QEMU \u865a\u62df\u673a\u3002 3. \u4e00\u952e\u5355\u6b65\u8c03\u8bd5\u5185\u6838 \u76f4\u5230\u8fd9\u4e00\u6b65\uff0c\u5df2\u7ecf\u5b8c\u6210\u4e86\u57fa\u4e8eWSL+VScode\u7684\u73af\u5883\u642d\u5efa\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u96c6\u7ec8\u7aef\u3001\u6587\u4ef6\u7ba1\u7406\u5668\u3001git\u7ba1\u7406\u5668\u3001\u8fd0\u884c\u8c03\u8bd5\u7b49\u7b49\u7b49\u4e00\u4f53\u5316\u7684IDE\u73af\u5883\u4e86\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u7eafWIN10\u4e0b\u5b9e\u73b0\u5355\u6b65\u8c03\u8bd5\u5185\u6838\u7684\u76ee\u7684\u4e86\uff0c\u975e\u5e38\u65b9\u4fbf\u3002 3.1\u3001\u914d\u7f6e\u5185\u6838\u8c03\u8bd5\u547d\u4ee4 \u5185\u6838\u7684\u7f16\u8bd1\u8c03\u8bd5\u547d\u4ee4\u5df2\u7ecf\u5168\u90e8\u6253\u5305\u8fdb\u4e86\u811a\u672c\u6587\u4ef6\uff0c\u611f\u5174\u8da3\u7684\u7ae5\u978b\u53ef\u4ee5\u53bb\u6df1\u5165\u4e86\u89e3\u4e00\u4e0b\uff0c\u8fd9\u91cc\u4ee5ARM64\u4e3a\u4f8b\uff1a ./run_debian_arm64.sh run debug \u6b64\u65f6\uff0cgdbserver\u5df2\u7ecf\u57281234\u7aef\u53e3\u7b49\u5f85\u8fde\u63a5\uff01 3.2\u3001\u914d\u7f6eVSCode Debug\u9009\u9879 \u9009\u62e9\uff1a\u8fd0\u884c\uff08R\uff09-> \u6dfb\u52a0\u914d\u7f6e -> C++\uff08GDB/LDB\uff09 \u5982\u4e0b\u52a8\u56fe\u6240\u793a\uff1a \u6dfb\u52a0\u5982\u4e0b\u914d\u7f6e\u4fe1\u606f\uff1a { // \u4f7f\u7528 IntelliSense \u4e86\u89e3\u76f8\u5173\u5c5e\u6027\u3002 // \u60ac\u505c\u4ee5\u67e5\u770b\u73b0\u6709\u5c5e\u6027\u7684\u63cf\u8ff0\u3002 // \u6b32\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95ee: https://go.microsoft.com/fwlink/?linkid=830387 \"version\": \"0.2.0\", \"configurations\": [ { \"name\": \"(gdb) \u542f\u52a8\", \"type\": \"cppdbg\", \"request\": \"launch\", \"program\": \"${workspaceFolder}/vmlinux\", \"args\": [], \"stopAtEntry\": true, \"cwd\": \"${workspaceFolder}\", \"environment\": [], \"externalConsole\": true,// \u8c03\u8bd5\u65f6\u662f\u5426\u663e\u793a\u63a7\u5236\u53f0\u7a97\u53e3\uff0c\u4e00\u822c\u8bbe\u7f6e\u4e3atrue\u663e\u793a\u63a7\u5236\u53f0 \"MIMode\": \"gdb\", \"miDebuggerPath\":\"/usr/local/bin/aarch64-linux-gnu-gdb\", \"miDebuggerServerAddress\": \"localhost:1234\", \"setupCommands\": [ { \"description\": \"\u4e3a gdb \u542f\u7528\u6574\u9f50\u6253\u5370\", \"text\": \"-enable-pretty-printing\", \"ignoreFailures\": true } ] } ] } \u6ce8\u610f: localhost \u662f\u672c\u5730\u7684IP\u4e5f\u5c31\u662f\u8fd0\u884cqemu\u7684ubuntu\u7684IP\uff0c\u54ea\u4e2a\u4e3b\u673a\u8fd0\u884c ./run_debian_arm64.sh run debug \u5c31\u53d6\u8be5\u4e3b\u673a\u7684IP\uff0c\u56e0\u4e3a\u6b64\u65f6\u662f\u540c\u4e00\u53f0\u4e3b\u673a\uff0c\u6240\u4ee5\u5c31\u586b localhost gdb\u8def\u5f84\uff1a\"miDebuggerPath\":\"/usr/local/bin/aarch64-linux-gnu-gdb\" gdb\u76d1\u542c\u7aef\u53e3\uff1a\"miDebuggerServerAddress\": \"localhost\",1234\u4e0e\u4e0a\u4e00\u5c0f\u8282\u4e2d\u7684Listen\u7aef\u53e3\u4e00\u81f4\uff01 3.3\u3001\u4e00\u952e\u8c03\u8bd5 \u7ecf\u8fc73.1\u30013.2\u7684\u914d\u7f6e\u5df2\u7ecf\u5b9e\u73b0\u4e86\u8c03\u8bd5\u7684\u524d\u7f6e\u6761\u4ef6\uff0c\u73b0\u53ea\u9700\u6309\u4e0bF5\u952e\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4e00\u952e\u8c03\u8bd5\u4e86\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a 3.4\u3001\u66f4\u591aGDB\u8c03\u8bd5\u6280\u5de7 \u5728\u7ec8\u7aef\u754c\u9762\u680f\uff0c\u5207\u6362\u81f3\u8c03\u8bd5\u63a7\u5236\u53f0;\u8f93\u5165\u547d\u4ee4\uff0c\u5982\uff1a -exec info registers \uff0c\u5373\u53ef\u67e5\u770b\u8c03\u8bd5\u8fc7\u4e2d\u7684\u7684\u5bc4\u5b58\u5668 4.\u5355\u6b65\u8c03\u8bd5\u5e94\u7528\u5c42+\u5185\u6838 \u7ecf\u8fc7\u524d\u97620~3\u7684\u94fa\u57ab\uff0c\u6211\u4eec\u5df2\u7ecf\u5177\u5907\u4e86\u4ee5\u4e0b\u4e09\u4e2a\u6761\u4ef6\uff1a 1\u3001\u5b8c\u6574\u7684\u5185\u6838\uff08\u7f16\u8bd1\u73af\u5883\u3001\u8c03\u8bd5\u73af\uff09+\u5b8c\u6574\u7684Rootfs 2\u3001\u5b8c\u6574\u7684qemu\u73af\u5883,\u5305\u62ec\uff1a\u7f51\u7edc\u5171\u4eab\u3001\u6865\u63a5\u7b49\uff0c\u53ef\u4ee5\u968f\u65f6\u5c06\u4e3b\u673a\u7684\u6587\u4ef6\u5171\u4eab\u7ed9qemu\uff08\u672c\u5730\u7684kmodules\u6587\u4ef6\u5939\u300a---\u300b\u865a\u62df\u673a\u91cc\u9762\u7684mnt\u6587\u4ef6\u5939\uff09 3\u3001\u5b8c\u6574\u7684GDB\u8c03\u8bd5\u73af\u5883\uff0c\u53ef\u4ee5\u5b9e\u73b0\u5185\u6838\u5355\u6b65\u8c03\u8bd5 \u90a3\u4e48\uff0c\u9488\u5bf9\u4ee5\u4e0a\u6761\u4ef6\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u8c03\u8bd5\u6216\u8005\u53c2\u8003\u4e00\u4e2aLinux\u5e94\u7528\u7a0b\u5e8f\u5982\u4f55\u8bbf\u95ee\u5230\u5185\u6838\u7684\uff0c\u662f\u5426\u53ef\u4ee5\u5b8c\u6210\u5462\uff1f\u7b54\u6848\u662f\u53ef\u4ee5\u7684\uff01 \u8bf7\u770b\u4e0b\u9762\uff01 4.1 \u521b\u5efa\u7b80\u5355\u7684APP\u7a0b\u5e8f \u5728 kmodules\u6587\u4ef6\u5939 \u91cc\u9762\u65b0\u5efa\u4e00\u4e2a test.c \u5185\u5bb9\u5982\u4e0b\uff1a #include <stdio.h> #include <stdlib.h> #include <unistd.h> #include <sys/types.h> #include <sys/stat.h> #include <fcntl.h> #include <errno.h> unsigned char readbuf[255]; int count = 0; int main(void) { int fd ; int retval; printf(\"hello world!\\n\"); fd = open(\"./README\",O_RDONLY); if ( fd == -1 ) { perror( \"open dht11 error\\n\" ) ; exit( -1 ) ; } printf( \"open ./README\\n\" ) ; sleep( 2 ) ; while( 1 ) { sleep( 1 ) ; if(count++ == 0) { printf(\"count=%d\\n\",count); } } close( fd ) ; return 0; } 4.2 \u7f16\u8bd1&\u8c03\u8bd5 \u8f93\u5165\u7f16\u8bd1\u547d\u4ee4\uff1a aarch64-linux-gnu-gcc test.c -o test \u5373\u53ef\u5728kmodules\u6587\u4ef6\u5939\u4e0b\u9762\u5f97\u5230\u4e00\u4e2a\u65b0\u7684test\u5e94\u7528\u7a0b\u5e8f\u3002 \u63a5\u7740\uff0c\u6309\u7b2c\u4e09\u8282\u505a\u6cd5\u8fdb\u5165\u53ef\u5355\u6b65\u8c03\u8bd5\u5185\u6838\u7684\u73af\u5883\u3002 \u6574\u4f53\u6f14\u793a\u6548\u679c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u53ea\u662f\u7b80\u5355\u7684\u6f14\u793a\uff0c\u5b9e\u73b0\u4ece\u5e94\u7528\u5c42\u5230\u5185\u6838\u5c42\u7684\u8c03\u7528\u8fc7\u7a0b\uff0c\u66f4\u6df1\u7684\u5e94\u7528\u53ef\u4ee5\u7ee7\u7eed\u53d1\u6398\u3002 5.\u5355\u6b65\u8c03\u8bd5modules+\u5185\u6838 5.1\u3001\u7b80\u5355\u6d4b\u8bd5\u4ee3\u7801\u51c6\u5907 \u5728\u4e3b\u673a kmodules\u6587\u4ef6\u5939 \u4e0b\u65b0\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u5185\u6838\u6a21\u5757\u7a0b\u5e8f hello_drv.c \u53ca\u5bf9\u5e94\u7684Makefile\u6587\u4ef6 \u5185\u6838\u6a21\u5757\u7a0b\u5e8f hello_drv.c \u5185\u5bb9\u793a\u4f8b\uff1a /* * 1 include files * 2 __init module_init() insmod * 3 __exit module_exit() rmmod * 4 GPL BSD Aeplli GPLv2 MIT * 5 module_license(GPL) */ #include <linux/init.h> #include <linux/module.h> #include <linux/fs.h> #include <linux/device.h> #include <asm/uaccess.h> #include <asm/io.h> #include <linux/device.h> struct class *hello_class; struct device * hello_dev; int hello_open(struct inode *inode, struct file *flips) { printk(\"--------------%s--------------\\n\",__FUNCTION__); return 0; } static ssize_t hello_write(struct file *file, const char __user *in, size_t size, loff_t *off) { printk(\"--------------%s--------------\\n\",__FUNCTION__); unsigned int buf = 88; copy_from_user(&buf, in ,size ); printk(\"write buf is : %d\\n\",buf); } static ssize_t hello_read(struct file *file, char __user *buf, size_t nbytes, loff_t *ppos) { printk(\"--------------%s--------------\\n\",__FUNCTION__); unsigned int a = 100; copy_to_user(buf,&a,sizeof(int)); } static int my_major = 0; const struct file_operations myfops={ .open = hello_open, .write= hello_write, .read = hello_read, }; static int __init hello_init(void) { printk(\"--------------%s--------------\\n\",__FUNCTION__);//app printf my_major = register_chrdev(0,\"hello\",&myfops); if(my_major <0) { printk(\"reg error!\\n\"); } else printk(\"my_major =%d\",my_major); hello_class = class_create(THIS_MODULE,\"hello_class\");//creat hello_class hello_dev = device_create(hello_class, NULL,MKDEV(my_major,0), NULL, \\ \"hello_dev\");//creat hello_dev--->>/dev/hello_dev return 0; } static void __exit hello_exit(void) { printk(\"--------------%s--------------\\n\",__FUNCTION__); device_destroy(hello_class,MKDEV(my_major,0)); class_destroy(hello_class); unregister_chrdev(my_major,\"hello\"); } module_init(hello_init); module_exit(hello_exit); MODULE_LICENSE(\"GPL\"); \u5185\u6838\u6a21\u5757\u7a0b\u5e8f Makefile \u5185\u5bb9\u793a\u4f8b\uff1a ifeq ($(KERNELRELEASE),) export ARCH=arm64 export CROSS_COMPILE=aarch64-linux-gnu- KERNELDIR=/home/jackeyt/runninglinuxkernel_4.0-rlk_basic #your kernel dirction NFS_DIR=$(KERNELDIR)/kmodules CUR_DIR := $(shell pwd) all : make -C $(KERNELDIR) M=$(CUR_DIR) modules install: cp -ranf *.ko $(NFS_DIR)/ clean : make -C $(KERNELDIR) M=$(CUR_DIR) clean .PHONY: modules install clean else obj-m := hello_drv.o endif \u7f16\u8bd1 \u6ce8\u610f\uff0c\u8fd9\u91cc\u7684\u7f16\u8bd1\u5e94\u8be5\u662f\u5728\u4e3b\u673a\u73af\u5883\u4e0b\uff0c\u5373WSL\u7684\u547d\u4ee4\u884c\u4e2d\uff1a make 5.2\u3001\u5f00\u59cb\u8c03\u8bd5 \u6211\u4eec\u77e5\u9053\u5f53\u4f7f\u7528 insmod \u65f6\uff0c\u4f1a\u8c03\u7528\u5bf9\u5e94\u7684 __init \u63a5\u53e3\uff0c\u800c\u5728\u672c\u4f8b\u4e2d\uff0c hello_init \u5c31\u4e3a\u5165\u53e3\u51fd\u6570\uff0c\u56e0\u6b64\u7b80\u5355\u6d4b\u8bd5\u4e00\u4e0b\uff0c\u5728\u5185\u6838\u4e2d\u627e\u5230 register_chrdev \u5bf9\u5e94\u7684\u63a5\u53e3\u5b9a\u4e49\uff0c\u5e76\u6253\u597d\u65ad\u70b9\uff0c\u5f85 insmod \u6267\u884c\u4e4b\u540e\uff0c\u89c2\u5bdf\u5185\u6838\u7684\u8fd0\u884c\u8fc7\u7a0b\u3002 \u5728\u5185\u6838\u4e2d\u6253\u4e0a\u76f8\u5e94\u65ad\u70b9\uff1a \u6f14\u793a\u6548\u679c\u52a8\u56fe\uff1a","title":"1.IDE\u73af\u5883\u642d\u5efa[\u7eafUbuntu]"},{"location":"Ubuntu+VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#ubuntuvscodelinux-kernelide","text":"[\u9996\u53d1][\u53f2\u4e0a\u6700\u8be6\u7ec6][Ubuntu]VSCode\u642d\u5efaLinux Kernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883 0.\u73af\u5883\u4ecb\u7ecd 0.0 \u4e3b\u673a\u7248\u672c 0.1 VS Code\u7248\u672c 1.\u51c6\u5907\u5de5\u4f5c 1.1\u3001\u5b89\u88c5Ubuntu 1.2\u3001\u5b89\u88c5VSCode 1.3\u3001\u5b89\u88c5VSCode\u63d2\u4ef6 1.4\u3001\u4e0b\u8f7dLinux\u5185\u6838\u4ee3\u7801 1.5\u3001\u642d\u5efaLinux\u5185\u6838\u7f16\u8bd1\u73af\u5883 2.Ubuntu\u4e0bVSCode\u642d\u5efaIDE 2.1\u3001\u4f7f\u7528VSCode\u6253\u5f00\u5185\u6838\u6e90\u7801 2.2\u3001\u5f00\u59cb\u7f16\u8bd1\u5185\u6838 2.3\u3001\u7f16\u8bd1Rootfs 2.4\u3001\u8fd0\u884cRootfs 2.5\u3001\u6d4b\u8bd5Debian\u7cfb\u7edf 2.6\u3001\u4e3b\u673a\u548c QEMU \u865a\u62df\u673a\u4e4b\u95f4\u5171\u4eab\u6587\u4ef6 \u6211\u4eec\u5728\u540e\u7eed\u4f1a\u7ecf\u5e38\u5229\u7528\u8fd9\u4e2a\u7279\u6027\uff0c\u6bd4\u5982\u628a\u7f16\u8bd1\u597d\u7684\u5185\u6838\u6a21\u5757\u6216\u8005\u5185\u6838\u6a21 \u5757\u6e90\u4ee3\u7801\u653e\u5165QEMU \u865a\u62df\u673a\u3002 3. \u4e00\u952e\u5355\u6b65\u8c03\u8bd5\u5185\u6838 3.1\u3001\u914d\u7f6e\u5185\u6838\u8c03\u8bd5\u547d\u4ee4 3.2\u3001\u914d\u7f6eVSCode Debug\u9009\u9879 3.3\u3001\u4e00\u952e\u8c03\u8bd5 3.4\u3001\u66f4\u591aGDB\u8c03\u8bd5\u6280\u5de7 4.\u5355\u6b65\u8c03\u8bd5\u5e94\u7528\u5c42+\u5185\u6838 4.1 \u521b\u5efa\u7b80\u5355\u7684APP\u7a0b\u5e8f 4.2 \u7f16\u8bd1&\u8c03\u8bd5 5.\u5355\u6b65\u8c03\u8bd5modules+\u5185\u6838 5.1\u3001\u7b80\u5355\u6d4b\u8bd5\u4ee3\u7801\u51c6\u5907 5.2\u3001\u5f00\u59cb\u8c03\u8bd5 \u7ee7\u4e0a\u4e00\u7bc7\u4ecb\u7ecd\u7eafWin10\u73af\u5883\u4e0b\u7684 [\u9996\u53d1][\u7eafWIN\u73af\u5883][\u53f2\u4e0a\u6700\u8be6\u7ec6]Win10\u4e0bVSCode\u642d\u5efaLinux Kernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883 \u672c\u7bc7\u7ee7\u7eed\u4ecb\u7ecd\u5728\u7eafUbuntu\u4e0b\u5229\u7528VSCode\u642d\u5efaLinux Kernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883","title":"[\u9996\u53d1][\u53f2\u4e0a\u6700\u8be6\u7ec6][Ubuntu]VSCode\u642d\u5efaLinux Kernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883"},{"location":"Ubuntu+VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#0","text":"","title":"0.\u73af\u5883\u4ecb\u7ecd"},{"location":"Ubuntu+VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#00","text":"\u4e3b\u673a\uff1aUbuntu\uff08\u5176\u4ed6\u4efb\u610fLinux\u53d1\u884c\u7248\u3001\u865a\u62df\u673a\u3001\u771f\u673a\u5747\u53ef\uff09 \u7248\u672c:18.04.4 \u7f16\u8bd1\u5668\uff1aaarch64-linux-gnu-gcc (gcc version 5.5.0) \u8c03\u8bd5\u5668\uff1a\u4e3b\u673a\uff1aaarch64-linux-gnu-gdb (gcc version 5.5.0)","title":"0.0 \u4e3b\u673a\u7248\u672c"},{"location":"Ubuntu+VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#01-vs-code","text":"\u7248\u672c: 1.46.1 \u63d0\u4ea4: cd9ea6488829f560dc949a8b2fb789f3cdc05f5d \u65e5\u671f: 2020-06-17T21:13:08.304Z Electron: 7.3.1 Chrome: 78.0.3904.130 Node.js: 12.8.1 V8: 7.8.279.23-electron.0 OS: Linux x64 5.3.0-28-generic","title":"0.1 VS Code\u7248\u672c"},{"location":"Ubuntu+VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#1","text":"","title":"1.\u51c6\u5907\u5de5\u4f5c"},{"location":"Ubuntu+VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#11ubuntu","text":"\u4e0b\u8f7d\u5b89\u88c5Ubuntu\uff0c\u5982\u672c\u4f8b\u4e2d\u63d0\u5230\u7684\uff1a ubuntu18.04","title":"1.1\u3001\u5b89\u88c5Ubuntu"},{"location":"Ubuntu+VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#12vscode","text":"Ubuntu\u7248\u7684VSCode\uff1a \u4e0b\u8f7d\u5730\u5740","title":"1.2\u3001\u5b89\u88c5VSCode"},{"location":"Ubuntu+VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#13vscode","text":"\u5728\u6269\u5c55\u91cc\u9762\u6dfb\u52a0\u5373\u53ef C/C++ (\u5fc5\u9009) C/C++ Intellisense(\u53ef\u9009) C/C++ Snippets(\u53ef\u9009) Remote Development(\u5fc5\u9009\u4e09\u4ef6\u5957\uff0c\u5fae\u8f6f\u5b98\u65b9\u51fa\u54c1) Remote-WSL Remote-SSH Remote-Containers \u8bbe\u5907\u6811\u63d2\u4ef6 Embedded Linux Dev Kconfig(\u8bbe\u5907\u6811\u63d2\u4ef6\u4f9d\u8d56)","title":"1.3\u3001\u5b89\u88c5VSCode\u63d2\u4ef6"},{"location":"Ubuntu+VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#14linux","text":"\u63a8\u8350\u4e0b\u8f7d\uff1a git clone https://e.coding.net/benshushu/runninglinuxkernel_4.0.git -b rlk_basic \u63a8\u8350\u7406\u7531\uff1a 1\u30014.0\u7248\u672c\u975e\u5e38\u7ecf\u5178\uff0c\u9002\u5408\u5b66\u4e60 2\u3001\u8be5\u4ee3\u7801\u4ed3\u5e93\u662f\u4e66\u7c4d\u7684\u914d\u5957\u4ee3\u7801\uff0c\u6bd4\u8f83\u5b8c\u5584 3\u3001\u8be5\u4ee3\u7801\u4ed3\u5e93\u5df2\u7ecf\u914d\u7f6e\u597d\u4e86\u5404\u79cd\u6bd4\u8f83\u70e6\u6742\u7684\u73af\u5883\uff0c\u5982\uff1aqemu\u7f51\u7edc\u6865\u63a5\u3001\u6839\u6587\u4ef6\u7cfb\u7edf\u3001qemu\u5171\u4eab\u6587\u4ef6\u5939\u7b49 4\u3001\u6700\u540e\u5f3a\u8c03\uff1a\u524d\u671f\u914d\u5957\u5f00\u53d1\u73af\u5883\uff0c\u4e0d\u9700\u8981\u91cd\u590d\u9020\u8f6e\u5b50\uff0c\u7ea0\u7ed3\u4e8e\u5c0f\u7ec6\u8282\uff0c\u5148\u7ad9\u5728\u5de8\u4eba\u80a9\u4e0a\uff0c\u6574\u5957\u6d41\u7a0b\u719f\u6089\u4e4b\u540e\uff0c\u53ef\u4ee5\u968f\u65f6\u66ff\u6362\u3001\u4fee\u6539\u8fd9\u5957\u73af\u5883","title":"1.4\u3001\u4e0b\u8f7dLinux\u5185\u6838\u4ee3\u7801"},{"location":"Ubuntu+VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#15linux","text":"Ubuntu18.04\u76f8\u5173\u95ee\u9898\u53ef\u76f4\u63a5\u767e\u5ea6\u67e5\u627e Linux\u73af\u5883\uff1aubuntu18.04 Linux\u5b89\u88c5\u4f9d\u8d56\u5305\uff1a sudo apt-get install qemu libncurses5-dev libssl-dev build-essential openssl bison bc flex git \u5f53\u7136\u4f60\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u5b89\u88c5\u7f16\u8bd1\u5185\u6838\u9700\u8981\u7684\u6240\u6709\u4f9d\u8d56\u5305\u3002 ./run_debian_arm64.sh run sudo apt build-dep linux-image-generic Linux\u73af\u5883\u5b89\u88c5\u7f16\u8bd1\u94fe\uff1a \u56e0\u4e3alinux \u5185\u6838\u7248\u672c\u539f\u56e0\uff0c\u56e0\u4e3a\u6240\u7528\u7248\u672c\u4e3a4.0\uff0c\u6240\u4ee5\u9700\u89815.x\u7684gcc\u4ea4\u53c9\u94fe \u4e00\u6b21\u6027\u5b89\u88c5ARM32/64\u6240\u7528\u7684\u4ea4\u53c9\u94fe sudo apt install gcc-5-aarch64-linux-gnu gcc-5-arm-linux-gnueabihf \u5982\u679c\u7cfb\u7edf\u4e2d\u5df2\u7ecf\u6709\u5176\u4ed6\u7248\u672c\u7684gcc\u4ea4\u53c9\u94fe\uff0c\u53ef\u4f7f\u7528 update-alternatives \u8fdb\u884c\u7ba1\u7406,\u53ef\u4ee5\u53c2\u8003\uff1a update-alternatives \u547d\u4ee4\u7684\u4e3b\u8981\u53c2\u6570\u5982\u4e0b update-alternatives --install <link> <name> <path> <priority> link\uff1a\u6307\u5411/etc/alternatives/<name>\u7684\u7b26\u53f7\u5f15\u7528 name\uff1a\u94fe\u63a5\u7684\u540d\u79f0 path\uff1a\u8fd9\u4e2a\u547d\u4ee4\u5bf9\u5e94\u7684\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5b9e\u9645\u8def\u5f84 priority\uff1a\u4f18\u5148\u7ea7\uff0c\u5728 auto \u6a21\u5f0f\u4e0b\uff0c\u6570\u5b57\u5927\u7684\u4f18\u5148\u7ea7\u6bd4\u8f83\u9ad8\u3002","title":"1.5\u3001\u642d\u5efaLinux\u5185\u6838\u7f16\u8bd1\u73af\u5883"},{"location":"Ubuntu+VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#2ubuntuvscodeide","text":"\u5230\u8fd9\u91cc\u6211\u4eec\u5df2\u7ecf\u5b8c\u6210\u4e86Ubuntu\u3001VScode\u53ca\u5176\u63d2\u4ef6\u7684\u5b89\u88c5\uff0c\u63a5\u4e0b\u6765\u53ef\u4ee5\u4f7f\u7528VSCode\u8fdb\u884c\u7f16\u8bd1\u3001\u8c03\u8bd5","title":"2.Ubuntu\u4e0bVSCode\u642d\u5efaIDE"},{"location":"Ubuntu+VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#21vscode","text":"","title":"2.1\u3001\u4f7f\u7528VSCode\u6253\u5f00\u5185\u6838\u6e90\u7801"},{"location":"Ubuntu+VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#22","text":"\u5176\u5b9e\u8be5\u6e90\u7801\u76ee\u5f55\u5df2\u7ecf\u96c6\u6210\u597d\u7f16\u8bd1\u3001\u8fd0\u884c\u3001\u8c03\u8bd5\u6240\u9700\u8981\u7684\u811a\u672c \u8be5\u6e90\u7801\u5df2\u7ecf\u652f\u6301ARM32+debian\u6216ARM64+debian\uff0c\u672c\u4f8b\u4ee5\u4e3aARM64+Debian\u4e3a\u4f8b \u5728VSCode\u4e2d\u6309\u4e0b Ctrl+~ \u5373\u53ef\u8c03\u51fa\u7cfb\u7edf\u7ec8\u7aef\uff0c\u5728\u7ec8\u7aef\u4e2d\u8fd0\u884c\uff1a ./run_debian_arm64.sh build_kernel \u7f16\u8bd1\u5b8c\u6210\uff1a","title":"2.2\u3001\u5f00\u59cb\u7f16\u8bd1\u5185\u6838"},{"location":"Ubuntu+VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#23rootfs","text":"\u7f16\u8bd1 ARM64 \u7248\u672c\u7684Debian \u7cfb\u7edf rootfs $sudo ./run_debian_arm64.sh build_rootfs \u6ce8\u610f\uff1a\u8fd9\u91cc\u9700\u8981\u4f7f\u7528 root \u6743\u9650\u3002 \u7f16\u8bd1\u5b8c\u6210\u540e\u4f1a\u751f\u6210\u4e00\u4e2a rootfs_debian_arm64.ext4 \u7684\u6587\u4ef6\u7cfb\u7edf\u3002","title":"2.3\u3001\u7f16\u8bd1Rootfs"},{"location":"Ubuntu+VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#24rootfs","text":"$ ./run_debian_arm64.sh run \u6ce8\u610f\uff1a\u8fd0\u884c\u6b64\u547d\u4ee4\u4e0d\u9700\u8981 root \u6743\u9650\u3002 \u6ce8\u610f\uff1a\u7528\u6237\u540d\uff1aroot \u5bc6\u7801:123 \u6210\u529f\u8fd0\u884c\u4e4b\u540e\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u6210\u529f\u767b\u5f55\u4e4b\u540e\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a","title":"2.4\u3001\u8fd0\u884cRootfs"},{"location":"Ubuntu+VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#25debian","text":"\u56e0\u4e3a\u662f\u57fa\u4e8eDebian\u7cfb\u7edf\uff0c\u4e14\u7f51\u7edc\u7b49\u90fd\u662f\u5df2\u7ecf\u642d\u5efa\u597d\u7684\uff0c\u76f4\u63a5\u53ef\u4ee5\u4f7f\u7528APT\u7b49\u547d\u4ee4\u8fdb\u884c\u5b89\u88c5\u5728\u7ebf\u5305\uff0c\u4ee5\u4e0b\u4e3a\u7b80\u5355\u6d4b\u8bd5\uff1a QEMU \u865a\u62df\u673a\u53ef\u4ee5\u901a\u8fc7VirtIO-NET \u6280\u672f\u6765\u751f\u6210\u4e00\u4e2a\u865a\u62df\u7684\u7f51\u5361\uff0c\u5e76\u4e14\u901a\u8fc7 NAT\u7f51 \u7edc\u6865\u63a5\u6280\u672f\u548c\u4e3b\u673a\u8fdb\u884c\u7f51\u7edc\u5171\u4eab\u3002\u9996\u5148\u4f7f\u7528 ifconfig \u547d\u4ee4\u6765\u68c0\u67e5\u7f51\u7edc\u914d\u7f6e\u3002 \u53ef\u4ee5\u770b\u5230\u751f\u6210\u4e86\u4e00\u4e2a\u540d\u4e3a eth0 \u7684\u7f51\u5361\u8bbe\u5907\uff0c\u5206\u914d\u7684 IP \u5730\u5740\u4e3a\uff1a 10.0.2.15 \u3002 \u901a\u8fc7 apt update \u547d\u4ee4\u6765\u66f4\u65b0 Debian \u7cfb\u7edf\u7684\u8f6f\u4ef6\u4ed3\u5e93\u3002","title":"2.5\u3001\u6d4b\u8bd5Debian\u7cfb\u7edf"},{"location":"Ubuntu+VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#26-qemu","text":"\u4e3b\u673a\u548c QEMU \u865a\u62df\u673a\u53ef\u4ee5\u901a\u8fc7NET_9P \u6280\u672f\u8fdb\u884c\u6587\u4ef6\u5171\u4eab\uff0c\u8fd9\u4e2a\u9700\u8981 QEMU \u865a \u62df\u673a\u7684 Linux \u5185\u6838\u4f7f\u80fd NET_9P \u7684\u5185\u6838\u6a21\u5757\u3002\u672c\u5e73\u53f0\u5df2\u7ecf\u652f\u6301\u4e3b\u673a\u548c QEMU \u865a\u62df\u673a\u7684\u5171\u4eab\u6587\u4ef6\uff0c\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u7b80\u5355\u65b9\u6cd5\u6765\u6d4b\u8bd5\u3002 \u5171\u4eab\u76ee\u5f55\u4e3a:kmodules \u7cfb\u7edf\u76ee\u5f55\u4e3a:mnt \u6548\u679c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u5728 kmodules \u76ee\u5f55\u4e0b\u9762\u65b0\u5efa\u4e00\u4e2a test.c \u6587\u4ef6\u3002","title":"2.6\u3001\u4e3b\u673a\u548c QEMU \u865a\u62df\u673a\u4e4b\u95f4\u5171\u4eab\u6587\u4ef6"},{"location":"Ubuntu+VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#qemu","text":"","title":"\u6211\u4eec\u5728\u540e\u7eed\u4f1a\u7ecf\u5e38\u5229\u7528\u8fd9\u4e2a\u7279\u6027\uff0c\u6bd4\u5982\u628a\u7f16\u8bd1\u597d\u7684\u5185\u6838\u6a21\u5757\u6216\u8005\u5185\u6838\u6a21 \u5757\u6e90\u4ee3\u7801\u653e\u5165QEMU \u865a\u62df\u673a\u3002"},{"location":"Ubuntu+VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#3","text":"\u76f4\u5230\u8fd9\u4e00\u6b65\uff0c\u5df2\u7ecf\u5b8c\u6210\u4e86\u57fa\u4e8eWSL+VScode\u7684\u73af\u5883\u642d\u5efa\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u96c6\u7ec8\u7aef\u3001\u6587\u4ef6\u7ba1\u7406\u5668\u3001git\u7ba1\u7406\u5668\u3001\u8fd0\u884c\u8c03\u8bd5\u7b49\u7b49\u7b49\u4e00\u4f53\u5316\u7684IDE\u73af\u5883\u4e86\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u7eafWIN10\u4e0b\u5b9e\u73b0\u5355\u6b65\u8c03\u8bd5\u5185\u6838\u7684\u76ee\u7684\u4e86\uff0c\u975e\u5e38\u65b9\u4fbf\u3002","title":"3. \u4e00\u952e\u5355\u6b65\u8c03\u8bd5\u5185\u6838"},{"location":"Ubuntu+VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#31","text":"\u5185\u6838\u7684\u7f16\u8bd1\u8c03\u8bd5\u547d\u4ee4\u5df2\u7ecf\u5168\u90e8\u6253\u5305\u8fdb\u4e86\u811a\u672c\u6587\u4ef6\uff0c\u611f\u5174\u8da3\u7684\u7ae5\u978b\u53ef\u4ee5\u53bb\u6df1\u5165\u4e86\u89e3\u4e00\u4e0b\uff0c\u8fd9\u91cc\u4ee5ARM64\u4e3a\u4f8b\uff1a ./run_debian_arm64.sh run debug \u6b64\u65f6\uff0cgdbserver\u5df2\u7ecf\u57281234\u7aef\u53e3\u7b49\u5f85\u8fde\u63a5\uff01","title":"3.1\u3001\u914d\u7f6e\u5185\u6838\u8c03\u8bd5\u547d\u4ee4"},{"location":"Ubuntu+VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#32vscode-debug","text":"\u9009\u62e9\uff1a\u8fd0\u884c\uff08R\uff09-> \u6dfb\u52a0\u914d\u7f6e -> C++\uff08GDB/LDB\uff09 \u5982\u4e0b\u52a8\u56fe\u6240\u793a\uff1a \u6dfb\u52a0\u5982\u4e0b\u914d\u7f6e\u4fe1\u606f\uff1a { // \u4f7f\u7528 IntelliSense \u4e86\u89e3\u76f8\u5173\u5c5e\u6027\u3002 // \u60ac\u505c\u4ee5\u67e5\u770b\u73b0\u6709\u5c5e\u6027\u7684\u63cf\u8ff0\u3002 // \u6b32\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95ee: https://go.microsoft.com/fwlink/?linkid=830387 \"version\": \"0.2.0\", \"configurations\": [ { \"name\": \"(gdb) \u542f\u52a8\", \"type\": \"cppdbg\", \"request\": \"launch\", \"program\": \"${workspaceFolder}/vmlinux\", \"args\": [], \"stopAtEntry\": true, \"cwd\": \"${workspaceFolder}\", \"environment\": [], \"externalConsole\": true,// \u8c03\u8bd5\u65f6\u662f\u5426\u663e\u793a\u63a7\u5236\u53f0\u7a97\u53e3\uff0c\u4e00\u822c\u8bbe\u7f6e\u4e3atrue\u663e\u793a\u63a7\u5236\u53f0 \"MIMode\": \"gdb\", \"miDebuggerPath\":\"/usr/local/bin/aarch64-linux-gnu-gdb\", \"miDebuggerServerAddress\": \"localhost:1234\", \"setupCommands\": [ { \"description\": \"\u4e3a gdb \u542f\u7528\u6574\u9f50\u6253\u5370\", \"text\": \"-enable-pretty-printing\", \"ignoreFailures\": true } ] } ] } \u6ce8\u610f: localhost \u662f\u672c\u5730\u7684IP\u4e5f\u5c31\u662f\u8fd0\u884cqemu\u7684ubuntu\u7684IP\uff0c\u54ea\u4e2a\u4e3b\u673a\u8fd0\u884c ./run_debian_arm64.sh run debug \u5c31\u53d6\u8be5\u4e3b\u673a\u7684IP\uff0c\u56e0\u4e3a\u6b64\u65f6\u662f\u540c\u4e00\u53f0\u4e3b\u673a\uff0c\u6240\u4ee5\u5c31\u586b localhost gdb\u8def\u5f84\uff1a\"miDebuggerPath\":\"/usr/local/bin/aarch64-linux-gnu-gdb\" gdb\u76d1\u542c\u7aef\u53e3\uff1a\"miDebuggerServerAddress\": \"localhost\",1234\u4e0e\u4e0a\u4e00\u5c0f\u8282\u4e2d\u7684Listen\u7aef\u53e3\u4e00\u81f4\uff01","title":"3.2\u3001\u914d\u7f6eVSCode Debug\u9009\u9879"},{"location":"Ubuntu+VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#33","text":"\u7ecf\u8fc73.1\u30013.2\u7684\u914d\u7f6e\u5df2\u7ecf\u5b9e\u73b0\u4e86\u8c03\u8bd5\u7684\u524d\u7f6e\u6761\u4ef6\uff0c\u73b0\u53ea\u9700\u6309\u4e0bF5\u952e\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4e00\u952e\u8c03\u8bd5\u4e86\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a","title":"3.3\u3001\u4e00\u952e\u8c03\u8bd5"},{"location":"Ubuntu+VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#34gdb","text":"\u5728\u7ec8\u7aef\u754c\u9762\u680f\uff0c\u5207\u6362\u81f3\u8c03\u8bd5\u63a7\u5236\u53f0;\u8f93\u5165\u547d\u4ee4\uff0c\u5982\uff1a -exec info registers \uff0c\u5373\u53ef\u67e5\u770b\u8c03\u8bd5\u8fc7\u4e2d\u7684\u7684\u5bc4\u5b58\u5668","title":"3.4\u3001\u66f4\u591aGDB\u8c03\u8bd5\u6280\u5de7"},{"location":"Ubuntu+VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#4","text":"\u7ecf\u8fc7\u524d\u97620~3\u7684\u94fa\u57ab\uff0c\u6211\u4eec\u5df2\u7ecf\u5177\u5907\u4e86\u4ee5\u4e0b\u4e09\u4e2a\u6761\u4ef6\uff1a 1\u3001\u5b8c\u6574\u7684\u5185\u6838\uff08\u7f16\u8bd1\u73af\u5883\u3001\u8c03\u8bd5\u73af\uff09+\u5b8c\u6574\u7684Rootfs 2\u3001\u5b8c\u6574\u7684qemu\u73af\u5883,\u5305\u62ec\uff1a\u7f51\u7edc\u5171\u4eab\u3001\u6865\u63a5\u7b49\uff0c\u53ef\u4ee5\u968f\u65f6\u5c06\u4e3b\u673a\u7684\u6587\u4ef6\u5171\u4eab\u7ed9qemu\uff08\u672c\u5730\u7684kmodules\u6587\u4ef6\u5939\u300a---\u300b\u865a\u62df\u673a\u91cc\u9762\u7684mnt\u6587\u4ef6\u5939\uff09 3\u3001\u5b8c\u6574\u7684GDB\u8c03\u8bd5\u73af\u5883\uff0c\u53ef\u4ee5\u5b9e\u73b0\u5185\u6838\u5355\u6b65\u8c03\u8bd5 \u90a3\u4e48\uff0c\u9488\u5bf9\u4ee5\u4e0a\u6761\u4ef6\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u8c03\u8bd5\u6216\u8005\u53c2\u8003\u4e00\u4e2aLinux\u5e94\u7528\u7a0b\u5e8f\u5982\u4f55\u8bbf\u95ee\u5230\u5185\u6838\u7684\uff0c\u662f\u5426\u53ef\u4ee5\u5b8c\u6210\u5462\uff1f\u7b54\u6848\u662f\u53ef\u4ee5\u7684\uff01 \u8bf7\u770b\u4e0b\u9762\uff01","title":"4.\u5355\u6b65\u8c03\u8bd5\u5e94\u7528\u5c42+\u5185\u6838"},{"location":"Ubuntu+VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#41-app","text":"\u5728 kmodules\u6587\u4ef6\u5939 \u91cc\u9762\u65b0\u5efa\u4e00\u4e2a test.c \u5185\u5bb9\u5982\u4e0b\uff1a #include <stdio.h> #include <stdlib.h> #include <unistd.h> #include <sys/types.h> #include <sys/stat.h> #include <fcntl.h> #include <errno.h> unsigned char readbuf[255]; int count = 0; int main(void) { int fd ; int retval; printf(\"hello world!\\n\"); fd = open(\"./README\",O_RDONLY); if ( fd == -1 ) { perror( \"open dht11 error\\n\" ) ; exit( -1 ) ; } printf( \"open ./README\\n\" ) ; sleep( 2 ) ; while( 1 ) { sleep( 1 ) ; if(count++ == 0) { printf(\"count=%d\\n\",count); } } close( fd ) ; return 0; }","title":"4.1 \u521b\u5efa\u7b80\u5355\u7684APP\u7a0b\u5e8f"},{"location":"Ubuntu+VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#42","text":"\u8f93\u5165\u7f16\u8bd1\u547d\u4ee4\uff1a aarch64-linux-gnu-gcc test.c -o test \u5373\u53ef\u5728kmodules\u6587\u4ef6\u5939\u4e0b\u9762\u5f97\u5230\u4e00\u4e2a\u65b0\u7684test\u5e94\u7528\u7a0b\u5e8f\u3002 \u63a5\u7740\uff0c\u6309\u7b2c\u4e09\u8282\u505a\u6cd5\u8fdb\u5165\u53ef\u5355\u6b65\u8c03\u8bd5\u5185\u6838\u7684\u73af\u5883\u3002 \u6574\u4f53\u6f14\u793a\u6548\u679c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u53ea\u662f\u7b80\u5355\u7684\u6f14\u793a\uff0c\u5b9e\u73b0\u4ece\u5e94\u7528\u5c42\u5230\u5185\u6838\u5c42\u7684\u8c03\u7528\u8fc7\u7a0b\uff0c\u66f4\u6df1\u7684\u5e94\u7528\u53ef\u4ee5\u7ee7\u7eed\u53d1\u6398\u3002","title":"4.2 \u7f16\u8bd1&amp;\u8c03\u8bd5"},{"location":"Ubuntu+VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#5modules","text":"","title":"5.\u5355\u6b65\u8c03\u8bd5modules+\u5185\u6838"},{"location":"Ubuntu+VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#51","text":"\u5728\u4e3b\u673a kmodules\u6587\u4ef6\u5939 \u4e0b\u65b0\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u5185\u6838\u6a21\u5757\u7a0b\u5e8f hello_drv.c \u53ca\u5bf9\u5e94\u7684Makefile\u6587\u4ef6 \u5185\u6838\u6a21\u5757\u7a0b\u5e8f hello_drv.c \u5185\u5bb9\u793a\u4f8b\uff1a /* * 1 include files * 2 __init module_init() insmod * 3 __exit module_exit() rmmod * 4 GPL BSD Aeplli GPLv2 MIT * 5 module_license(GPL) */ #include <linux/init.h> #include <linux/module.h> #include <linux/fs.h> #include <linux/device.h> #include <asm/uaccess.h> #include <asm/io.h> #include <linux/device.h> struct class *hello_class; struct device * hello_dev; int hello_open(struct inode *inode, struct file *flips) { printk(\"--------------%s--------------\\n\",__FUNCTION__); return 0; } static ssize_t hello_write(struct file *file, const char __user *in, size_t size, loff_t *off) { printk(\"--------------%s--------------\\n\",__FUNCTION__); unsigned int buf = 88; copy_from_user(&buf, in ,size ); printk(\"write buf is : %d\\n\",buf); } static ssize_t hello_read(struct file *file, char __user *buf, size_t nbytes, loff_t *ppos) { printk(\"--------------%s--------------\\n\",__FUNCTION__); unsigned int a = 100; copy_to_user(buf,&a,sizeof(int)); } static int my_major = 0; const struct file_operations myfops={ .open = hello_open, .write= hello_write, .read = hello_read, }; static int __init hello_init(void) { printk(\"--------------%s--------------\\n\",__FUNCTION__);//app printf my_major = register_chrdev(0,\"hello\",&myfops); if(my_major <0) { printk(\"reg error!\\n\"); } else printk(\"my_major =%d\",my_major); hello_class = class_create(THIS_MODULE,\"hello_class\");//creat hello_class hello_dev = device_create(hello_class, NULL,MKDEV(my_major,0), NULL, \\ \"hello_dev\");//creat hello_dev--->>/dev/hello_dev return 0; } static void __exit hello_exit(void) { printk(\"--------------%s--------------\\n\",__FUNCTION__); device_destroy(hello_class,MKDEV(my_major,0)); class_destroy(hello_class); unregister_chrdev(my_major,\"hello\"); } module_init(hello_init); module_exit(hello_exit); MODULE_LICENSE(\"GPL\"); \u5185\u6838\u6a21\u5757\u7a0b\u5e8f Makefile \u5185\u5bb9\u793a\u4f8b\uff1a ifeq ($(KERNELRELEASE),) export ARCH=arm64 export CROSS_COMPILE=aarch64-linux-gnu- KERNELDIR=/home/jackeyt/runninglinuxkernel_4.0-rlk_basic #your kernel dirction NFS_DIR=$(KERNELDIR)/kmodules CUR_DIR := $(shell pwd) all : make -C $(KERNELDIR) M=$(CUR_DIR) modules install: cp -ranf *.ko $(NFS_DIR)/ clean : make -C $(KERNELDIR) M=$(CUR_DIR) clean .PHONY: modules install clean else obj-m := hello_drv.o endif \u7f16\u8bd1 \u6ce8\u610f\uff0c\u8fd9\u91cc\u7684\u7f16\u8bd1\u5e94\u8be5\u662f\u5728\u4e3b\u673a\u73af\u5883\u4e0b\uff0c\u5373WSL\u7684\u547d\u4ee4\u884c\u4e2d\uff1a make","title":"5.1\u3001\u7b80\u5355\u6d4b\u8bd5\u4ee3\u7801\u51c6\u5907"},{"location":"Ubuntu+VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#52","text":"\u6211\u4eec\u77e5\u9053\u5f53\u4f7f\u7528 insmod \u65f6\uff0c\u4f1a\u8c03\u7528\u5bf9\u5e94\u7684 __init \u63a5\u53e3\uff0c\u800c\u5728\u672c\u4f8b\u4e2d\uff0c hello_init \u5c31\u4e3a\u5165\u53e3\u51fd\u6570\uff0c\u56e0\u6b64\u7b80\u5355\u6d4b\u8bd5\u4e00\u4e0b\uff0c\u5728\u5185\u6838\u4e2d\u627e\u5230 register_chrdev \u5bf9\u5e94\u7684\u63a5\u53e3\u5b9a\u4e49\uff0c\u5e76\u6253\u597d\u65ad\u70b9\uff0c\u5f85 insmod \u6267\u884c\u4e4b\u540e\uff0c\u89c2\u5bdf\u5185\u6838\u7684\u8fd0\u884c\u8fc7\u7a0b\u3002 \u5728\u5185\u6838\u4e2d\u6253\u4e0a\u76f8\u5e94\u65ad\u70b9\uff1a \u6f14\u793a\u6548\u679c\u52a8\u56fe\uff1a","title":"5.2\u3001\u5f00\u59cb\u8c03\u8bd5"},{"location":"VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE/","text":"VS Code\u642d\u5efaARM Linux Makefile\u5de5\u7a0bIDE\uff08C/C++\uff09[\u53f2\u4e0a\u6700\u8be6\u7ec6] VS Code\u642d\u5efaARM Linux Makefile\u5de5\u7a0bIDE\uff08C/C++\uff09[\u53f2\u4e0a\u6700\u8be6\u7ec6] 0.\u73af\u5883\u4ecb\u7ecd 1.\u7b80\u5355\u7684C/C++ Makefile\u5de5\u7a0b 1.1 \u6574\u4f53\u5de5\u7a0b\u9884\u89c8 1.2 add.c 1.3 sub.c 1.4 test.h 1.5 makefile 2. VS Code\u5f00\u53d1\u73af\u5883\u642d\u5efa 2.1 VS Code\u5bfc\u5165\u5de5\u7a0b 2.2 VS Code\u81ea\u5b9a\u4e49\u751f\u6210\u7f16\u8bd1\u4efb\u52a1 2.2.1 \u81f3\u7b80\u7684tasks.json\u53c2\u8003 2.2.2 \u6dfb\u52a0\u51fa\u9519\u4fe1\u606f\u7684tasks.json\u53c2\u8003 2.2 VS Code\u81ea\u5b9a\u4e49\u751f\u6210\u8c03\u8bd5\u4efb\u52a1 2.2.1 \u751f\u6210\u7684launch.json 2.2.2 launch.json\u91cd\u8981\u9879\u4fee\u6539\u6dfb\u52a0 2.2.3 launch.json\u53c2\u8003 3. \u7f16\u8bd1&\u8c03\u8bd5 3. 1 \u8c03\u8bd5\u524d\u7684\u51c6\u5907 3.2 \u5f00\u59cb\u8c03\u8bd5 4. \u6f14\u793a\u6548\u679c 0.\u73af\u5883\u4ecb\u7ecd \u4e3b\u673a\uff1aubuntu 18.04(LTS) \u5f00\u53d1\u677f\u4e3b\u63a7\uff1aRK3399(ARM 64bit) \u6216\u8005\u5176\u4ed6\u4efb\u610f\u4e00\u6b3e\u53ea\u6709\u5bf9\u5e94\u7684\u5de5\u5177\u94fe\u5373\u53ef OS:Linux version 4.4.143 \u5f00\u53d1\u677fIP\uff1a192.168.19.171 \u7f16\u8bd1\u5668\uff1aaarch64-linux-gnu-gcc (gcc version 7.3.0) \u8c03\u8bd5\u5668\uff1a\u4e3b\u673a\uff1aaarch64-linux-gnu-gdb (gcc version 7.3.0) \u5f00\u53d1\u677f\uff1agdbserver(7.3.0) VS Code\u7248\u672c \u7248\u672c 1.23.1 \u63d0\u4ea4 d0182c3417d225529c6d5ad24b7572815d0de9ac \u65e5\u671f 2018-05-10T16:04:33.747Z Shell 1.7.12 \u6e32\u67d3\u5668 58.0.3029.110 Node 7.9.0 \u67b6\u6784 x64 VS Code\u63d2\u4ef6\uff1aC/C++ \uff08\u5728\u6269\u5c55\u91cc\u9762\u6dfb\u52a0\u5373\u53ef\uff09 1.\u7b80\u5355\u7684C/C++ Makefile\u5de5\u7a0b 1.1 \u6574\u4f53\u5de5\u7a0b\u9884\u89c8 . \u251c\u2500\u2500 add.c \u251c\u2500\u2500 makefile \u251c\u2500\u2500 sub.c \u2514\u2500\u2500 test.h 1.2 add.c #include \"test.h\" #include <stdio.h> int add(int a, int b) { return a + b; } int main() { printf(\" 2 + 3 = %d\\n\", add(2, 3)); printf(\" 2 - 3 = %d\\n\", sub(2, 3)); return 1; } 1.3 sub.c #include \"test.h\" int sub(int a, int b) { return a - b; } 1.4 test.h #ifndef _TEST_H #define _TEST_H int add(int a, int b); int sub(int a, int b); #endif 1.5 makefile #\u677f\u5b50\u5bf9\u5e94\u7684\u4ea4\u53c9\u94fe\uff0c\u53ef\u4ee5\u6362\u6210\u5176\u4ed6\u5bf9\u5e94\u7684\u7248\u672c\u5373\u53ef CC=aarch64-linux-gnu-gcc test: add.o sub.o $(CC) -o test add.o sub.o add.o: add.c test.h $(CC) -c add.c sub.o: sub.c test.h $(CC) -c sub.c clean: rm -rf test rm -rf *.o 2. VS Code\u5f00\u53d1\u73af\u5883\u642d\u5efa VS Code\u7684\u7075\u6d3b\u6027\u5728\u4e8e\u53ef\u4ee5\u5b8c\u5168\u81ea\u5b9a\u4e49\u642d\u5efa\u4e00\u4e2a\u9002\u5408\u81ea\u5df1\u7528\u7684\u5f00\u53d1\u73af\u5883\uff0c\u5176\u4e2d\u5305\u62ec\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7f16\u8bd1\u4efb\u52a1\uff0c\u8c03\u8bd5\u4efb\u52a1\u3002 2.1 VS Code\u5bfc\u5165\u5de5\u7a0b \u76f4\u63a5\u6253\u5f00VS Code\uff0c\u518d\u9009\u62e9\u201c\u6253\u5f00\u6587\u4ef6\u5939\u201d\uff0c\u6253\u5f00\u5bf9\u5e94\u5de5\u7a0b\u7684\u6587\u4ef6\u5939\u5373\u53ef 2.2 VS Code\u81ea\u5b9a\u4e49\u751f\u6210\u7f16\u8bd1\u4efb\u52a1 \u5982\u4e0a\u9762\u63d0\u5230\uff0cVS Code\u7684\u7075\u6d3b\u6027\u5728\u4e8e\u81ea\u5b9a\u4e49\u7f16\u8bd1\u4efb\u52a1\uff0c\u800cVS Code\u4e2d\u7528\u4e8e\u63cf\u8ff0\u7f16\u8bd1\u4efb\u52a1\u7684\u5b9a\u4e49\u4e3a\uff1a tasks.json \uff0c\u6240\u4ee5\u81ea\u5b9a\u4e49\u7f16\u8bd1\u4efb\u52a1\u5c31\u662f\u7f16\u5199 tasks.json \u3002\u9996\u5148\uff0c\u7f16\u5199 tasks.json \u6709\u4ee5\u4e0b\u4e24\u79cd\u65b9\u6cd5\uff1a 1. \u5728View\u4e0b\u6253\u5f00\u547d\u4ee4\u9762\u677f(Command Pallette)\uff08\u5feb\u6377\u952e Ctrl+Shift+p \uff09\uff0c\u641c\u7d22Task\uff0c\u9009\u62e9Tasks:Configure Task\uff0c\u4e4b\u540e\u9009\u62e9Others\uff0c\u751f\u6210tasks.json\u6587\u4ef6\u3002 2. \u5728\u83dc\u5355\u680f\u4e0a\u9762\uff0c\u9009\u62e9\u4efb\u52a1(T)-->\u914d\u7f6e\u4efb\u52a1(C)...-->\u4f7f\u7528\u6a21\u677f\u521b\u5efatasks.json-->Others\uff0c\u751f\u6210tasks.json\u6587\u4ef6\u3002 2.2.1 \u81f3\u7b80\u7684 tasks.json \u53c2\u8003 { // See https://go.microsoft.com/fwlink/?LinkId=733558 // for the documentation about the tasks.json format \"version\": \"2.0.0\", \"tasks\": [ { \"label\": \"shell\",//\u4efb\u52a1\u540d\u79f0\uff0c\u548claunch.json\u4e2d\u4e00\u81f4\uff0c\u5373\u6267\u884c\u8fd9\u4e2a\u4efb\u52a1 \"type\": \"shell\",//\u4efb\u52a1\u7c7b\u578b\uff0c\u5373\u6267\u884c\u8be5\u4efb\u52a1\u7684\u7c7b\u578b\uff0c\u586bshell\u8868\u793a\u5728\u547d\u4ee4\u884c\u4e2d\u6267\u884c\u7684\u4efb\u52a1 \"command\": \"make\",//\u6267\u884c\u547d\u4ee4\u662fmake\uff0c\u5373\u8c03\u7528makefile\u8fdb\u884c\u7f16\u8bd1\u82e5\u76f4\u63a5\u4f7f\u7528gcc\u547d\u4ee4\u884c\uff0c\u66ff\u6362\u5373\u53ef \"problemMatcher\": [ \"$gcc\" ], \"group\": { \"kind\": \"build\", \"isDefault\": true } } ] } 2.2.2 \u6dfb\u52a0\u51fa\u9519\u4fe1\u606f\u7684 tasks.json \u53c2\u8003 { // See https://go.microsoft.com/fwlink/?LinkId=733558 // for the documentation about the tasks.json format \"version\": \"2.0.0\", \"tasks\": [ { \"label\": \"shell\", \"type\": \"shell\", \"command\": \"make\", //\u8fd9\u4e2a\u5b57\u6bb5\u662f\u53d1\u751f\u9519\u8bef\u65f6\uff0c\u4fe1\u606f\u7684\u5339\u914d \"problemMatcher\": { \"owner\": \"cpp\", \"fileLocation\": [ \"relative\", \"${workspaceFolder}\" ], \"pattern\": [ { \"regexp\": \"^([^\\\\s].*)$\", \"file\": 1 }, { \"regexp\": \"^\\\\s+(\\\\d+):(\\\\d+)\\\\s+(error|warning|info)\\\\s+(.*)\\\\s\\\\s+(.*)$\", \"line\": 1, \"column\": 2, \"severity\": 3, \"message\": 4, \"code\": 5, \"loop\": true } ] }, \"group\": { \"kind\": \"build\", \"isDefault\": true } } ] } 2.2 VS Code\u81ea\u5b9a\u4e49\u751f\u6210\u8c03\u8bd5\u4efb\u52a1 \u5982\u4e0a\u9762\u63d0\u5230\uff0cVS Code\u7684\u7075\u6d3b\u6027\u5728\u4e8e\u81ea\u5b9a\u4e49\u8c03\u8bd5\u4efb\u52a1\uff0c\u800cVS Code\u4e2d\u7528\u4e8e\u63cf\u8ff0\u8c03\u8bd5\u4efb\u52a1\u7684\u5b9a\u4e49\u4e3a\uff1a launch.json \uff0c\u6240\u4ee5\u81ea\u5b9a\u4e49\u7f16\u8bd1\u4efb\u52a1\u5c31\u662f\u7f16\u5199 launch.json \u3002\u9996\u5148\uff0c\u7f16\u5199 launch.json \u53ef\u4ee5\u53c2\u8003\u4ee5\u4e0b\u65b9\u6cd5\uff1a \u5728\u83dc\u5355\u680f\u4e0a\u9762\uff0c\u9009\u62e9\u8c03\u8bd5(D)-->\u6253\u5f00\u914d\u7f6e(C)...-->C++(GDB/LLDB)\uff0c\u751f\u6210 launch.json \u6587\u4ef6\u3002 2.2.1 \u751f\u6210\u7684 launch.json \u7cfb\u7edf\u81ea\u52a8\u751f\u6210\u7684\u6a21\u5757\u5982\u4e0b\uff1a { // \u4f7f\u7528 IntelliSense \u4e86\u89e3\u76f8\u5173\u5c5e\u6027\u3002 // \u60ac\u505c\u4ee5\u67e5\u770b\u73b0\u6709\u5c5e\u6027\u7684\u63cf\u8ff0\u3002 // \u6b32\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95ee: https://go.microsoft.com/fwlink/?linkid=830387 \"version\": \"0.2.0\", \"configurations\": [ { \"name\": \"(gdb) Launch\", \"type\": \"cppdbg\", \"request\": \"launch\", \"program\": \"enter program name, for example ${workspaceFolder}/a.out\", \"args\": [], \"stopAtEntry\": false, \"cwd\": \"${workspaceFolder}\", \"environment\": [], \"externalConsole\": true, \"MIMode\": \"gdb\", \"setupCommands\": [ { \"description\": \"Enable pretty-printing for gdb\", \"text\": \"-enable-pretty-printing\", \"ignoreFailures\": true } ] } ] } 2.2.2 launch.json \u91cd\u8981\u9879\u4fee\u6539\u6dfb\u52a0 \u53ef\u4ee5\u770b\u5230VS Code\u5e2e\u6211\u4eec\u751f\u6210\u7684\u6587\u4ef6\u91cc\u9762\u5df2\u7ecf\u5b8c\u6210\u5927\u90e8\u5206\u5de5\u4f5c\uff0c\u53ea\u9700\u6dfb\u52a0\u4fee\u6539\u76f8\u5e94\u7684\u5fc5\u8981\u9879\u5373\u53ef\uff1a \u4fee\u6539\u53ef\u6267\u884c\u6587\u4ef6\u7684\u4f4d\u7f6e\uff1a \"program\": \"enter program name, for example ${workspaceFolder}/a.out\", \u4fee\u6539\u6210\u6211\u4eecmake\u7f16\u8bd1\u5b8c\u6210\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5982\u672c\u6b21\u793a\u4f8b\u4e2d\u7684 \"program\": \"${workspaceFolder}/test\", \u4fee\u6539\u6240\u7528gdb\u8c03\u8bd5\u5668\u6240\u5728\u7684\u4f4d\u7f6e\uff0c\u6dfb\u52a0\u9009\u9879\uff1a \"miDebuggerPath\":\"/usr/bin/aarch64-linux-gnu-gdb\", \u5efa\u8bae\u6700\u597d\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84\uff0c\u5982\u672c\u4f8b\u6240\u793a \u4fee\u6539\u76ee\u6807\u5f00\u53d1\u677f\u7684IP\u548c\u7aef\u53e3\uff0c\u6dfb\u52a0\u9009\u9879\uff1a \"miDebuggerServerAddress\": \"192.168.19.171:10000\", \u5982\u672c\u4f8b\u6240\u793a \u5176\u4ed6\u4fee\u6539\uff1a \"preLaunchTask\":\"shell\", \u4e0e\u4e4b\u524dtasks.json\u4e2d\u7684\u4efb\u52a1\u540d\u79f0\u8981\u4e00\u81f4\uff0c\u8868\u793a\u5728\u8c03\u8bd5\u524d\u6267\u884c\u7684\u524d\u7f6e\u4efb\u52a1\uff0c\u5f53\u7136\uff0c\u9664\u4e86\u6267\u884cmake\uff0c\u8fd8\u53ef\u4ee5\u6267\u884c\u5176\u4ed6\u7cfb\u7edf\u547d\u4ee4\uff0c\u5982\u5c06\u7f16\u8bd1\u751f\u6210\u6587\u4ef6\u590d\u5236\u5230\u76ee\u6807\u5f00\u53d1\u677f\u4e0a\u7b49\u7b49\u3002\u3002\u3002 2.2.3 launch.json \u53c2\u8003 { // \u4f7f\u7528 IntelliSense \u4e86\u89e3\u76f8\u5173\u5c5e\u6027\u3002 // \u60ac\u505c\u4ee5\u67e5\u770b\u73b0\u6709\u5c5e\u6027\u7684\u63cf\u8ff0\u3002 // \u6b32\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95ee: https://go.microsoft.com/fwlink/?linkid=830387 \"version\": \"0.2.0\", \"configurations\": [ { \"name\": \"(gdb) Launch\", \"type\": \"cppdbg\", \"request\": \"launch\", \"program\": \"${workspaceFolder}/test\", \"args\": [], \"stopAtEntry\": true, \"cwd\": \"${workspaceFolder}\", \"environment\": [], \"externalConsole\": true, \"MIMode\": \"gdb\", \"miDebuggerPath\":\"/usr/bin/aarch64-linux-gnu-gdb\", \"miDebuggerServerAddress\": \"192.168.19.171:10000\", \"preLaunchTask\":\"shell\", \"setupCommands\": [ { \"description\": \"Enable pretty-printing for gdb\", \"text\": \"-enable-pretty-printing\", \"ignoreFailures\": true } ] } ] } 3. \u7f16\u8bd1&\u8c03\u8bd5 3. 1 \u8c03\u8bd5\u524d\u7684\u51c6\u5907 \u4e3a\u4e86\u4f7f\u5f00\u53d1\u4e3b\u673a\u4e0a\u7684\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u53ef\u4ee5\u590d\u5236\u5230\u76ee\u6807\u5f00\u53d1\u677f\u4e0a\uff0c\u53ef\u4ee5\u901a\u8fc7\u7f51\u7edc\u7684\u5f62\u5f0f\u8fdb\u884c\u4f20\u8f93\uff0c\u6bd5\u7adfGDB\u4e5f\u662f\u57fa\u4e8e\u7f51\u7edc\u7684\uff0c\u8fd9\u6837\u5c31\u66f4\u65b9\u4fbf\u4e9b\uff0c\u4f8b\u5982\u672c\u6587\u6240\u7528\u7684\u65b9\u5f0fNFS\uff1a\u5df2\u77e5\u5728\u5f00\u53d1\u4e3b\u673a\u4e0a\u5df2\u7ecf\u6709NFS\u670d\u52a1\u5668\u4e86\uff0c\u76ee\u5f55\u4e3a /home/dl/share/nfs \uff0cIP\u5730\u5740\u4e3a\uff1a192.168.19.188 \u3002\u90a3\u4e48\u53ea\u9700\u8981\u5728\u5f00\u53d1\u677f\u4e0a\u6302\u8f7dNFS\u670d\u52a1\u5668\u5373\u53ef\uff0c\u7528\u5982\u4e0b\u547d\u4ee4\uff1a mount -t nfs -o nolock 192.168.19.188:/home/dl/share/nfs /mnt \u5c06PC\u7684NFS\u76ee\u5f55\u6302\u8f7d\u5230\u5f00\u53d1\u677f\u7684mnt\u76ee\u5f55 \u3002 \u56e0\u6b64\uff0c\u9700\u8981\u6bcf\u6b21\u5c06\u751f\u6210\u7684\u76ee\u6807\u6587\u4ef6\u590d\u5236\u5230nfs\u76ee\u5f55\u4e0b\uff0c\u6709\u5f88\u591a\u79cd\u65b9\u5f0f\uff0c\u53ef\u4ee5\u624b\u52a8\u7528\u547d\u4ee4\u8fdb\u884c\uff0c\u56e0\u6b64VS Code\u4e2d\u5df2\u7ecf\u96c6\u6210\u4e86\u7ec8\u7aef\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528\uff0c\u53c8\u6216\u8005\u4fee\u6539makefile\uff0c\u6dfb\u52a0make install \u4e4b\u7c7b\u7684\u547d\u4ee4\uff0c\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u65b9\u6cd5\u6709\u5f88\u591a\uff0c\u4e3e\u4e2a\u7b80\u964b\u7684\u4f8b\u5b50\uff08makefile\uff09\uff1a install: cp -raf test /home/dl/share/nfs \u7136\u540e\uff0c\u4fee\u6539 tasks.josn \uff0c\u8ba9\u5b83\u6267\u884c make \u4e4b\u540e\u518d\u6267\u884c make install \uff1a ............. \"tasks\": [ { \"label\": \"shell\", \"type\": \"shell\", \"command\": \"make;make install\", ............. 3.2 \u5f00\u59cb\u8c03\u8bd5 VS Code\u8fd8\u6709\u4e00\u4e2a\u597d\u5904\u5c31\u662f\u96c6\u6210\u4e86linux sh\u7ec8\u7aef\uff0c\u4f7f\u7528VS Code\u7ec8\u7aef\u754c\u9762\uff0c\u5728\u91cc\u9762\u8fde\u5f00\u53d1\u677f\u7684SSH\uff0c\u5c31\u4e0d\u518d\u9700\u8981\u5728\u8c03\u8bd5\u7684\u8fc7\u7a0b\u4e2d\u4e0d\u65ad\u7684\u8fdb\u884c\u754c\u9762\u5207\u6362\u4e86\uff0c\u6309\u4e0a\u6587\u6240\u63d0\u5f00\u53d1\u677f\u7684IP\u4e3a\uff1a192.168.19.171,\u56e0\u6b64\uff0c\u5728VS Code\u4e2d\u7528SSH\u76f8\u8fde\u5373\u53ef\uff1a \u6309\u524d\u9762\u7684\u6b65\u9aa4\uff0c\u5df2\u7ecf\u53ef\u4ee5\u5b9e\u73b0\u5728\u5f00\u53d1\u677f\u7684/mnt\u76ee\u5f55\u4e0b\u9762\u5b9e\u73b0\u6570\u636e\u7a0b\u5e8f\u7684\u5171\u4eab\u4e86\uff0c\u5728\u5f00\u53d1\u677f\u7684/mnt\u76ee\u5f55\u4e0b\u9762\u8f93\u5165\u547d\u4ee4\uff1a gdbserver :10000 test \u5373\u53ef\u5b9e\u73b0\u5728\u5f00\u53d1\u677f\u76d1\u542c 10000 \u7aef\u53e3\u7684GDB\u8c03\u8bd5\u4e8b\u4ef6\u4e86\u3002 \u5728VS Code\u4e0b\u9762\u6309\u4e0b\u5feb\u6377\u952e\uff1a Ctrl+Shift+B \u5373\u53ef\u5b9e\u73b0\u8c03\u7528makefile\u5bf9\u6574\u4e2a\u5de5\u7a0b\u8fdb\u884cmake \u5e76\u4e14make install \uff0c\u6548\u679c\u5982\u4e0b\uff1a 4. \u6f14\u793a\u6548\u679c","title":"0.IDE\u73af\u5883\u642d\u5efa"},{"location":"VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE/#vs-codearm-linux-makefileidecc","text":"VS Code\u642d\u5efaARM Linux Makefile\u5de5\u7a0bIDE\uff08C/C++\uff09[\u53f2\u4e0a\u6700\u8be6\u7ec6] 0.\u73af\u5883\u4ecb\u7ecd 1.\u7b80\u5355\u7684C/C++ Makefile\u5de5\u7a0b 1.1 \u6574\u4f53\u5de5\u7a0b\u9884\u89c8 1.2 add.c 1.3 sub.c 1.4 test.h 1.5 makefile 2. VS Code\u5f00\u53d1\u73af\u5883\u642d\u5efa 2.1 VS Code\u5bfc\u5165\u5de5\u7a0b 2.2 VS Code\u81ea\u5b9a\u4e49\u751f\u6210\u7f16\u8bd1\u4efb\u52a1 2.2.1 \u81f3\u7b80\u7684tasks.json\u53c2\u8003 2.2.2 \u6dfb\u52a0\u51fa\u9519\u4fe1\u606f\u7684tasks.json\u53c2\u8003 2.2 VS Code\u81ea\u5b9a\u4e49\u751f\u6210\u8c03\u8bd5\u4efb\u52a1 2.2.1 \u751f\u6210\u7684launch.json 2.2.2 launch.json\u91cd\u8981\u9879\u4fee\u6539\u6dfb\u52a0 2.2.3 launch.json\u53c2\u8003 3. \u7f16\u8bd1&\u8c03\u8bd5 3. 1 \u8c03\u8bd5\u524d\u7684\u51c6\u5907 3.2 \u5f00\u59cb\u8c03\u8bd5 4. \u6f14\u793a\u6548\u679c","title":"VS Code\u642d\u5efaARM Linux Makefile\u5de5\u7a0bIDE\uff08C/C++\uff09[\u53f2\u4e0a\u6700\u8be6\u7ec6]"},{"location":"VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE/#0","text":"\u4e3b\u673a\uff1aubuntu 18.04(LTS) \u5f00\u53d1\u677f\u4e3b\u63a7\uff1aRK3399(ARM 64bit) \u6216\u8005\u5176\u4ed6\u4efb\u610f\u4e00\u6b3e\u53ea\u6709\u5bf9\u5e94\u7684\u5de5\u5177\u94fe\u5373\u53ef OS:Linux version 4.4.143 \u5f00\u53d1\u677fIP\uff1a192.168.19.171 \u7f16\u8bd1\u5668\uff1aaarch64-linux-gnu-gcc (gcc version 7.3.0) \u8c03\u8bd5\u5668\uff1a\u4e3b\u673a\uff1aaarch64-linux-gnu-gdb (gcc version 7.3.0) \u5f00\u53d1\u677f\uff1agdbserver(7.3.0) VS Code\u7248\u672c \u7248\u672c 1.23.1 \u63d0\u4ea4 d0182c3417d225529c6d5ad24b7572815d0de9ac \u65e5\u671f 2018-05-10T16:04:33.747Z Shell 1.7.12 \u6e32\u67d3\u5668 58.0.3029.110 Node 7.9.0 \u67b6\u6784 x64 VS Code\u63d2\u4ef6\uff1aC/C++ \uff08\u5728\u6269\u5c55\u91cc\u9762\u6dfb\u52a0\u5373\u53ef\uff09","title":"0.\u73af\u5883\u4ecb\u7ecd"},{"location":"VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE/#1cc-makefile","text":"","title":"1.\u7b80\u5355\u7684C/C++ Makefile\u5de5\u7a0b"},{"location":"VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE/#11","text":". \u251c\u2500\u2500 add.c \u251c\u2500\u2500 makefile \u251c\u2500\u2500 sub.c \u2514\u2500\u2500 test.h","title":"1.1 \u6574\u4f53\u5de5\u7a0b\u9884\u89c8"},{"location":"VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE/#12-addc","text":"#include \"test.h\" #include <stdio.h> int add(int a, int b) { return a + b; } int main() { printf(\" 2 + 3 = %d\\n\", add(2, 3)); printf(\" 2 - 3 = %d\\n\", sub(2, 3)); return 1; }","title":"1.2 add.c"},{"location":"VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE/#13-subc","text":"#include \"test.h\" int sub(int a, int b) { return a - b; }","title":"1.3  sub.c"},{"location":"VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE/#14-testh","text":"#ifndef _TEST_H #define _TEST_H int add(int a, int b); int sub(int a, int b); #endif","title":"1.4  test.h"},{"location":"VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE/#15-makefile","text":"#\u677f\u5b50\u5bf9\u5e94\u7684\u4ea4\u53c9\u94fe\uff0c\u53ef\u4ee5\u6362\u6210\u5176\u4ed6\u5bf9\u5e94\u7684\u7248\u672c\u5373\u53ef CC=aarch64-linux-gnu-gcc test: add.o sub.o $(CC) -o test add.o sub.o add.o: add.c test.h $(CC) -c add.c sub.o: sub.c test.h $(CC) -c sub.c clean: rm -rf test rm -rf *.o","title":"1.5  makefile"},{"location":"VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE/#2-vs-code","text":"VS Code\u7684\u7075\u6d3b\u6027\u5728\u4e8e\u53ef\u4ee5\u5b8c\u5168\u81ea\u5b9a\u4e49\u642d\u5efa\u4e00\u4e2a\u9002\u5408\u81ea\u5df1\u7528\u7684\u5f00\u53d1\u73af\u5883\uff0c\u5176\u4e2d\u5305\u62ec\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7f16\u8bd1\u4efb\u52a1\uff0c\u8c03\u8bd5\u4efb\u52a1\u3002","title":"2. VS Code\u5f00\u53d1\u73af\u5883\u642d\u5efa"},{"location":"VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE/#21-vs-code","text":"\u76f4\u63a5\u6253\u5f00VS Code\uff0c\u518d\u9009\u62e9\u201c\u6253\u5f00\u6587\u4ef6\u5939\u201d\uff0c\u6253\u5f00\u5bf9\u5e94\u5de5\u7a0b\u7684\u6587\u4ef6\u5939\u5373\u53ef","title":"2.1  VS Code\u5bfc\u5165\u5de5\u7a0b"},{"location":"VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE/#22-vs-code","text":"\u5982\u4e0a\u9762\u63d0\u5230\uff0cVS Code\u7684\u7075\u6d3b\u6027\u5728\u4e8e\u81ea\u5b9a\u4e49\u7f16\u8bd1\u4efb\u52a1\uff0c\u800cVS Code\u4e2d\u7528\u4e8e\u63cf\u8ff0\u7f16\u8bd1\u4efb\u52a1\u7684\u5b9a\u4e49\u4e3a\uff1a tasks.json \uff0c\u6240\u4ee5\u81ea\u5b9a\u4e49\u7f16\u8bd1\u4efb\u52a1\u5c31\u662f\u7f16\u5199 tasks.json \u3002\u9996\u5148\uff0c\u7f16\u5199 tasks.json \u6709\u4ee5\u4e0b\u4e24\u79cd\u65b9\u6cd5\uff1a 1. \u5728View\u4e0b\u6253\u5f00\u547d\u4ee4\u9762\u677f(Command Pallette)\uff08\u5feb\u6377\u952e Ctrl+Shift+p \uff09\uff0c\u641c\u7d22Task\uff0c\u9009\u62e9Tasks:Configure Task\uff0c\u4e4b\u540e\u9009\u62e9Others\uff0c\u751f\u6210tasks.json\u6587\u4ef6\u3002 2. \u5728\u83dc\u5355\u680f\u4e0a\u9762\uff0c\u9009\u62e9\u4efb\u52a1(T)-->\u914d\u7f6e\u4efb\u52a1(C)...-->\u4f7f\u7528\u6a21\u677f\u521b\u5efatasks.json-->Others\uff0c\u751f\u6210tasks.json\u6587\u4ef6\u3002","title":"2.2  VS Code\u81ea\u5b9a\u4e49\u751f\u6210\u7f16\u8bd1\u4efb\u52a1"},{"location":"VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE/#221-tasksjson","text":"{ // See https://go.microsoft.com/fwlink/?LinkId=733558 // for the documentation about the tasks.json format \"version\": \"2.0.0\", \"tasks\": [ { \"label\": \"shell\",//\u4efb\u52a1\u540d\u79f0\uff0c\u548claunch.json\u4e2d\u4e00\u81f4\uff0c\u5373\u6267\u884c\u8fd9\u4e2a\u4efb\u52a1 \"type\": \"shell\",//\u4efb\u52a1\u7c7b\u578b\uff0c\u5373\u6267\u884c\u8be5\u4efb\u52a1\u7684\u7c7b\u578b\uff0c\u586bshell\u8868\u793a\u5728\u547d\u4ee4\u884c\u4e2d\u6267\u884c\u7684\u4efb\u52a1 \"command\": \"make\",//\u6267\u884c\u547d\u4ee4\u662fmake\uff0c\u5373\u8c03\u7528makefile\u8fdb\u884c\u7f16\u8bd1\u82e5\u76f4\u63a5\u4f7f\u7528gcc\u547d\u4ee4\u884c\uff0c\u66ff\u6362\u5373\u53ef \"problemMatcher\": [ \"$gcc\" ], \"group\": { \"kind\": \"build\", \"isDefault\": true } } ] }","title":"2.2.1 \u81f3\u7b80\u7684tasks.json\u53c2\u8003"},{"location":"VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE/#222-tasksjson","text":"{ // See https://go.microsoft.com/fwlink/?LinkId=733558 // for the documentation about the tasks.json format \"version\": \"2.0.0\", \"tasks\": [ { \"label\": \"shell\", \"type\": \"shell\", \"command\": \"make\", //\u8fd9\u4e2a\u5b57\u6bb5\u662f\u53d1\u751f\u9519\u8bef\u65f6\uff0c\u4fe1\u606f\u7684\u5339\u914d \"problemMatcher\": { \"owner\": \"cpp\", \"fileLocation\": [ \"relative\", \"${workspaceFolder}\" ], \"pattern\": [ { \"regexp\": \"^([^\\\\s].*)$\", \"file\": 1 }, { \"regexp\": \"^\\\\s+(\\\\d+):(\\\\d+)\\\\s+(error|warning|info)\\\\s+(.*)\\\\s\\\\s+(.*)$\", \"line\": 1, \"column\": 2, \"severity\": 3, \"message\": 4, \"code\": 5, \"loop\": true } ] }, \"group\": { \"kind\": \"build\", \"isDefault\": true } } ] }","title":"2.2.2 \u6dfb\u52a0\u51fa\u9519\u4fe1\u606f\u7684tasks.json\u53c2\u8003"},{"location":"VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE/#22-vs-code_1","text":"\u5982\u4e0a\u9762\u63d0\u5230\uff0cVS Code\u7684\u7075\u6d3b\u6027\u5728\u4e8e\u81ea\u5b9a\u4e49\u8c03\u8bd5\u4efb\u52a1\uff0c\u800cVS Code\u4e2d\u7528\u4e8e\u63cf\u8ff0\u8c03\u8bd5\u4efb\u52a1\u7684\u5b9a\u4e49\u4e3a\uff1a launch.json \uff0c\u6240\u4ee5\u81ea\u5b9a\u4e49\u7f16\u8bd1\u4efb\u52a1\u5c31\u662f\u7f16\u5199 launch.json \u3002\u9996\u5148\uff0c\u7f16\u5199 launch.json \u53ef\u4ee5\u53c2\u8003\u4ee5\u4e0b\u65b9\u6cd5\uff1a \u5728\u83dc\u5355\u680f\u4e0a\u9762\uff0c\u9009\u62e9\u8c03\u8bd5(D)-->\u6253\u5f00\u914d\u7f6e(C)...-->C++(GDB/LLDB)\uff0c\u751f\u6210 launch.json \u6587\u4ef6\u3002","title":"2.2  VS Code\u81ea\u5b9a\u4e49\u751f\u6210\u8c03\u8bd5\u4efb\u52a1"},{"location":"VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE/#221-launchjson","text":"\u7cfb\u7edf\u81ea\u52a8\u751f\u6210\u7684\u6a21\u5757\u5982\u4e0b\uff1a { // \u4f7f\u7528 IntelliSense \u4e86\u89e3\u76f8\u5173\u5c5e\u6027\u3002 // \u60ac\u505c\u4ee5\u67e5\u770b\u73b0\u6709\u5c5e\u6027\u7684\u63cf\u8ff0\u3002 // \u6b32\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95ee: https://go.microsoft.com/fwlink/?linkid=830387 \"version\": \"0.2.0\", \"configurations\": [ { \"name\": \"(gdb) Launch\", \"type\": \"cppdbg\", \"request\": \"launch\", \"program\": \"enter program name, for example ${workspaceFolder}/a.out\", \"args\": [], \"stopAtEntry\": false, \"cwd\": \"${workspaceFolder}\", \"environment\": [], \"externalConsole\": true, \"MIMode\": \"gdb\", \"setupCommands\": [ { \"description\": \"Enable pretty-printing for gdb\", \"text\": \"-enable-pretty-printing\", \"ignoreFailures\": true } ] } ] }","title":"2.2.1 \u751f\u6210\u7684launch.json"},{"location":"VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE/#222-launchjson","text":"\u53ef\u4ee5\u770b\u5230VS Code\u5e2e\u6211\u4eec\u751f\u6210\u7684\u6587\u4ef6\u91cc\u9762\u5df2\u7ecf\u5b8c\u6210\u5927\u90e8\u5206\u5de5\u4f5c\uff0c\u53ea\u9700\u6dfb\u52a0\u4fee\u6539\u76f8\u5e94\u7684\u5fc5\u8981\u9879\u5373\u53ef\uff1a \u4fee\u6539\u53ef\u6267\u884c\u6587\u4ef6\u7684\u4f4d\u7f6e\uff1a \"program\": \"enter program name, for example ${workspaceFolder}/a.out\", \u4fee\u6539\u6210\u6211\u4eecmake\u7f16\u8bd1\u5b8c\u6210\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5982\u672c\u6b21\u793a\u4f8b\u4e2d\u7684 \"program\": \"${workspaceFolder}/test\", \u4fee\u6539\u6240\u7528gdb\u8c03\u8bd5\u5668\u6240\u5728\u7684\u4f4d\u7f6e\uff0c\u6dfb\u52a0\u9009\u9879\uff1a \"miDebuggerPath\":\"/usr/bin/aarch64-linux-gnu-gdb\", \u5efa\u8bae\u6700\u597d\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84\uff0c\u5982\u672c\u4f8b\u6240\u793a \u4fee\u6539\u76ee\u6807\u5f00\u53d1\u677f\u7684IP\u548c\u7aef\u53e3\uff0c\u6dfb\u52a0\u9009\u9879\uff1a \"miDebuggerServerAddress\": \"192.168.19.171:10000\", \u5982\u672c\u4f8b\u6240\u793a \u5176\u4ed6\u4fee\u6539\uff1a \"preLaunchTask\":\"shell\", \u4e0e\u4e4b\u524dtasks.json\u4e2d\u7684\u4efb\u52a1\u540d\u79f0\u8981\u4e00\u81f4\uff0c\u8868\u793a\u5728\u8c03\u8bd5\u524d\u6267\u884c\u7684\u524d\u7f6e\u4efb\u52a1\uff0c\u5f53\u7136\uff0c\u9664\u4e86\u6267\u884cmake\uff0c\u8fd8\u53ef\u4ee5\u6267\u884c\u5176\u4ed6\u7cfb\u7edf\u547d\u4ee4\uff0c\u5982\u5c06\u7f16\u8bd1\u751f\u6210\u6587\u4ef6\u590d\u5236\u5230\u76ee\u6807\u5f00\u53d1\u677f\u4e0a\u7b49\u7b49\u3002\u3002\u3002","title":"2.2.2 launch.json\u91cd\u8981\u9879\u4fee\u6539\u6dfb\u52a0"},{"location":"VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE/#223-launchjson","text":"{ // \u4f7f\u7528 IntelliSense \u4e86\u89e3\u76f8\u5173\u5c5e\u6027\u3002 // \u60ac\u505c\u4ee5\u67e5\u770b\u73b0\u6709\u5c5e\u6027\u7684\u63cf\u8ff0\u3002 // \u6b32\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95ee: https://go.microsoft.com/fwlink/?linkid=830387 \"version\": \"0.2.0\", \"configurations\": [ { \"name\": \"(gdb) Launch\", \"type\": \"cppdbg\", \"request\": \"launch\", \"program\": \"${workspaceFolder}/test\", \"args\": [], \"stopAtEntry\": true, \"cwd\": \"${workspaceFolder}\", \"environment\": [], \"externalConsole\": true, \"MIMode\": \"gdb\", \"miDebuggerPath\":\"/usr/bin/aarch64-linux-gnu-gdb\", \"miDebuggerServerAddress\": \"192.168.19.171:10000\", \"preLaunchTask\":\"shell\", \"setupCommands\": [ { \"description\": \"Enable pretty-printing for gdb\", \"text\": \"-enable-pretty-printing\", \"ignoreFailures\": true } ] } ] }","title":"2.2.3 launch.json\u53c2\u8003"},{"location":"VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE/#3","text":"","title":"3. \u7f16\u8bd1&amp;\u8c03\u8bd5"},{"location":"VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE/#3-1","text":"\u4e3a\u4e86\u4f7f\u5f00\u53d1\u4e3b\u673a\u4e0a\u7684\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u53ef\u4ee5\u590d\u5236\u5230\u76ee\u6807\u5f00\u53d1\u677f\u4e0a\uff0c\u53ef\u4ee5\u901a\u8fc7\u7f51\u7edc\u7684\u5f62\u5f0f\u8fdb\u884c\u4f20\u8f93\uff0c\u6bd5\u7adfGDB\u4e5f\u662f\u57fa\u4e8e\u7f51\u7edc\u7684\uff0c\u8fd9\u6837\u5c31\u66f4\u65b9\u4fbf\u4e9b\uff0c\u4f8b\u5982\u672c\u6587\u6240\u7528\u7684\u65b9\u5f0fNFS\uff1a\u5df2\u77e5\u5728\u5f00\u53d1\u4e3b\u673a\u4e0a\u5df2\u7ecf\u6709NFS\u670d\u52a1\u5668\u4e86\uff0c\u76ee\u5f55\u4e3a /home/dl/share/nfs \uff0cIP\u5730\u5740\u4e3a\uff1a192.168.19.188 \u3002\u90a3\u4e48\u53ea\u9700\u8981\u5728\u5f00\u53d1\u677f\u4e0a\u6302\u8f7dNFS\u670d\u52a1\u5668\u5373\u53ef\uff0c\u7528\u5982\u4e0b\u547d\u4ee4\uff1a mount -t nfs -o nolock 192.168.19.188:/home/dl/share/nfs /mnt \u5c06PC\u7684NFS\u76ee\u5f55\u6302\u8f7d\u5230\u5f00\u53d1\u677f\u7684mnt\u76ee\u5f55 \u3002 \u56e0\u6b64\uff0c\u9700\u8981\u6bcf\u6b21\u5c06\u751f\u6210\u7684\u76ee\u6807\u6587\u4ef6\u590d\u5236\u5230nfs\u76ee\u5f55\u4e0b\uff0c\u6709\u5f88\u591a\u79cd\u65b9\u5f0f\uff0c\u53ef\u4ee5\u624b\u52a8\u7528\u547d\u4ee4\u8fdb\u884c\uff0c\u56e0\u6b64VS Code\u4e2d\u5df2\u7ecf\u96c6\u6210\u4e86\u7ec8\u7aef\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528\uff0c\u53c8\u6216\u8005\u4fee\u6539makefile\uff0c\u6dfb\u52a0make install \u4e4b\u7c7b\u7684\u547d\u4ee4\uff0c\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u65b9\u6cd5\u6709\u5f88\u591a\uff0c\u4e3e\u4e2a\u7b80\u964b\u7684\u4f8b\u5b50\uff08makefile\uff09\uff1a install: cp -raf test /home/dl/share/nfs \u7136\u540e\uff0c\u4fee\u6539 tasks.josn \uff0c\u8ba9\u5b83\u6267\u884c make \u4e4b\u540e\u518d\u6267\u884c make install \uff1a ............. \"tasks\": [ { \"label\": \"shell\", \"type\": \"shell\", \"command\": \"make;make install\", .............","title":"3. 1 \u8c03\u8bd5\u524d\u7684\u51c6\u5907"},{"location":"VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE/#32","text":"VS Code\u8fd8\u6709\u4e00\u4e2a\u597d\u5904\u5c31\u662f\u96c6\u6210\u4e86linux sh\u7ec8\u7aef\uff0c\u4f7f\u7528VS Code\u7ec8\u7aef\u754c\u9762\uff0c\u5728\u91cc\u9762\u8fde\u5f00\u53d1\u677f\u7684SSH\uff0c\u5c31\u4e0d\u518d\u9700\u8981\u5728\u8c03\u8bd5\u7684\u8fc7\u7a0b\u4e2d\u4e0d\u65ad\u7684\u8fdb\u884c\u754c\u9762\u5207\u6362\u4e86\uff0c\u6309\u4e0a\u6587\u6240\u63d0\u5f00\u53d1\u677f\u7684IP\u4e3a\uff1a192.168.19.171,\u56e0\u6b64\uff0c\u5728VS Code\u4e2d\u7528SSH\u76f8\u8fde\u5373\u53ef\uff1a \u6309\u524d\u9762\u7684\u6b65\u9aa4\uff0c\u5df2\u7ecf\u53ef\u4ee5\u5b9e\u73b0\u5728\u5f00\u53d1\u677f\u7684/mnt\u76ee\u5f55\u4e0b\u9762\u5b9e\u73b0\u6570\u636e\u7a0b\u5e8f\u7684\u5171\u4eab\u4e86\uff0c\u5728\u5f00\u53d1\u677f\u7684/mnt\u76ee\u5f55\u4e0b\u9762\u8f93\u5165\u547d\u4ee4\uff1a gdbserver :10000 test \u5373\u53ef\u5b9e\u73b0\u5728\u5f00\u53d1\u677f\u76d1\u542c 10000 \u7aef\u53e3\u7684GDB\u8c03\u8bd5\u4e8b\u4ef6\u4e86\u3002 \u5728VS Code\u4e0b\u9762\u6309\u4e0b\u5feb\u6377\u952e\uff1a Ctrl+Shift+B \u5373\u53ef\u5b9e\u73b0\u8c03\u7528makefile\u5bf9\u6574\u4e2a\u5de5\u7a0b\u8fdb\u884cmake \u5e76\u4e14make install \uff0c\u6548\u679c\u5982\u4e0b\uff1a","title":"3.2 \u5f00\u59cb\u8c03\u8bd5"},{"location":"VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE/#4","text":"","title":"4. \u6f14\u793a\u6548\u679c"},{"location":"VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/","text":"[\u9996\u53d1][\u53f2\u4e0a\u6700\u8be6\u7ec6][\u7eafWIN10\u73af\u5883]VSCode\u642d\u5efaLinux Kernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883 [\u9996\u53d1][\u53f2\u4e0a\u6700\u8be6\u7ec6][\u7eafWIN10\u73af\u5883]VSCode\u642d\u5efaLinux Kernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883 0.\u73af\u5883\u4ecb\u7ecd VS Code\u7248\u672c 1.\u51c6\u5907\u5de5\u4f5c 1.1\u3001\u5b89\u88c5WSL 1.2\u3001\u5b89\u88c5VSCode 1.3\u3001\u5b89\u88c5VSCode\u63d2\u4ef6 1.4\u3001\u4e0b\u8f7dLinux\u5185\u6838\u4ee3\u7801 1.5\u3001\u642d\u5efaLinux\u5185\u6838\u7f16\u8bd1\u73af\u5883 2.VSCode+WSL\u642d\u5efaIDE 2.1\u3001\u4f7f\u7528VSCode\u8fde\u63a5WSL 2.2\u3001\u5f00\u59cb\u7f16\u8bd1\u5185\u6838 2.3\u3001\u7f16\u8bd1Rootfs 2.4\u3001\u8fd0\u884cRootfs 2.5\u3001\u6d4b\u8bd5Debian\u7cfb\u7edf 2.6\u3001\u4e3b\u673a\u548c QEMU \u865a\u62df\u673a\u4e4b\u95f4\u5171\u4eab\u6587\u4ef6 \u6211\u4eec\u5728\u540e\u7eed\u4f1a\u7ecf\u5e38\u5229\u7528\u8fd9\u4e2a\u7279\u6027\uff0c\u6bd4\u5982\u628a\u7f16\u8bd1\u597d\u7684\u5185\u6838\u6a21\u5757\u6216\u8005\u5185\u6838\u6a21 \u5757\u6e90\u4ee3\u7801\u653e\u5165QEMU \u865a\u62df\u673a\u3002 3. \u4e00\u952e\u5355\u6b65\u8c03\u8bd5\u5185\u6838 3.1\u3001\u914d\u7f6e\u5185\u6838\u8c03\u8bd5\u547d\u4ee4 3.2\u3001\u914d\u7f6eVSCode Debug\u9009\u9879 3.3\u3001\u4e00\u952e\u8c03\u8bd5 3.4\u3001\u66f4\u591aGDB\u8c03\u8bd5\u6280\u5de7 4.\u5355\u6b65\u8c03\u8bd5\u5e94\u7528\u5c42+\u5185\u6838 4.1 \u521b\u5efa\u7b80\u5355\u7684APP\u7a0b\u5e8f 4.2 \u7f16\u8bd1&\u8c03\u8bd5 5.\u5355\u6b65\u8c03\u8bd5modules+\u5185\u6838 5.1\u3001\u7b80\u5355\u6d4b\u8bd5\u4ee3\u7801\u51c6\u5907 5.2\u3001\u5f00\u59cb\u8c03\u8bd5 0.\u73af\u5883\u4ecb\u7ecd \u4e3b\u673a\uff1aWindows10 \u7248\u672c:Windows10\u4e13\u4e1a\u7248 \u7248\u672c\u53f7:1909 \u5b89\u88c5\u65e5\u671f:2019/10/16 \u64cd\u4f5c\u7cfb\u7edf\u7248\u672c18363900 WSL\u7248\u672c\uff1aWSL1\uff08\u6216\u80052\uff09ubuntu18.04 \u7f16\u8bd1\u5668\uff1aaarch64-linux-gnu-gcc (gcc version 7.3.0) \u8c03\u8bd5\u5668\uff1a\u4e3b\u673a\uff1aaarch64-linux-gnu-gdb (gcc version 7.3.0) \u5f00\u53d1\u677f\uff1agdbserver(7.3.0) VS Code\u7248\u672c \u7248\u672c: 1.46.1 (user setup) \u63d0\u4ea4: cd9ea6488829f560dc949a8b2fb789f3cdc05f5d \u65e5\u671f: 2020-06-17T21:13:20.174Z Electron: 7.3.1 Chrome: 78.0.3904.130 Node.js: 12.8.1 V8: 7.8.279.23-electron.0 OS: Windows_NT x64 10.0.18363 1.\u51c6\u5907\u5de5\u4f5c 1.1\u3001\u5b89\u88c5WSL \u4e0b\u8f7d\u5b89\u88c5WSL\u7a0b\u5e8f\uff0c\u5982\u672c\u4f8b\u4e2d\u63d0\u5230\u7684\uff1a ubuntu18.04 1.2\u3001\u5b89\u88c5VSCode Windows\u7248\u7684VSCode\uff0c \u4e0b\u8f7d\u5730\u5740 1.3\u3001\u5b89\u88c5VSCode\u63d2\u4ef6 \u5728\u6269\u5c55\u91cc\u9762\u6dfb\u52a0\u5373\u53ef C/C++ (\u5fc5\u9009) C/C++ Intellisense(\u53ef\u9009) C/C++ Snippets(\u53ef\u9009) Remote(\u5fc5\u9009\u4e09\u4ef6\u5957\uff0c\u5fae\u8f6f\u5b98\u65b9\u51fa\u54c1) Remote-WSL Remote-SSH Remote-Containers Embedded Linux Dev(\u8bbe\u5907\u6811\u63d2\u4ef6) Kconfig(\u8bbe\u5907\u6811\u63d2\u4ef6\u4f9d\u8d56) 1.4\u3001\u4e0b\u8f7dLinux\u5185\u6838\u4ee3\u7801 \u63a8\u8350\u4e0b\u8f7d\uff1ahttps://github.com/figozhang/runninglinuxkernel_4.0 \u63a8\u8350\u7406\u7531\uff1a 1\u30014.0\u7248\u672c\u975e\u5e38\u7ecf\u5178\uff0c\u9002\u5408\u5b66\u4e60 2\u3001\u8be5\u4ee3\u7801\u4ed3\u5e93\u662f\u4e66\u7c4d\u7684\u914d\u5957\u4ee3\u7801\uff0c\u6bd4\u8f83\u5b8c\u5584 3\u3001\u8be5\u4ee3\u7801\u4ed3\u5e93\u5df2\u7ecf\u914d\u7f6e\u597d\u4e86\u5404\u79cd\u6bd4\u8f83\u70e6\u6742\u7684\u73af\u5883\uff0c\u5982\uff1aqemu\u7f51\u7edc\u6865\u63a5\u3001\u6839\u6587\u4ef6\u7cfb\u7edf\u3001qemu\u5171\u4eab\u6587\u4ef6\u5939\u7b49 4\u3001\u6700\u540e\u5f3a\u8c03\uff1a\u524d\u671f\u914d\u5957\u5f00\u53d1\u73af\u5883\uff0c\u4e0d\u9700\u8981\u91cd\u590d\u9020\u8f6e\u5b50\uff0c\u7ea0\u7ed3\u4e8e\u5c0f\u7ec6\u8282\uff0c\u5148\u7ad9\u5728\u5de8\u4eba\u80a9\u4e0a\uff0c\u6574\u5957\u6d41\u7a0b\u719f\u6089\u4e4b\u540e\uff0c\u53ef\u4ee5\u968f\u65f6\u66ff\u6362\u3001\u4fee\u6539\u8fd9\u5957\u73af\u5883 1.5\u3001\u642d\u5efaLinux\u5185\u6838\u7f16\u8bd1\u73af\u5883 Ubuntu18.04(WSL)\u76f8\u5173\u95ee\u9898\u53ef\u76f4\u63a5\u767e\u5ea6\u67e5\u627e Linux\u73af\u5883\uff1aubuntu18.04 (WSL) Linux\u5b89\u88c5\u4f9d\u8d56\u5305\uff1a sudo apt-get install libncurses5-dev libssl-dev build-essential openssl bison bc flex git \u5f53\u7136\u4f60\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u5b89\u88c5\u7f16\u8bd1\u5185\u6838\u9700\u8981\u7684\u6240\u6709\u4f9d\u8d56\u5305\u3002 sudo apt build-dep linux-image-generic Linux\u73af\u5883\u5b89\u88c5\u7f16\u8bd1\u94fe\uff1a \u56e0\u4e3alinux \u5185\u6838\u7248\u672c\u539f\u56e0\uff0c\u56e0\u4e3a\u6240\u7528\u7248\u672c\u4e3a4.0\uff0c\u6240\u4ee5\u9700\u89815.x\u7684gcc\u4ea4\u53c9\u94fe \u4e00\u6b21\u6027\u5b89\u88c5ARM32/64\u6240\u7528\u7684\u4ea4\u53c9\u94fe sudo apt install gcc-5-aarch64-linux-gnu gcc-5-arm-linux-gnueabihf \u5982\u679c\u7cfb\u7edf\u4e2d\u5df2\u7ecf\u6709\u5176\u4ed6\u7248\u672c\u7684gcc\u4ea4\u53c9\u94fe\uff0c\u53ef\u4f7f\u7528 update-alternatives \u8fdb\u884c\u7ba1\u7406,\u53ef\u4ee5\u53c2\u8003\uff1a update-alternatives \u547d\u4ee4\u7684\u4e3b\u8981\u53c2\u6570\u5982\u4e0b update-alternatives --install <link> <name> <path> <priority> link\uff1a\u6307\u5411/etc/alternatives/<name>\u7684\u7b26\u53f7\u5f15\u7528 name\uff1a\u94fe\u63a5\u7684\u540d\u79f0 path\uff1a\u8fd9\u4e2a\u547d\u4ee4\u5bf9\u5e94\u7684\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5b9e\u9645\u8def\u5f84 priority\uff1a\u4f18\u5148\u7ea7\uff0c\u5728 auto \u6a21\u5f0f\u4e0b\uff0c\u6570\u5b57\u5927\u7684\u4f18\u5148\u7ea7\u6bd4\u8f83\u9ad8\u3002 2.VSCode+WSL\u642d\u5efaIDE \u5230\u8fd9\u91cc\u6211\u4eec\u5df2\u7ecf\u5b8c\u6210\u4e86WSL\u3001VScode\u53ca\u5176\u63d2\u4ef6\u7684\u5b89\u88c5\uff0c\u63a5\u4e0b\u6765\u53ef\u4ee5\u4f7f\u7528VSCode\u548cWSL\u8fdb\u884c\u7f16\u8bd1\u3001\u8c03\u8bd5 2.1\u3001\u4f7f\u7528VSCode\u8fde\u63a5WSL 2.2\u3001\u5f00\u59cb\u7f16\u8bd1\u5185\u6838 \u5176\u5b9e\u8be5\u6e90\u7801\u76ee\u5f55\u5df2\u7ecf\u96c6\u6210\u597d\u7f16\u8bd1\u3001\u8fd0\u884c\u3001\u8c03\u8bd5\u6240\u9700\u8981\u7684\u811a\u672c \u8be5\u6e90\u7801\u5df2\u7ecf\u652f\u6301ARM32+debian\u6216ARM64+debian\uff0c\u672c\u4f8b\u4ee5\u4e3aARM64+Debian\u4e3a\u4f8b \u5728\u7ec8\u7aef\u4e2d\u8fd0\u884c\uff1a ./run_debian_arm64.sh build_kernel \u7f16\u8bd1\u5b8c\u6210\uff1a 2.3\u3001\u7f16\u8bd1Rootfs \u7f16\u8bd1 ARM64 \u7248\u672c\u7684Debian \u7cfb\u7edf rootfs $sudo ./run_debian_arm64.sh build_rootfs \u6ce8\u610f\uff1a\u8fd9\u91cc\u9700\u8981\u4f7f\u7528 root \u6743\u9650\u3002 \u7f16\u8bd1\u5b8c\u6210\u540e\u4f1a\u751f\u6210\u4e00\u4e2a rootfs_debian_arm64.ext4 \u7684\u6587\u4ef6\u7cfb\u7edf\u3002 \u6ce8\u610f\uff1a\u5728WSL1\u4e0b\uff0c\u6709\u4e24\u4e2aBUG\uff1a1\u3001\u65e0\u6cd5mount 2\u3001\u65e0\u6cd5\u751f\u6210ext4\u955c\u50cf\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u8be5BUG\u5728WLS2\u4e2d\u53ef\u4ee5\u89e3\u51b3\u3002 \u6240\u4ee5\uff0cWSL1\u7248\u672c\u7684\u73af\u5883\uff0c\u53ef\u4ee5\u5728\u865a\u62df\u673aVM\u6216\u8005\u5176\u4ed6\u73af\u5883\u4e0b\u81ea\u884c\u6253\u5305\uff0c\u6216\u8005\u53ef\u4ee5\u4f7f\u7528\u6253\u5305\u597d\u7684ARM64_Rootfs.ext4,\u70b9\u51fb\u4e0b\u8f7d\u3002 2.4\u3001\u8fd0\u884cRootfs $ ./run_debian_arm64.sh run \u6ce8\u610f\uff1a\u8fd0\u884c\u6b64\u547d\u4ee4\u4e0d\u9700\u8981 root \u6743\u9650\u3002 \u6ce8\u610f\uff1a\u7528\u6237\u540d\uff1aroot \u5bc6\u7801:123 \u6210\u529f\u8fd0\u884c\u4e4b\u540e\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u6210\u529f\u767b\u5f55\u4e4b\u540e\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a 2.5\u3001\u6d4b\u8bd5Debian\u7cfb\u7edf \u56e0\u4e3a\u662f\u57fa\u4e8eDebian\u7cfb\u7edf\uff0c\u4e14\u7f51\u7edc\u7b49\u90fd\u662f\u5df2\u7ecf\u642d\u5efa\u597d\u7684\uff0c\u76f4\u63a5\u53ef\u4ee5\u4f7f\u7528APT\u7b49\u547d\u4ee4\u8fdb\u884c\u5b89\u88c5\u5728\u7ebf\u5305\uff0c\u4ee5\u4e0b\u4e3a\u7b80\u5355\u6d4b\u8bd5\uff1a QEMU \u865a\u62df\u673a\u53ef\u4ee5\u901a\u8fc7VirtIO-NET \u6280\u672f\u6765\u751f\u6210\u4e00\u4e2a\u865a\u62df\u7684\u7f51\u5361\uff0c\u5e76\u4e14\u901a\u8fc7 NAT\u7f51 \u7edc\u6865\u63a5\u6280\u672f\u548c\u4e3b\u673a\u8fdb\u884c\u7f51\u7edc\u5171\u4eab\u3002\u9996\u5148\u4f7f\u7528 ifconfig \u547d\u4ee4\u6765\u68c0\u67e5\u7f51\u7edc\u914d\u7f6e\u3002 \u53ef\u4ee5\u770b\u5230\u751f\u6210\u4e86\u4e00\u4e2a\u540d\u4e3a eth0 \u7684\u7f51\u5361\u8bbe\u5907\uff0c\u5206\u914d\u7684 IP \u5730\u5740\u4e3a\uff1a 10.0.2.15 \u3002 \u901a\u8fc7 apt update \u547d\u4ee4\u6765\u66f4\u65b0 Debian \u7cfb\u7edf\u7684\u8f6f\u4ef6\u4ed3\u5e93\u3002 2.6\u3001\u4e3b\u673a\u548c QEMU \u865a\u62df\u673a\u4e4b\u95f4\u5171\u4eab\u6587\u4ef6 \u4e3b\u673a\u548c QEMU \u865a\u62df\u673a\u53ef\u4ee5\u901a\u8fc7NET_9P \u6280\u672f\u8fdb\u884c\u6587\u4ef6\u5171\u4eab\uff0c\u8fd9\u4e2a\u9700\u8981 QEMU \u865a \u62df\u673a\u7684 Linux \u5185\u6838\u4f7f\u80fd NET_9P \u7684\u5185\u6838\u6a21\u5757\u3002\u672c\u5e73\u53f0\u5df2\u7ecf\u652f\u6301\u4e3b\u673a\u548c QEMU \u865a\u62df\u673a\u7684\u5171\u4eab\u6587\u4ef6\uff0c\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u7b80\u5355\u65b9\u6cd5\u6765\u6d4b\u8bd5\u3002 \u5171\u4eab\u76ee\u5f55\u4e3a:kmodules \u7cfb\u7edf\u76ee\u5f55\u4e3a:mnt \u6548\u679c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u5728 kmodules \u76ee\u5f55\u4e0b\u9762\u65b0\u5efa\u4e00\u4e2a test.c \u6587\u4ef6\u3002 \u6211\u4eec\u5728\u540e\u7eed\u4f1a\u7ecf\u5e38\u5229\u7528\u8fd9\u4e2a\u7279\u6027\uff0c\u6bd4\u5982\u628a\u7f16\u8bd1\u597d\u7684\u5185\u6838\u6a21\u5757\u6216\u8005\u5185\u6838\u6a21 \u5757\u6e90\u4ee3\u7801\u653e\u5165QEMU \u865a\u62df\u673a\u3002 3. \u4e00\u952e\u5355\u6b65\u8c03\u8bd5\u5185\u6838 \u76f4\u5230\u8fd9\u4e00\u6b65\uff0c\u5df2\u7ecf\u5b8c\u6210\u4e86\u57fa\u4e8eWSL+VScode\u7684\u73af\u5883\u642d\u5efa\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u96c6\u7ec8\u7aef\u3001\u6587\u4ef6\u7ba1\u7406\u5668\u3001git\u7ba1\u7406\u5668\u3001\u8fd0\u884c\u8c03\u8bd5\u7b49\u7b49\u7b49\u4e00\u4f53\u5316\u7684IDE\u73af\u5883\u4e86\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u7eafWIN10\u4e0b\u5b9e\u73b0\u5355\u6b65\u8c03\u8bd5\u5185\u6838\u7684\u76ee\u7684\u4e86\uff0c\u975e\u5e38\u65b9\u4fbf\u3002 3.1\u3001\u914d\u7f6e\u5185\u6838\u8c03\u8bd5\u547d\u4ee4 \u5185\u6838\u7684\u7f16\u8bd1\u8c03\u8bd5\u547d\u4ee4\u5df2\u7ecf\u5168\u90e8\u6253\u5305\u8fdb\u4e86\u811a\u672c\u6587\u4ef6\uff0c\u611f\u5174\u8da3\u7684\u7ae5\u978b\u53ef\u4ee5\u53bb\u6df1\u5165\u4e86\u89e3\u4e00\u4e0b\uff0c\u8fd9\u91cc\u4ee5ARM64\u4e3a\u4f8b\uff1a ./run_debian_arm64.sh run debug \u6b64\u65f6\uff0cgdbserver\u5df2\u7ecf\u57281234\u7aef\u53e3\u7b49\u5f85\u8fde\u63a5\uff01 3.2\u3001\u914d\u7f6eVSCode Debug\u9009\u9879 \u9009\u62e9\uff1a\u8fd0\u884c\uff08R\uff09-> \u6dfb\u52a0\u914d\u7f6e -> C++\uff08GDB/LDB\uff09 \u5982\u4e0b\u52a8\u56fe\u6240\u793a\uff1a \u6dfb\u52a0\u5982\u4e0b\u914d\u7f6e\u4fe1\u606f\uff1a { // \u4f7f\u7528 IntelliSense \u4e86\u89e3\u76f8\u5173\u5c5e\u6027\u3002 // \u60ac\u505c\u4ee5\u67e5\u770b\u73b0\u6709\u5c5e\u6027\u7684\u63cf\u8ff0\u3002 // \u6b32\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95ee: https://go.microsoft.com/fwlink/?linkid=830387 \"version\": \"0.2.0\", \"configurations\": [ { \"name\": \"(gdb) \u542f\u52a8\", \"type\": \"cppdbg\", \"request\": \"launch\", \"program\": \"${workspaceFolder}/vmlinux\", \"args\": [], \"stopAtEntry\": true, \"cwd\": \"${workspaceFolder}\", \"environment\": [], \"externalConsole\": true,// \u8c03\u8bd5\u65f6\u662f\u5426\u663e\u793a\u63a7\u5236\u53f0\u7a97\u53e3\uff0c\u4e00\u822c\u8bbe\u7f6e\u4e3atrue\u663e\u793a\u63a7\u5236\u53f0 \"MIMode\": \"gdb\", \"miDebuggerPath\":\"/usr/local/bin/aarch64-linux-gnu-gdb\", \"miDebuggerServerAddress\": \"192.168.1.111:1234\", \"setupCommands\": [ { \"description\": \"\u4e3a gdb \u542f\u7528\u6574\u9f50\u6253\u5370\", \"text\": \"-enable-pretty-printing\", \"ignoreFailures\": true } ] } ] } \u6ce8\u610f:192.168.1.111 \u662f\u672c\u5730WIN10\u7684IP\u4e5f\u5c31\u662fWSL\u7684IP \u8fd9\u91cc\u6709\u4e2a\u5c0f\u5c0f\u7684BUG\uff0c\u5fc5\u987b\u8f93\u5165IP\u5730\u5740\uff0c\u4e0d\u80fd\u4f7f\u7528localhost\u9876\u66ff\uff08\u5728\u5176\u4ed6\u73af\u5883\u4e0b\u662f\u53ef\u4ee5\u7684\uff09 gdb\u8def\u5f84\uff1a\"miDebuggerPath\":\"/usr/local/bin/aarch64-linux-gnu-gdb\" gdb\u76d1\u542c\u7aef\u53e3\uff1a\"miDebuggerServerAddress\": \"192.168.1.111:1234\",1234\u4e0e\u4e0a\u4e00\u5c0f\u8282\u4e2d\u7684Listen\u7aef\u53e3\u4e00\u81f4\uff01 3.3\u3001\u4e00\u952e\u8c03\u8bd5 \u7ecf\u8fc73.1\u30013.2\u7684\u914d\u7f6e\u5df2\u7ecf\u5b9e\u73b0\u4e86\u8c03\u8bd5\u7684\u524d\u7f6e\u6761\u4ef6\uff0c\u73b0\u53ea\u9700\u6309\u4e0bF5\u952e\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4e00\u952e\u8c03\u8bd5\u4e86\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a 3.4\u3001\u66f4\u591aGDB\u8c03\u8bd5\u6280\u5de7 \u5728\u7ec8\u7aef\u754c\u9762\u680f\uff0c\u5207\u6362\u81f3\u8c03\u8bd5\u63a7\u5236\u53f0;\u8f93\u5165\u547d\u4ee4\uff0c\u5982\uff1a -exec info registers \uff0c\u5373\u53ef\u67e5\u770b\u8c03\u8bd5\u8fc7\u4e2d\u7684\u7684\u5bc4\u5b58\u5668 4.\u5355\u6b65\u8c03\u8bd5\u5e94\u7528\u5c42+\u5185\u6838 \u7ecf\u8fc7\u524d\u97620~3\u7684\u94fa\u57ab\uff0c\u6211\u4eec\u5df2\u7ecf\u5177\u5907\u4e86\u4ee5\u4e0b\u4e09\u4e2a\u6761\u4ef6\uff1a 1\u3001\u5b8c\u6574\u7684\u5185\u6838\uff08\u7f16\u8bd1\u73af\u5883\u3001\u8c03\u8bd5\u73af\uff09+\u5b8c\u6574\u7684Rootfs 2\u3001\u5b8c\u6574\u7684qemu\u73af\u5883,\u5305\u62ec\uff1a\u7f51\u7edc\u5171\u4eab\u3001\u6865\u63a5\u7b49\uff0c\u53ef\u4ee5\u968f\u65f6\u5c06\u4e3b\u673a\u7684\u6587\u4ef6\u5171\u4eab\u7ed9qemu\uff08\u672c\u5730\u7684kmodules\u6587\u4ef6\u5939\u300a---\u300b\u865a\u62df\u673a\u91cc\u9762\u7684mnt\u6587\u4ef6\u5939\uff09 3\u3001\u5b8c\u6574\u7684GDB\u8c03\u8bd5\u73af\u5883\uff0c\u53ef\u4ee5\u5b9e\u73b0\u5185\u6838\u5355\u6b65\u8c03\u8bd5 \u90a3\u4e48\uff0c\u9488\u5bf9\u4ee5\u4e0a\u6761\u4ef6\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u8c03\u8bd5\u6216\u8005\u53c2\u8003\u4e00\u4e2aLinux\u5e94\u7528\u7a0b\u5e8f\u5982\u4f55\u8bbf\u95ee\u5230\u5185\u6838\u7684\uff0c\u662f\u5426\u53ef\u4ee5\u5b8c\u6210\u5462\uff1f\u7b54\u6848\u662f\u53ef\u4ee5\u7684\uff01 \u8bf7\u770b\u4e0b\u9762\uff01 4.1 \u521b\u5efa\u7b80\u5355\u7684APP\u7a0b\u5e8f \u5728 kmodules\u6587\u4ef6\u5939 \u91cc\u9762\u65b0\u5efa\u4e00\u4e2a test.c \u5185\u5bb9\u5982\u4e0b\uff1a #include <stdio.h> #include <stdlib.h> #include <unistd.h> #include <sys/types.h> #include <sys/stat.h> #include <fcntl.h> #include <errno.h> unsigned char readbuf[255]; int count = 0; int main(void) { int fd ; int retval; printf(\"hello world!\\n\"); fd = open(\"./README\",O_RDONLY); if ( fd == -1 ) { perror( \"open dht11 error\\n\" ) ; exit( -1 ) ; } printf( \"open ./README\\n\" ) ; sleep( 2 ) ; while( 1 ) { sleep( 1 ) ; if(count++ == 0) { printf(\"count=%d\\n\",count); } } close( fd ) ; return 0; } 4.2 \u7f16\u8bd1&\u8c03\u8bd5 \u8f93\u5165\u7f16\u8bd1\u547d\u4ee4\uff1a aarch64-linux-gnu-gcc test.c -o test \u5373\u53ef\u5728kmodules\u6587\u4ef6\u5939\u4e0b\u9762\u5f97\u5230\u4e00\u4e2a\u65b0\u7684test\u5e94\u7528\u7a0b\u5e8f\u3002 \u63a5\u7740\uff0c\u6309\u7b2c\u4e09\u8282\u505a\u6cd5\u8fdb\u5165\u53ef\u5355\u6b65\u8c03\u8bd5\u5185\u6838\u7684\u73af\u5883\u3002 \u6574\u4f53\u6f14\u793a\u6548\u679c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u53ea\u662f\u7b80\u5355\u7684\u6f14\u793a\uff0c\u5b9e\u73b0\u4ece\u5e94\u7528\u5c42\u5230\u5185\u6838\u5c42\u7684\u8c03\u7528\u8fc7\u7a0b\uff0c\u66f4\u6df1\u7684\u5e94\u7528\u53ef\u4ee5\u7ee7\u7eed\u53d1\u6398\u3002 5.\u5355\u6b65\u8c03\u8bd5modules+\u5185\u6838 5.1\u3001\u7b80\u5355\u6d4b\u8bd5\u4ee3\u7801\u51c6\u5907 \u5728\u4e3b\u673a kmodules\u6587\u4ef6\u5939 \u4e0b\u65b0\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u5185\u6838\u6a21\u5757\u7a0b\u5e8f hello_drv.c \u53ca\u5bf9\u5e94\u7684Makefile\u6587\u4ef6 \u5185\u6838\u6a21\u5757\u7a0b\u5e8f hello_drv.c \u5185\u5bb9\u793a\u4f8b\uff1a /* * 1 include files * 2 __init module_init() insmod * 3 __exit module_exit() rmmod * 4 GPL BSD Aeplli GPLv2 MIT * 5 module_license(GPL) */ #include <linux/init.h> #include <linux/module.h> #include <linux/fs.h> #include <linux/device.h> #include <asm/uaccess.h> #include <asm/io.h> #include <linux/device.h> struct class *hello_class; struct device * hello_dev; int hello_open(struct inode *inode, struct file *flips) { printk(\"--------------%s--------------\\n\",__FUNCTION__); return 0; } static ssize_t hello_write(struct file *file, const char __user *in, size_t size, loff_t *off) { printk(\"--------------%s--------------\\n\",__FUNCTION__); unsigned int buf = 88; copy_from_user(&buf, in ,size ); printk(\"write buf is : %d\\n\",buf); } static ssize_t hello_read(struct file *file, char __user *buf, size_t nbytes, loff_t *ppos) { printk(\"--------------%s--------------\\n\",__FUNCTION__); unsigned int a = 100; copy_to_user(buf,&a,sizeof(int)); } static int my_major = 0; const struct file_operations myfops={ .open = hello_open, .write= hello_write, .read = hello_read, }; static int __init hello_init(void) { printk(\"--------------%s--------------\\n\",__FUNCTION__);//app printf my_major = register_chrdev(0,\"hello\",&myfops); if(my_major <0) { printk(\"reg error!\\n\"); } else printk(\"my_major =%d\",my_major); hello_class = class_create(THIS_MODULE,\"hello_class\");//creat hello_class hello_dev = device_create(hello_class, NULL,MKDEV(my_major,0), NULL, \\ \"hello_dev\");//creat hello_dev--->>/dev/hello_dev return 0; } static void __exit hello_exit(void) { printk(\"--------------%s--------------\\n\",__FUNCTION__); device_destroy(hello_class,MKDEV(my_major,0)); class_destroy(hello_class); unregister_chrdev(my_major,\"hello\"); } module_init(hello_init); module_exit(hello_exit); MODULE_LICENSE(\"GPL\"); \u5185\u6838\u6a21\u5757\u7a0b\u5e8f hello_drv.c \u5185\u5bb9\u793a\u4f8b\uff1a ifeq ($(KERNELRELEASE),) export ARCH=arm64 export CROSS_COMPILE=aarch64-linux-gnu- KERNELDIR=/mnt/j/\u5954\u8dd1\u5427linux\u5185\u6838\u5165\u95e8\u7248/\u6700\u65b0\u6e90\u7801/runninglinuxkernel_4.0-rlk_basic #your kernel dirction NFS_DIR=$(KERNELDIR)/kmodules CUR_DIR := $(shell pwd) all : make -C $(KERNELDIR) M=$(CUR_DIR) modules install: cp -ranf *.ko $(NFS_DIR)/ clean : make -C $(KERNELDIR) M=$(CUR_DIR) clean .PHONY: modules install clean else obj-m := hello_drv.o endif \u7f16\u8bd1 \u6ce8\u610f\uff0c\u8fd9\u91cc\u7684\u7f16\u8bd1\u5e94\u8be5\u662f\u5728\u4e3b\u673a\u73af\u5883\u4e0b\uff0c\u5373WSL\u7684\u547d\u4ee4\u884c\u4e2d\uff1a make 5.2\u3001\u5f00\u59cb\u8c03\u8bd5 \u6211\u4eec\u77e5\u9053\u5f53\u4f7f\u7528 insmod \u65f6\uff0c\u4f1a\u8c03\u7528\u5bf9\u5e94\u7684 __init \u63a5\u53e3\uff0c\u800c\u5728\u672c\u4f8b\u4e2d\uff0c hello_init \u5c31\u4e3a\u5165\u53e3\u51fd\u6570\uff0c\u56e0\u6b64\u7b80\u5355\u6d4b\u8bd5\u4e00\u4e0b\uff0c\u5728\u5185\u6838\u4e2d\u627e\u5230 register_chrdev \u5bf9\u5e94\u7684\u63a5\u53e3\u5b9a\u4e49\uff0c\u5e76\u6253\u597d\u65ad\u70b9\uff0c\u5f85 insmod \u6267\u884c\u4e4b\u540e\uff0c\u89c2\u5bdf\u5185\u6838\u7684\u8fd0\u884c\u8fc7\u7a0b\u3002 \u5728\u5185\u6838\u4e2d\u6253\u4e0a\u76f8\u5e94\u65ad\u70b9\uff1a \u6f14\u793a\u6548\u679c\u52a8\u56fe\uff1a","title":"0.IDE\u73af\u5883\u642d\u5efa[\u7eafWIN]"},{"location":"VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#win10vscodelinux-kernelide","text":"[\u9996\u53d1][\u53f2\u4e0a\u6700\u8be6\u7ec6][\u7eafWIN10\u73af\u5883]VSCode\u642d\u5efaLinux Kernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883 0.\u73af\u5883\u4ecb\u7ecd VS Code\u7248\u672c 1.\u51c6\u5907\u5de5\u4f5c 1.1\u3001\u5b89\u88c5WSL 1.2\u3001\u5b89\u88c5VSCode 1.3\u3001\u5b89\u88c5VSCode\u63d2\u4ef6 1.4\u3001\u4e0b\u8f7dLinux\u5185\u6838\u4ee3\u7801 1.5\u3001\u642d\u5efaLinux\u5185\u6838\u7f16\u8bd1\u73af\u5883 2.VSCode+WSL\u642d\u5efaIDE 2.1\u3001\u4f7f\u7528VSCode\u8fde\u63a5WSL 2.2\u3001\u5f00\u59cb\u7f16\u8bd1\u5185\u6838 2.3\u3001\u7f16\u8bd1Rootfs 2.4\u3001\u8fd0\u884cRootfs 2.5\u3001\u6d4b\u8bd5Debian\u7cfb\u7edf 2.6\u3001\u4e3b\u673a\u548c QEMU \u865a\u62df\u673a\u4e4b\u95f4\u5171\u4eab\u6587\u4ef6 \u6211\u4eec\u5728\u540e\u7eed\u4f1a\u7ecf\u5e38\u5229\u7528\u8fd9\u4e2a\u7279\u6027\uff0c\u6bd4\u5982\u628a\u7f16\u8bd1\u597d\u7684\u5185\u6838\u6a21\u5757\u6216\u8005\u5185\u6838\u6a21 \u5757\u6e90\u4ee3\u7801\u653e\u5165QEMU \u865a\u62df\u673a\u3002 3. \u4e00\u952e\u5355\u6b65\u8c03\u8bd5\u5185\u6838 3.1\u3001\u914d\u7f6e\u5185\u6838\u8c03\u8bd5\u547d\u4ee4 3.2\u3001\u914d\u7f6eVSCode Debug\u9009\u9879 3.3\u3001\u4e00\u952e\u8c03\u8bd5 3.4\u3001\u66f4\u591aGDB\u8c03\u8bd5\u6280\u5de7 4.\u5355\u6b65\u8c03\u8bd5\u5e94\u7528\u5c42+\u5185\u6838 4.1 \u521b\u5efa\u7b80\u5355\u7684APP\u7a0b\u5e8f 4.2 \u7f16\u8bd1&\u8c03\u8bd5 5.\u5355\u6b65\u8c03\u8bd5modules+\u5185\u6838 5.1\u3001\u7b80\u5355\u6d4b\u8bd5\u4ee3\u7801\u51c6\u5907 5.2\u3001\u5f00\u59cb\u8c03\u8bd5","title":"[\u9996\u53d1][\u53f2\u4e0a\u6700\u8be6\u7ec6][\u7eafWIN10\u73af\u5883]VSCode\u642d\u5efaLinux Kernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883"},{"location":"VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#0","text":"\u4e3b\u673a\uff1aWindows10 \u7248\u672c:Windows10\u4e13\u4e1a\u7248 \u7248\u672c\u53f7:1909 \u5b89\u88c5\u65e5\u671f:2019/10/16 \u64cd\u4f5c\u7cfb\u7edf\u7248\u672c18363900 WSL\u7248\u672c\uff1aWSL1\uff08\u6216\u80052\uff09ubuntu18.04 \u7f16\u8bd1\u5668\uff1aaarch64-linux-gnu-gcc (gcc version 7.3.0) \u8c03\u8bd5\u5668\uff1a\u4e3b\u673a\uff1aaarch64-linux-gnu-gdb (gcc version 7.3.0) \u5f00\u53d1\u677f\uff1agdbserver(7.3.0)","title":"0.\u73af\u5883\u4ecb\u7ecd"},{"location":"VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#vs-code","text":"\u7248\u672c: 1.46.1 (user setup) \u63d0\u4ea4: cd9ea6488829f560dc949a8b2fb789f3cdc05f5d \u65e5\u671f: 2020-06-17T21:13:20.174Z Electron: 7.3.1 Chrome: 78.0.3904.130 Node.js: 12.8.1 V8: 7.8.279.23-electron.0 OS: Windows_NT x64 10.0.18363","title":"VS Code\u7248\u672c"},{"location":"VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#1","text":"","title":"1.\u51c6\u5907\u5de5\u4f5c"},{"location":"VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#11wsl","text":"\u4e0b\u8f7d\u5b89\u88c5WSL\u7a0b\u5e8f\uff0c\u5982\u672c\u4f8b\u4e2d\u63d0\u5230\u7684\uff1a ubuntu18.04","title":"1.1\u3001\u5b89\u88c5WSL"},{"location":"VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#12vscode","text":"Windows\u7248\u7684VSCode\uff0c \u4e0b\u8f7d\u5730\u5740","title":"1.2\u3001\u5b89\u88c5VSCode"},{"location":"VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#13vscode","text":"\u5728\u6269\u5c55\u91cc\u9762\u6dfb\u52a0\u5373\u53ef C/C++ (\u5fc5\u9009) C/C++ Intellisense(\u53ef\u9009) C/C++ Snippets(\u53ef\u9009) Remote(\u5fc5\u9009\u4e09\u4ef6\u5957\uff0c\u5fae\u8f6f\u5b98\u65b9\u51fa\u54c1) Remote-WSL Remote-SSH Remote-Containers Embedded Linux Dev(\u8bbe\u5907\u6811\u63d2\u4ef6) Kconfig(\u8bbe\u5907\u6811\u63d2\u4ef6\u4f9d\u8d56)","title":"1.3\u3001\u5b89\u88c5VSCode\u63d2\u4ef6"},{"location":"VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#14linux","text":"\u63a8\u8350\u4e0b\u8f7d\uff1ahttps://github.com/figozhang/runninglinuxkernel_4.0 \u63a8\u8350\u7406\u7531\uff1a 1\u30014.0\u7248\u672c\u975e\u5e38\u7ecf\u5178\uff0c\u9002\u5408\u5b66\u4e60 2\u3001\u8be5\u4ee3\u7801\u4ed3\u5e93\u662f\u4e66\u7c4d\u7684\u914d\u5957\u4ee3\u7801\uff0c\u6bd4\u8f83\u5b8c\u5584 3\u3001\u8be5\u4ee3\u7801\u4ed3\u5e93\u5df2\u7ecf\u914d\u7f6e\u597d\u4e86\u5404\u79cd\u6bd4\u8f83\u70e6\u6742\u7684\u73af\u5883\uff0c\u5982\uff1aqemu\u7f51\u7edc\u6865\u63a5\u3001\u6839\u6587\u4ef6\u7cfb\u7edf\u3001qemu\u5171\u4eab\u6587\u4ef6\u5939\u7b49 4\u3001\u6700\u540e\u5f3a\u8c03\uff1a\u524d\u671f\u914d\u5957\u5f00\u53d1\u73af\u5883\uff0c\u4e0d\u9700\u8981\u91cd\u590d\u9020\u8f6e\u5b50\uff0c\u7ea0\u7ed3\u4e8e\u5c0f\u7ec6\u8282\uff0c\u5148\u7ad9\u5728\u5de8\u4eba\u80a9\u4e0a\uff0c\u6574\u5957\u6d41\u7a0b\u719f\u6089\u4e4b\u540e\uff0c\u53ef\u4ee5\u968f\u65f6\u66ff\u6362\u3001\u4fee\u6539\u8fd9\u5957\u73af\u5883","title":"1.4\u3001\u4e0b\u8f7dLinux\u5185\u6838\u4ee3\u7801"},{"location":"VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#15linux","text":"Ubuntu18.04(WSL)\u76f8\u5173\u95ee\u9898\u53ef\u76f4\u63a5\u767e\u5ea6\u67e5\u627e Linux\u73af\u5883\uff1aubuntu18.04 (WSL) Linux\u5b89\u88c5\u4f9d\u8d56\u5305\uff1a sudo apt-get install libncurses5-dev libssl-dev build-essential openssl bison bc flex git \u5f53\u7136\u4f60\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u5b89\u88c5\u7f16\u8bd1\u5185\u6838\u9700\u8981\u7684\u6240\u6709\u4f9d\u8d56\u5305\u3002 sudo apt build-dep linux-image-generic Linux\u73af\u5883\u5b89\u88c5\u7f16\u8bd1\u94fe\uff1a \u56e0\u4e3alinux \u5185\u6838\u7248\u672c\u539f\u56e0\uff0c\u56e0\u4e3a\u6240\u7528\u7248\u672c\u4e3a4.0\uff0c\u6240\u4ee5\u9700\u89815.x\u7684gcc\u4ea4\u53c9\u94fe \u4e00\u6b21\u6027\u5b89\u88c5ARM32/64\u6240\u7528\u7684\u4ea4\u53c9\u94fe sudo apt install gcc-5-aarch64-linux-gnu gcc-5-arm-linux-gnueabihf \u5982\u679c\u7cfb\u7edf\u4e2d\u5df2\u7ecf\u6709\u5176\u4ed6\u7248\u672c\u7684gcc\u4ea4\u53c9\u94fe\uff0c\u53ef\u4f7f\u7528 update-alternatives \u8fdb\u884c\u7ba1\u7406,\u53ef\u4ee5\u53c2\u8003\uff1a update-alternatives \u547d\u4ee4\u7684\u4e3b\u8981\u53c2\u6570\u5982\u4e0b update-alternatives --install <link> <name> <path> <priority> link\uff1a\u6307\u5411/etc/alternatives/<name>\u7684\u7b26\u53f7\u5f15\u7528 name\uff1a\u94fe\u63a5\u7684\u540d\u79f0 path\uff1a\u8fd9\u4e2a\u547d\u4ee4\u5bf9\u5e94\u7684\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5b9e\u9645\u8def\u5f84 priority\uff1a\u4f18\u5148\u7ea7\uff0c\u5728 auto \u6a21\u5f0f\u4e0b\uff0c\u6570\u5b57\u5927\u7684\u4f18\u5148\u7ea7\u6bd4\u8f83\u9ad8\u3002","title":"1.5\u3001\u642d\u5efaLinux\u5185\u6838\u7f16\u8bd1\u73af\u5883"},{"location":"VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#2vscodewslide","text":"\u5230\u8fd9\u91cc\u6211\u4eec\u5df2\u7ecf\u5b8c\u6210\u4e86WSL\u3001VScode\u53ca\u5176\u63d2\u4ef6\u7684\u5b89\u88c5\uff0c\u63a5\u4e0b\u6765\u53ef\u4ee5\u4f7f\u7528VSCode\u548cWSL\u8fdb\u884c\u7f16\u8bd1\u3001\u8c03\u8bd5","title":"2.VSCode+WSL\u642d\u5efaIDE"},{"location":"VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#21vscodewsl","text":"","title":"2.1\u3001\u4f7f\u7528VSCode\u8fde\u63a5WSL"},{"location":"VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#22","text":"\u5176\u5b9e\u8be5\u6e90\u7801\u76ee\u5f55\u5df2\u7ecf\u96c6\u6210\u597d\u7f16\u8bd1\u3001\u8fd0\u884c\u3001\u8c03\u8bd5\u6240\u9700\u8981\u7684\u811a\u672c \u8be5\u6e90\u7801\u5df2\u7ecf\u652f\u6301ARM32+debian\u6216ARM64+debian\uff0c\u672c\u4f8b\u4ee5\u4e3aARM64+Debian\u4e3a\u4f8b \u5728\u7ec8\u7aef\u4e2d\u8fd0\u884c\uff1a ./run_debian_arm64.sh build_kernel \u7f16\u8bd1\u5b8c\u6210\uff1a","title":"2.2\u3001\u5f00\u59cb\u7f16\u8bd1\u5185\u6838"},{"location":"VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#23rootfs","text":"\u7f16\u8bd1 ARM64 \u7248\u672c\u7684Debian \u7cfb\u7edf rootfs $sudo ./run_debian_arm64.sh build_rootfs \u6ce8\u610f\uff1a\u8fd9\u91cc\u9700\u8981\u4f7f\u7528 root \u6743\u9650\u3002 \u7f16\u8bd1\u5b8c\u6210\u540e\u4f1a\u751f\u6210\u4e00\u4e2a rootfs_debian_arm64.ext4 \u7684\u6587\u4ef6\u7cfb\u7edf\u3002 \u6ce8\u610f\uff1a\u5728WSL1\u4e0b\uff0c\u6709\u4e24\u4e2aBUG\uff1a1\u3001\u65e0\u6cd5mount 2\u3001\u65e0\u6cd5\u751f\u6210ext4\u955c\u50cf\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u8be5BUG\u5728WLS2\u4e2d\u53ef\u4ee5\u89e3\u51b3\u3002 \u6240\u4ee5\uff0cWSL1\u7248\u672c\u7684\u73af\u5883\uff0c\u53ef\u4ee5\u5728\u865a\u62df\u673aVM\u6216\u8005\u5176\u4ed6\u73af\u5883\u4e0b\u81ea\u884c\u6253\u5305\uff0c\u6216\u8005\u53ef\u4ee5\u4f7f\u7528\u6253\u5305\u597d\u7684ARM64_Rootfs.ext4,\u70b9\u51fb\u4e0b\u8f7d\u3002","title":"2.3\u3001\u7f16\u8bd1Rootfs"},{"location":"VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#24rootfs","text":"$ ./run_debian_arm64.sh run \u6ce8\u610f\uff1a\u8fd0\u884c\u6b64\u547d\u4ee4\u4e0d\u9700\u8981 root \u6743\u9650\u3002 \u6ce8\u610f\uff1a\u7528\u6237\u540d\uff1aroot \u5bc6\u7801:123 \u6210\u529f\u8fd0\u884c\u4e4b\u540e\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u6210\u529f\u767b\u5f55\u4e4b\u540e\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a","title":"2.4\u3001\u8fd0\u884cRootfs"},{"location":"VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#25debian","text":"\u56e0\u4e3a\u662f\u57fa\u4e8eDebian\u7cfb\u7edf\uff0c\u4e14\u7f51\u7edc\u7b49\u90fd\u662f\u5df2\u7ecf\u642d\u5efa\u597d\u7684\uff0c\u76f4\u63a5\u53ef\u4ee5\u4f7f\u7528APT\u7b49\u547d\u4ee4\u8fdb\u884c\u5b89\u88c5\u5728\u7ebf\u5305\uff0c\u4ee5\u4e0b\u4e3a\u7b80\u5355\u6d4b\u8bd5\uff1a QEMU \u865a\u62df\u673a\u53ef\u4ee5\u901a\u8fc7VirtIO-NET \u6280\u672f\u6765\u751f\u6210\u4e00\u4e2a\u865a\u62df\u7684\u7f51\u5361\uff0c\u5e76\u4e14\u901a\u8fc7 NAT\u7f51 \u7edc\u6865\u63a5\u6280\u672f\u548c\u4e3b\u673a\u8fdb\u884c\u7f51\u7edc\u5171\u4eab\u3002\u9996\u5148\u4f7f\u7528 ifconfig \u547d\u4ee4\u6765\u68c0\u67e5\u7f51\u7edc\u914d\u7f6e\u3002 \u53ef\u4ee5\u770b\u5230\u751f\u6210\u4e86\u4e00\u4e2a\u540d\u4e3a eth0 \u7684\u7f51\u5361\u8bbe\u5907\uff0c\u5206\u914d\u7684 IP \u5730\u5740\u4e3a\uff1a 10.0.2.15 \u3002 \u901a\u8fc7 apt update \u547d\u4ee4\u6765\u66f4\u65b0 Debian \u7cfb\u7edf\u7684\u8f6f\u4ef6\u4ed3\u5e93\u3002","title":"2.5\u3001\u6d4b\u8bd5Debian\u7cfb\u7edf"},{"location":"VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#26-qemu","text":"\u4e3b\u673a\u548c QEMU \u865a\u62df\u673a\u53ef\u4ee5\u901a\u8fc7NET_9P \u6280\u672f\u8fdb\u884c\u6587\u4ef6\u5171\u4eab\uff0c\u8fd9\u4e2a\u9700\u8981 QEMU \u865a \u62df\u673a\u7684 Linux \u5185\u6838\u4f7f\u80fd NET_9P \u7684\u5185\u6838\u6a21\u5757\u3002\u672c\u5e73\u53f0\u5df2\u7ecf\u652f\u6301\u4e3b\u673a\u548c QEMU \u865a\u62df\u673a\u7684\u5171\u4eab\u6587\u4ef6\uff0c\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u7b80\u5355\u65b9\u6cd5\u6765\u6d4b\u8bd5\u3002 \u5171\u4eab\u76ee\u5f55\u4e3a:kmodules \u7cfb\u7edf\u76ee\u5f55\u4e3a:mnt \u6548\u679c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u5728 kmodules \u76ee\u5f55\u4e0b\u9762\u65b0\u5efa\u4e00\u4e2a test.c \u6587\u4ef6\u3002","title":"2.6\u3001\u4e3b\u673a\u548c QEMU \u865a\u62df\u673a\u4e4b\u95f4\u5171\u4eab\u6587\u4ef6"},{"location":"VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#qemu","text":"","title":"\u6211\u4eec\u5728\u540e\u7eed\u4f1a\u7ecf\u5e38\u5229\u7528\u8fd9\u4e2a\u7279\u6027\uff0c\u6bd4\u5982\u628a\u7f16\u8bd1\u597d\u7684\u5185\u6838\u6a21\u5757\u6216\u8005\u5185\u6838\u6a21 \u5757\u6e90\u4ee3\u7801\u653e\u5165QEMU \u865a\u62df\u673a\u3002"},{"location":"VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#3","text":"\u76f4\u5230\u8fd9\u4e00\u6b65\uff0c\u5df2\u7ecf\u5b8c\u6210\u4e86\u57fa\u4e8eWSL+VScode\u7684\u73af\u5883\u642d\u5efa\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u96c6\u7ec8\u7aef\u3001\u6587\u4ef6\u7ba1\u7406\u5668\u3001git\u7ba1\u7406\u5668\u3001\u8fd0\u884c\u8c03\u8bd5\u7b49\u7b49\u7b49\u4e00\u4f53\u5316\u7684IDE\u73af\u5883\u4e86\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u7eafWIN10\u4e0b\u5b9e\u73b0\u5355\u6b65\u8c03\u8bd5\u5185\u6838\u7684\u76ee\u7684\u4e86\uff0c\u975e\u5e38\u65b9\u4fbf\u3002","title":"3. \u4e00\u952e\u5355\u6b65\u8c03\u8bd5\u5185\u6838"},{"location":"VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#31","text":"\u5185\u6838\u7684\u7f16\u8bd1\u8c03\u8bd5\u547d\u4ee4\u5df2\u7ecf\u5168\u90e8\u6253\u5305\u8fdb\u4e86\u811a\u672c\u6587\u4ef6\uff0c\u611f\u5174\u8da3\u7684\u7ae5\u978b\u53ef\u4ee5\u53bb\u6df1\u5165\u4e86\u89e3\u4e00\u4e0b\uff0c\u8fd9\u91cc\u4ee5ARM64\u4e3a\u4f8b\uff1a ./run_debian_arm64.sh run debug \u6b64\u65f6\uff0cgdbserver\u5df2\u7ecf\u57281234\u7aef\u53e3\u7b49\u5f85\u8fde\u63a5\uff01","title":"3.1\u3001\u914d\u7f6e\u5185\u6838\u8c03\u8bd5\u547d\u4ee4"},{"location":"VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#32vscode-debug","text":"\u9009\u62e9\uff1a\u8fd0\u884c\uff08R\uff09-> \u6dfb\u52a0\u914d\u7f6e -> C++\uff08GDB/LDB\uff09 \u5982\u4e0b\u52a8\u56fe\u6240\u793a\uff1a \u6dfb\u52a0\u5982\u4e0b\u914d\u7f6e\u4fe1\u606f\uff1a { // \u4f7f\u7528 IntelliSense \u4e86\u89e3\u76f8\u5173\u5c5e\u6027\u3002 // \u60ac\u505c\u4ee5\u67e5\u770b\u73b0\u6709\u5c5e\u6027\u7684\u63cf\u8ff0\u3002 // \u6b32\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95ee: https://go.microsoft.com/fwlink/?linkid=830387 \"version\": \"0.2.0\", \"configurations\": [ { \"name\": \"(gdb) \u542f\u52a8\", \"type\": \"cppdbg\", \"request\": \"launch\", \"program\": \"${workspaceFolder}/vmlinux\", \"args\": [], \"stopAtEntry\": true, \"cwd\": \"${workspaceFolder}\", \"environment\": [], \"externalConsole\": true,// \u8c03\u8bd5\u65f6\u662f\u5426\u663e\u793a\u63a7\u5236\u53f0\u7a97\u53e3\uff0c\u4e00\u822c\u8bbe\u7f6e\u4e3atrue\u663e\u793a\u63a7\u5236\u53f0 \"MIMode\": \"gdb\", \"miDebuggerPath\":\"/usr/local/bin/aarch64-linux-gnu-gdb\", \"miDebuggerServerAddress\": \"192.168.1.111:1234\", \"setupCommands\": [ { \"description\": \"\u4e3a gdb \u542f\u7528\u6574\u9f50\u6253\u5370\", \"text\": \"-enable-pretty-printing\", \"ignoreFailures\": true } ] } ] } \u6ce8\u610f:192.168.1.111 \u662f\u672c\u5730WIN10\u7684IP\u4e5f\u5c31\u662fWSL\u7684IP \u8fd9\u91cc\u6709\u4e2a\u5c0f\u5c0f\u7684BUG\uff0c\u5fc5\u987b\u8f93\u5165IP\u5730\u5740\uff0c\u4e0d\u80fd\u4f7f\u7528localhost\u9876\u66ff\uff08\u5728\u5176\u4ed6\u73af\u5883\u4e0b\u662f\u53ef\u4ee5\u7684\uff09 gdb\u8def\u5f84\uff1a\"miDebuggerPath\":\"/usr/local/bin/aarch64-linux-gnu-gdb\" gdb\u76d1\u542c\u7aef\u53e3\uff1a\"miDebuggerServerAddress\": \"192.168.1.111:1234\",1234\u4e0e\u4e0a\u4e00\u5c0f\u8282\u4e2d\u7684Listen\u7aef\u53e3\u4e00\u81f4\uff01","title":"3.2\u3001\u914d\u7f6eVSCode Debug\u9009\u9879"},{"location":"VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#33","text":"\u7ecf\u8fc73.1\u30013.2\u7684\u914d\u7f6e\u5df2\u7ecf\u5b9e\u73b0\u4e86\u8c03\u8bd5\u7684\u524d\u7f6e\u6761\u4ef6\uff0c\u73b0\u53ea\u9700\u6309\u4e0bF5\u952e\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4e00\u952e\u8c03\u8bd5\u4e86\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a","title":"3.3\u3001\u4e00\u952e\u8c03\u8bd5"},{"location":"VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#34gdb","text":"\u5728\u7ec8\u7aef\u754c\u9762\u680f\uff0c\u5207\u6362\u81f3\u8c03\u8bd5\u63a7\u5236\u53f0;\u8f93\u5165\u547d\u4ee4\uff0c\u5982\uff1a -exec info registers \uff0c\u5373\u53ef\u67e5\u770b\u8c03\u8bd5\u8fc7\u4e2d\u7684\u7684\u5bc4\u5b58\u5668","title":"3.4\u3001\u66f4\u591aGDB\u8c03\u8bd5\u6280\u5de7"},{"location":"VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#4","text":"\u7ecf\u8fc7\u524d\u97620~3\u7684\u94fa\u57ab\uff0c\u6211\u4eec\u5df2\u7ecf\u5177\u5907\u4e86\u4ee5\u4e0b\u4e09\u4e2a\u6761\u4ef6\uff1a 1\u3001\u5b8c\u6574\u7684\u5185\u6838\uff08\u7f16\u8bd1\u73af\u5883\u3001\u8c03\u8bd5\u73af\uff09+\u5b8c\u6574\u7684Rootfs 2\u3001\u5b8c\u6574\u7684qemu\u73af\u5883,\u5305\u62ec\uff1a\u7f51\u7edc\u5171\u4eab\u3001\u6865\u63a5\u7b49\uff0c\u53ef\u4ee5\u968f\u65f6\u5c06\u4e3b\u673a\u7684\u6587\u4ef6\u5171\u4eab\u7ed9qemu\uff08\u672c\u5730\u7684kmodules\u6587\u4ef6\u5939\u300a---\u300b\u865a\u62df\u673a\u91cc\u9762\u7684mnt\u6587\u4ef6\u5939\uff09 3\u3001\u5b8c\u6574\u7684GDB\u8c03\u8bd5\u73af\u5883\uff0c\u53ef\u4ee5\u5b9e\u73b0\u5185\u6838\u5355\u6b65\u8c03\u8bd5 \u90a3\u4e48\uff0c\u9488\u5bf9\u4ee5\u4e0a\u6761\u4ef6\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u8c03\u8bd5\u6216\u8005\u53c2\u8003\u4e00\u4e2aLinux\u5e94\u7528\u7a0b\u5e8f\u5982\u4f55\u8bbf\u95ee\u5230\u5185\u6838\u7684\uff0c\u662f\u5426\u53ef\u4ee5\u5b8c\u6210\u5462\uff1f\u7b54\u6848\u662f\u53ef\u4ee5\u7684\uff01 \u8bf7\u770b\u4e0b\u9762\uff01","title":"4.\u5355\u6b65\u8c03\u8bd5\u5e94\u7528\u5c42+\u5185\u6838"},{"location":"VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#41-app","text":"\u5728 kmodules\u6587\u4ef6\u5939 \u91cc\u9762\u65b0\u5efa\u4e00\u4e2a test.c \u5185\u5bb9\u5982\u4e0b\uff1a #include <stdio.h> #include <stdlib.h> #include <unistd.h> #include <sys/types.h> #include <sys/stat.h> #include <fcntl.h> #include <errno.h> unsigned char readbuf[255]; int count = 0; int main(void) { int fd ; int retval; printf(\"hello world!\\n\"); fd = open(\"./README\",O_RDONLY); if ( fd == -1 ) { perror( \"open dht11 error\\n\" ) ; exit( -1 ) ; } printf( \"open ./README\\n\" ) ; sleep( 2 ) ; while( 1 ) { sleep( 1 ) ; if(count++ == 0) { printf(\"count=%d\\n\",count); } } close( fd ) ; return 0; }","title":"4.1 \u521b\u5efa\u7b80\u5355\u7684APP\u7a0b\u5e8f"},{"location":"VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#42","text":"\u8f93\u5165\u7f16\u8bd1\u547d\u4ee4\uff1a aarch64-linux-gnu-gcc test.c -o test \u5373\u53ef\u5728kmodules\u6587\u4ef6\u5939\u4e0b\u9762\u5f97\u5230\u4e00\u4e2a\u65b0\u7684test\u5e94\u7528\u7a0b\u5e8f\u3002 \u63a5\u7740\uff0c\u6309\u7b2c\u4e09\u8282\u505a\u6cd5\u8fdb\u5165\u53ef\u5355\u6b65\u8c03\u8bd5\u5185\u6838\u7684\u73af\u5883\u3002 \u6574\u4f53\u6f14\u793a\u6548\u679c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u53ea\u662f\u7b80\u5355\u7684\u6f14\u793a\uff0c\u5b9e\u73b0\u4ece\u5e94\u7528\u5c42\u5230\u5185\u6838\u5c42\u7684\u8c03\u7528\u8fc7\u7a0b\uff0c\u66f4\u6df1\u7684\u5e94\u7528\u53ef\u4ee5\u7ee7\u7eed\u53d1\u6398\u3002","title":"4.2 \u7f16\u8bd1&amp;\u8c03\u8bd5"},{"location":"VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#5modules","text":"","title":"5.\u5355\u6b65\u8c03\u8bd5modules+\u5185\u6838"},{"location":"VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#51","text":"\u5728\u4e3b\u673a kmodules\u6587\u4ef6\u5939 \u4e0b\u65b0\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u5185\u6838\u6a21\u5757\u7a0b\u5e8f hello_drv.c \u53ca\u5bf9\u5e94\u7684Makefile\u6587\u4ef6 \u5185\u6838\u6a21\u5757\u7a0b\u5e8f hello_drv.c \u5185\u5bb9\u793a\u4f8b\uff1a /* * 1 include files * 2 __init module_init() insmod * 3 __exit module_exit() rmmod * 4 GPL BSD Aeplli GPLv2 MIT * 5 module_license(GPL) */ #include <linux/init.h> #include <linux/module.h> #include <linux/fs.h> #include <linux/device.h> #include <asm/uaccess.h> #include <asm/io.h> #include <linux/device.h> struct class *hello_class; struct device * hello_dev; int hello_open(struct inode *inode, struct file *flips) { printk(\"--------------%s--------------\\n\",__FUNCTION__); return 0; } static ssize_t hello_write(struct file *file, const char __user *in, size_t size, loff_t *off) { printk(\"--------------%s--------------\\n\",__FUNCTION__); unsigned int buf = 88; copy_from_user(&buf, in ,size ); printk(\"write buf is : %d\\n\",buf); } static ssize_t hello_read(struct file *file, char __user *buf, size_t nbytes, loff_t *ppos) { printk(\"--------------%s--------------\\n\",__FUNCTION__); unsigned int a = 100; copy_to_user(buf,&a,sizeof(int)); } static int my_major = 0; const struct file_operations myfops={ .open = hello_open, .write= hello_write, .read = hello_read, }; static int __init hello_init(void) { printk(\"--------------%s--------------\\n\",__FUNCTION__);//app printf my_major = register_chrdev(0,\"hello\",&myfops); if(my_major <0) { printk(\"reg error!\\n\"); } else printk(\"my_major =%d\",my_major); hello_class = class_create(THIS_MODULE,\"hello_class\");//creat hello_class hello_dev = device_create(hello_class, NULL,MKDEV(my_major,0), NULL, \\ \"hello_dev\");//creat hello_dev--->>/dev/hello_dev return 0; } static void __exit hello_exit(void) { printk(\"--------------%s--------------\\n\",__FUNCTION__); device_destroy(hello_class,MKDEV(my_major,0)); class_destroy(hello_class); unregister_chrdev(my_major,\"hello\"); } module_init(hello_init); module_exit(hello_exit); MODULE_LICENSE(\"GPL\"); \u5185\u6838\u6a21\u5757\u7a0b\u5e8f hello_drv.c \u5185\u5bb9\u793a\u4f8b\uff1a ifeq ($(KERNELRELEASE),) export ARCH=arm64 export CROSS_COMPILE=aarch64-linux-gnu- KERNELDIR=/mnt/j/\u5954\u8dd1\u5427linux\u5185\u6838\u5165\u95e8\u7248/\u6700\u65b0\u6e90\u7801/runninglinuxkernel_4.0-rlk_basic #your kernel dirction NFS_DIR=$(KERNELDIR)/kmodules CUR_DIR := $(shell pwd) all : make -C $(KERNELDIR) M=$(CUR_DIR) modules install: cp -ranf *.ko $(NFS_DIR)/ clean : make -C $(KERNELDIR) M=$(CUR_DIR) clean .PHONY: modules install clean else obj-m := hello_drv.o endif \u7f16\u8bd1 \u6ce8\u610f\uff0c\u8fd9\u91cc\u7684\u7f16\u8bd1\u5e94\u8be5\u662f\u5728\u4e3b\u673a\u73af\u5883\u4e0b\uff0c\u5373WSL\u7684\u547d\u4ee4\u884c\u4e2d\uff1a make","title":"5.1\u3001\u7b80\u5355\u6d4b\u8bd5\u4ee3\u7801\u51c6\u5907"},{"location":"VSCode\u642d\u5efaLinuxKernel\u5355\u6b65\u8c03\u8bd5IDE\u73af\u5883/#52","text":"\u6211\u4eec\u77e5\u9053\u5f53\u4f7f\u7528 insmod \u65f6\uff0c\u4f1a\u8c03\u7528\u5bf9\u5e94\u7684 __init \u63a5\u53e3\uff0c\u800c\u5728\u672c\u4f8b\u4e2d\uff0c hello_init \u5c31\u4e3a\u5165\u53e3\u51fd\u6570\uff0c\u56e0\u6b64\u7b80\u5355\u6d4b\u8bd5\u4e00\u4e0b\uff0c\u5728\u5185\u6838\u4e2d\u627e\u5230 register_chrdev \u5bf9\u5e94\u7684\u63a5\u53e3\u5b9a\u4e49\uff0c\u5e76\u6253\u597d\u65ad\u70b9\uff0c\u5f85 insmod \u6267\u884c\u4e4b\u540e\uff0c\u89c2\u5bdf\u5185\u6838\u7684\u8fd0\u884c\u8fc7\u7a0b\u3002 \u5728\u5185\u6838\u4e2d\u6253\u4e0a\u76f8\u5e94\u65ad\u70b9\uff1a \u6f14\u793a\u6548\u679c\u52a8\u56fe\uff1a","title":"5.2\u3001\u5f00\u59cb\u8c03\u8bd5"},{"location":"[\u53f2\u4e0a\u6700\u8be6\u7ec6]VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE\uff08C-C++\uff09/","text":"VS Code\u642d\u5efaARM Linux Makefile\u5de5\u7a0bIDE\uff08C/C++\uff09[\u53f2\u4e0a\u6700\u8be6\u7ec6] VS Code\u642d\u5efaARM Linux Makefile\u5de5\u7a0bIDE\uff08C/C++\uff09[\u53f2\u4e0a\u6700\u8be6\u7ec6] 0.\u73af\u5883\u4ecb\u7ecd 1.\u7b80\u5355\u7684C/C++ Makefile\u5de5\u7a0b 1.1 \u6574\u4f53\u5de5\u7a0b\u9884\u89c8 1.2 add.c 1.3 sub.c 1.4 test.h 1.5 makefile 2. VS Code\u5f00\u53d1\u73af\u5883\u642d\u5efa 2.1 VS Code\u5bfc\u5165\u5de5\u7a0b 2.2 VS Code\u81ea\u5b9a\u4e49\u751f\u6210\u7f16\u8bd1\u4efb\u52a1 2.2.1 \u81f3\u7b80\u7684tasks.json\u53c2\u8003 2.2.2 \u6dfb\u52a0\u51fa\u9519\u4fe1\u606f\u7684tasks.json\u53c2\u8003 2.2 VS Code\u81ea\u5b9a\u4e49\u751f\u6210\u8c03\u8bd5\u4efb\u52a1 2.2.1 \u751f\u6210\u7684launch.json 2.2.2 launch.json\u91cd\u8981\u9879\u4fee\u6539\u6dfb\u52a0 2.2.3 launch.json\u53c2\u8003 3. \u7f16\u8bd1&\u8c03\u8bd5 3. 1 \u8c03\u8bd5\u524d\u7684\u51c6\u5907 3.2 \u5f00\u59cb\u8c03\u8bd5 4. \u6f14\u793a\u6548\u679c 0.\u73af\u5883\u4ecb\u7ecd \u4e3b\u673a\uff1aubuntu 18.04(LTS) \u5f00\u53d1\u677f\u4e3b\u63a7\uff1aRK3399(ARM 64bit) \u6216\u8005\u5176\u4ed6\u4efb\u610f\u4e00\u6b3e\u53ea\u6709\u5bf9\u5e94\u7684\u5de5\u5177\u94fe\u5373\u53ef OS:Linux version 4.4.143 \u5f00\u53d1\u677fIP\uff1a192.168.19.171 \u7f16\u8bd1\u5668\uff1aaarch64-linux-gnu-gcc (gcc version 7.3.0) \u8c03\u8bd5\u5668\uff1a\u4e3b\u673a\uff1aaarch64-linux-gnu-gdb (gcc version 7.3.0) \u5f00\u53d1\u677f\uff1agdbserver(7.3.0) VS Code\u7248\u672c \u7248\u672c 1.23.1 \u63d0\u4ea4 d0182c3417d225529c6d5ad24b7572815d0de9ac \u65e5\u671f 2018-05-10T16:04:33.747Z Shell 1.7.12 \u6e32\u67d3\u5668 58.0.3029.110 Node 7.9.0 \u67b6\u6784 x64 VS Code\u63d2\u4ef6\uff1aC/C++ \uff08\u5728\u6269\u5c55\u91cc\u9762\u6dfb\u52a0\u5373\u53ef\uff09 1.\u7b80\u5355\u7684C/C++ Makefile\u5de5\u7a0b 1.1 \u6574\u4f53\u5de5\u7a0b\u9884\u89c8 . \u251c\u2500\u2500 add.c \u251c\u2500\u2500 makefile \u251c\u2500\u2500 sub.c \u2514\u2500\u2500 test.h 1.2 add.c #include \"test.h\" #include <stdio.h> int add(int a, int b) { return a + b; } int main() { printf(\" 2 + 3 = %d\\n\", add(2, 3)); printf(\" 2 - 3 = %d\\n\", sub(2, 3)); return 1; } 1.3 sub.c #include \"test.h\" int sub(int a, int b) { return a - b; } 1.4 test.h #ifndef _TEST_H #define _TEST_H int add(int a, int b); int sub(int a, int b); #endif 1.5 makefile #\u677f\u5b50\u5bf9\u5e94\u7684\u4ea4\u53c9\u94fe\uff0c\u53ef\u4ee5\u6362\u6210\u5176\u4ed6\u5bf9\u5e94\u7684\u7248\u672c\u5373\u53ef CC=aarch64-linux-gnu-gcc test: add.o sub.o $(CC) -o test add.o sub.o add.o: add.c test.h $(CC) -c add.c sub.o: sub.c test.h $(CC) -c sub.c clean: rm -rf test rm -rf *.o 2. VS Code\u5f00\u53d1\u73af\u5883\u642d\u5efa VS Code\u7684\u7075\u6d3b\u6027\u5728\u4e8e\u53ef\u4ee5\u5b8c\u5168\u81ea\u5b9a\u4e49\u642d\u5efa\u4e00\u4e2a\u9002\u5408\u81ea\u5df1\u7528\u7684\u5f00\u53d1\u73af\u5883\uff0c\u5176\u4e2d\u5305\u62ec\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7f16\u8bd1\u4efb\u52a1\uff0c\u8c03\u8bd5\u4efb\u52a1\u3002 2.1 VS Code\u5bfc\u5165\u5de5\u7a0b \u76f4\u63a5\u6253\u5f00VS Code\uff0c\u518d\u9009\u62e9\u201c\u6253\u5f00\u6587\u4ef6\u5939\u201d\uff0c\u6253\u5f00\u5bf9\u5e94\u5de5\u7a0b\u7684\u6587\u4ef6\u5939\u5373\u53ef 2.2 VS Code\u81ea\u5b9a\u4e49\u751f\u6210\u7f16\u8bd1\u4efb\u52a1 \u5982\u4e0a\u9762\u63d0\u5230\uff0cVS Code\u7684\u7075\u6d3b\u6027\u5728\u4e8e\u81ea\u5b9a\u4e49\u7f16\u8bd1\u4efb\u52a1\uff0c\u800cVS Code\u4e2d\u7528\u4e8e\u63cf\u8ff0\u7f16\u8bd1\u4efb\u52a1\u7684\u5b9a\u4e49\u4e3a\uff1a tasks.json \uff0c\u6240\u4ee5\u81ea\u5b9a\u4e49\u7f16\u8bd1\u4efb\u52a1\u5c31\u662f\u7f16\u5199 tasks.json \u3002\u9996\u5148\uff0c\u7f16\u5199 tasks.json \u6709\u4ee5\u4e0b\u4e24\u79cd\u65b9\u6cd5\uff1a 1. \u5728View\u4e0b\u6253\u5f00\u547d\u4ee4\u9762\u677f(Command Pallette)\uff08\u5feb\u6377\u952e Ctrl+Shift+p \uff09\uff0c\u641c\u7d22Task\uff0c\u9009\u62e9Tasks:Configure Task\uff0c\u4e4b\u540e\u9009\u62e9Others\uff0c\u751f\u6210tasks.json\u6587\u4ef6\u3002 2. \u5728\u83dc\u5355\u680f\u4e0a\u9762\uff0c\u9009\u62e9\u4efb\u52a1(T)-->\u914d\u7f6e\u4efb\u52a1(C)...-->\u4f7f\u7528\u6a21\u677f\u521b\u5efatasks.json-->Others\uff0c\u751f\u6210tasks.json\u6587\u4ef6\u3002 2.2.1 \u81f3\u7b80\u7684 tasks.json \u53c2\u8003 { // See https://go.microsoft.com/fwlink/?LinkId=733558 // for the documentation about the tasks.json format \"version\": \"2.0.0\", \"tasks\": [ { \"label\": \"shell\",//\u4efb\u52a1\u540d\u79f0\uff0c\u548claunch.json\u4e2d\u4e00\u81f4\uff0c\u5373\u6267\u884c\u8fd9\u4e2a\u4efb\u52a1 \"type\": \"shell\",//\u4efb\u52a1\u7c7b\u578b\uff0c\u5373\u6267\u884c\u8be5\u4efb\u52a1\u7684\u7c7b\u578b\uff0c\u586bshell\u8868\u793a\u5728\u547d\u4ee4\u884c\u4e2d\u6267\u884c\u7684\u4efb\u52a1 \"command\": \"make\",//\u6267\u884c\u547d\u4ee4\u662fmake\uff0c\u5373\u8c03\u7528makefile\u8fdb\u884c\u7f16\u8bd1\u82e5\u76f4\u63a5\u4f7f\u7528gcc\u547d\u4ee4\u884c\uff0c\u66ff\u6362\u5373\u53ef \"problemMatcher\": [ \"$gcc\" ], \"group\": { \"kind\": \"build\", \"isDefault\": true } } ] } 2.2.2 \u6dfb\u52a0\u51fa\u9519\u4fe1\u606f\u7684 tasks.json \u53c2\u8003 { // See https://go.microsoft.com/fwlink/?LinkId=733558 // for the documentation about the tasks.json format \"version\": \"2.0.0\", \"tasks\": [ { \"label\": \"shell\", \"type\": \"shell\", \"command\": \"make\", //\u8fd9\u4e2a\u5b57\u6bb5\u662f\u53d1\u751f\u9519\u8bef\u65f6\uff0c\u4fe1\u606f\u7684\u5339\u914d \"problemMatcher\": { \"owner\": \"cpp\", \"fileLocation\": [ \"relative\", \"${workspaceFolder}\" ], \"pattern\": [ { \"regexp\": \"^([^\\\\s].*)$\", \"file\": 1 }, { \"regexp\": \"^\\\\s+(\\\\d+):(\\\\d+)\\\\s+(error|warning|info)\\\\s+(.*)\\\\s\\\\s+(.*)$\", \"line\": 1, \"column\": 2, \"severity\": 3, \"message\": 4, \"code\": 5, \"loop\": true } ] }, \"group\": { \"kind\": \"build\", \"isDefault\": true } } ] } 2.2 VS Code\u81ea\u5b9a\u4e49\u751f\u6210\u8c03\u8bd5\u4efb\u52a1 \u5982\u4e0a\u9762\u63d0\u5230\uff0cVS Code\u7684\u7075\u6d3b\u6027\u5728\u4e8e\u81ea\u5b9a\u4e49\u8c03\u8bd5\u4efb\u52a1\uff0c\u800cVS Code\u4e2d\u7528\u4e8e\u63cf\u8ff0\u8c03\u8bd5\u4efb\u52a1\u7684\u5b9a\u4e49\u4e3a\uff1a launch.json \uff0c\u6240\u4ee5\u81ea\u5b9a\u4e49\u7f16\u8bd1\u4efb\u52a1\u5c31\u662f\u7f16\u5199 launch.json \u3002\u9996\u5148\uff0c\u7f16\u5199 launch.json \u53ef\u4ee5\u53c2\u8003\u4ee5\u4e0b\u65b9\u6cd5\uff1a \u5728\u83dc\u5355\u680f\u4e0a\u9762\uff0c\u9009\u62e9\u8c03\u8bd5(D)-->\u6253\u5f00\u914d\u7f6e(C)...-->C++(GDB/LLDB)\uff0c\u751f\u6210 launch.json \u6587\u4ef6\u3002 2.2.1 \u751f\u6210\u7684 launch.json \u7cfb\u7edf\u81ea\u52a8\u751f\u6210\u7684\u6a21\u5757\u5982\u4e0b\uff1a { // \u4f7f\u7528 IntelliSense \u4e86\u89e3\u76f8\u5173\u5c5e\u6027\u3002 // \u60ac\u505c\u4ee5\u67e5\u770b\u73b0\u6709\u5c5e\u6027\u7684\u63cf\u8ff0\u3002 // \u6b32\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95ee: https://go.microsoft.com/fwlink/?linkid=830387 \"version\": \"0.2.0\", \"configurations\": [ { \"name\": \"(gdb) Launch\", \"type\": \"cppdbg\", \"request\": \"launch\", \"program\": \"enter program name, for example ${workspaceFolder}/a.out\", \"args\": [], \"stopAtEntry\": false, \"cwd\": \"${workspaceFolder}\", \"environment\": [], \"externalConsole\": true, \"MIMode\": \"gdb\", \"setupCommands\": [ { \"description\": \"Enable pretty-printing for gdb\", \"text\": \"-enable-pretty-printing\", \"ignoreFailures\": true } ] } ] } 2.2.2 launch.json \u91cd\u8981\u9879\u4fee\u6539\u6dfb\u52a0 \u53ef\u4ee5\u770b\u5230VS Code\u5e2e\u6211\u4eec\u751f\u6210\u7684\u6587\u4ef6\u91cc\u9762\u5df2\u7ecf\u5b8c\u6210\u5927\u90e8\u5206\u5de5\u4f5c\uff0c\u53ea\u9700\u6dfb\u52a0\u4fee\u6539\u76f8\u5e94\u7684\u5fc5\u8981\u9879\u5373\u53ef\uff1a \u4fee\u6539\u53ef\u6267\u884c\u6587\u4ef6\u7684\u4f4d\u7f6e\uff1a \"program\": \"enter program name, for example ${workspaceFolder}/a.out\", \u4fee\u6539\u6210\u6211\u4eecmake\u7f16\u8bd1\u5b8c\u6210\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5982\u672c\u6b21\u793a\u4f8b\u4e2d\u7684 \"program\": \"${workspaceFolder}/test\", \u4fee\u6539\u6240\u7528gdb\u8c03\u8bd5\u5668\u6240\u5728\u7684\u4f4d\u7f6e\uff0c\u6dfb\u52a0\u9009\u9879\uff1a \"miDebuggerPath\":\"/usr/bin/aarch64-linux-gnu-gdb\", \u5efa\u8bae\u6700\u597d\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84\uff0c\u5982\u672c\u4f8b\u6240\u793a \u4fee\u6539\u76ee\u6807\u5f00\u53d1\u677f\u7684IP\u548c\u7aef\u53e3\uff0c\u6dfb\u52a0\u9009\u9879\uff1a \"miDebuggerServerAddress\": \"192.168.19.171:10000\", \u5982\u672c\u4f8b\u6240\u793a \u5176\u4ed6\u4fee\u6539\uff1a \"preLaunchTask\":\"shell\", \u4e0e\u4e4b\u524dtasks.json\u4e2d\u7684\u4efb\u52a1\u540d\u79f0\u8981\u4e00\u81f4\uff0c\u8868\u793a\u5728\u8c03\u8bd5\u524d\u6267\u884c\u7684\u524d\u7f6e\u4efb\u52a1\uff0c\u5f53\u7136\uff0c\u9664\u4e86\u6267\u884cmake\uff0c\u8fd8\u53ef\u4ee5\u6267\u884c\u5176\u4ed6\u7cfb\u7edf\u547d\u4ee4\uff0c\u5982\u5c06\u7f16\u8bd1\u751f\u6210\u6587\u4ef6\u590d\u5236\u5230\u76ee\u6807\u5f00\u53d1\u677f\u4e0a\u7b49\u7b49\u3002\u3002\u3002 2.2.3 launch.json \u53c2\u8003 { // \u4f7f\u7528 IntelliSense \u4e86\u89e3\u76f8\u5173\u5c5e\u6027\u3002 // \u60ac\u505c\u4ee5\u67e5\u770b\u73b0\u6709\u5c5e\u6027\u7684\u63cf\u8ff0\u3002 // \u6b32\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95ee: https://go.microsoft.com/fwlink/?linkid=830387 \"version\": \"0.2.0\", \"configurations\": [ { \"name\": \"(gdb) Launch\", \"type\": \"cppdbg\", \"request\": \"launch\", \"program\": \"${workspaceFolder}/test\", \"args\": [], \"stopAtEntry\": true, \"cwd\": \"${workspaceFolder}\", \"environment\": [], \"externalConsole\": true, \"MIMode\": \"gdb\", \"miDebuggerPath\":\"/usr/bin/aarch64-linux-gnu-gdb\", \"miDebuggerServerAddress\": \"192.168.19.171:10000\", \"preLaunchTask\":\"shell\", \"setupCommands\": [ { \"description\": \"Enable pretty-printing for gdb\", \"text\": \"-enable-pretty-printing\", \"ignoreFailures\": true } ] } ] } 3. \u7f16\u8bd1&\u8c03\u8bd5 3. 1 \u8c03\u8bd5\u524d\u7684\u51c6\u5907 \u4e3a\u4e86\u4f7f\u5f00\u53d1\u4e3b\u673a\u4e0a\u7684\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u53ef\u4ee5\u590d\u5236\u5230\u76ee\u6807\u5f00\u53d1\u677f\u4e0a\uff0c\u53ef\u4ee5\u901a\u8fc7\u7f51\u7edc\u7684\u5f62\u5f0f\u8fdb\u884c\u4f20\u8f93\uff0c\u6bd5\u7adfGDB\u4e5f\u662f\u57fa\u4e8e\u7f51\u7edc\u7684\uff0c\u8fd9\u6837\u5c31\u66f4\u65b9\u4fbf\u4e9b\uff0c\u4f8b\u5982\u672c\u6587\u6240\u7528\u7684\u65b9\u5f0fNFS\uff1a\u5df2\u77e5\u5728\u5f00\u53d1\u4e3b\u673a\u4e0a\u5df2\u7ecf\u6709NFS\u670d\u52a1\u5668\u4e86\uff0c\u76ee\u5f55\u4e3a /home/dl/share/nfs \uff0cIP\u5730\u5740\u4e3a\uff1a192.168.19.188 \u3002\u90a3\u4e48\u53ea\u9700\u8981\u5728\u5f00\u53d1\u677f\u4e0a\u6302\u8f7dNFS\u670d\u52a1\u5668\u5373\u53ef\uff0c\u7528\u5982\u4e0b\u547d\u4ee4\uff1a mount -t nfs -o nolock 192.168.19.188:/home/dl/share/nfs /mnt \u5c06PC\u7684NFS\u76ee\u5f55\u6302\u8f7d\u5230\u5f00\u53d1\u677f\u7684mnt\u76ee\u5f55 \u3002 \u56e0\u6b64\uff0c\u9700\u8981\u6bcf\u6b21\u5c06\u751f\u6210\u7684\u76ee\u6807\u6587\u4ef6\u590d\u5236\u5230nfs\u76ee\u5f55\u4e0b\uff0c\u6709\u5f88\u591a\u79cd\u65b9\u5f0f\uff0c\u53ef\u4ee5\u624b\u52a8\u7528\u547d\u4ee4\u8fdb\u884c\uff0c\u56e0\u6b64VS Code\u4e2d\u5df2\u7ecf\u96c6\u6210\u4e86\u7ec8\u7aef\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528\uff0c\u53c8\u6216\u8005\u4fee\u6539makefile\uff0c\u6dfb\u52a0make install \u4e4b\u7c7b\u7684\u547d\u4ee4\uff0c\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u65b9\u6cd5\u6709\u5f88\u591a\uff0c\u4e3e\u4e2a\u7b80\u964b\u7684\u4f8b\u5b50\uff08makefile\uff09\uff1a install: cp -raf test /home/dl/share/nfs \u7136\u540e\uff0c\u4fee\u6539 tasks.josn \uff0c\u8ba9\u5b83\u6267\u884c make \u4e4b\u540e\u518d\u6267\u884c make install \uff1a ............. \"tasks\": [ { \"label\": \"shell\", \"type\": \"shell\", \"command\": \"make;make install\", ............. 3.2 \u5f00\u59cb\u8c03\u8bd5 VS Code\u8fd8\u6709\u4e00\u4e2a\u597d\u5904\u5c31\u662f\u96c6\u6210\u4e86linux sh\u7ec8\u7aef\uff0c\u4f7f\u7528VS Code\u7ec8\u7aef\u754c\u9762\uff0c\u5728\u91cc\u9762\u8fde\u5f00\u53d1\u677f\u7684SSH\uff0c\u5c31\u4e0d\u518d\u9700\u8981\u5728\u8c03\u8bd5\u7684\u8fc7\u7a0b\u4e2d\u4e0d\u65ad\u7684\u8fdb\u884c\u754c\u9762\u5207\u6362\u4e86\uff0c\u6309\u4e0a\u6587\u6240\u63d0\u5f00\u53d1\u677f\u7684IP\u4e3a\uff1a192.168.19.171,\u56e0\u6b64\uff0c\u5728VS Code\u4e2d\u7528SSH\u76f8\u8fde\u5373\u53ef\uff1a \u6309\u524d\u9762\u7684\u6b65\u9aa4\uff0c\u5df2\u7ecf\u53ef\u4ee5\u5b9e\u73b0\u5728\u5f00\u53d1\u677f\u7684/mnt\u76ee\u5f55\u4e0b\u9762\u5b9e\u73b0\u6570\u636e\u7a0b\u5e8f\u7684\u5171\u4eab\u4e86\uff0c\u5728\u5f00\u53d1\u677f\u7684/mnt\u76ee\u5f55\u4e0b\u9762\u8f93\u5165\u547d\u4ee4\uff1a gdbserver :10000 test \u5373\u53ef\u5b9e\u73b0\u5728\u5f00\u53d1\u677f\u76d1\u542c 10000 \u7aef\u53e3\u7684GDB\u8c03\u8bd5\u4e8b\u4ef6\u4e86\u3002 \u5728VS Code\u4e0b\u9762\u6309\u4e0b\u5feb\u6377\u952e\uff1a Ctrl+Shift+B \u5373\u53ef\u5b9e\u73b0\u8c03\u7528makefile\u5bf9\u6574\u4e2a\u5de5\u7a0b\u8fdb\u884cmake \u5e76\u4e14make install \uff0c\u6548\u679c\u5982\u4e0b\uff1a 4. \u6f14\u793a\u6548\u679c","title":"VS Code\u642d\u5efaARM Linux Makefile\u5de5\u7a0bIDE\uff08C/C++\uff09[\u53f2\u4e0a\u6700\u8be6\u7ec6]"},{"location":"[\u53f2\u4e0a\u6700\u8be6\u7ec6]VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE\uff08C-C++\uff09/#vs-codearm-linux-makefileidecc","text":"VS Code\u642d\u5efaARM Linux Makefile\u5de5\u7a0bIDE\uff08C/C++\uff09[\u53f2\u4e0a\u6700\u8be6\u7ec6] 0.\u73af\u5883\u4ecb\u7ecd 1.\u7b80\u5355\u7684C/C++ Makefile\u5de5\u7a0b 1.1 \u6574\u4f53\u5de5\u7a0b\u9884\u89c8 1.2 add.c 1.3 sub.c 1.4 test.h 1.5 makefile 2. VS Code\u5f00\u53d1\u73af\u5883\u642d\u5efa 2.1 VS Code\u5bfc\u5165\u5de5\u7a0b 2.2 VS Code\u81ea\u5b9a\u4e49\u751f\u6210\u7f16\u8bd1\u4efb\u52a1 2.2.1 \u81f3\u7b80\u7684tasks.json\u53c2\u8003 2.2.2 \u6dfb\u52a0\u51fa\u9519\u4fe1\u606f\u7684tasks.json\u53c2\u8003 2.2 VS Code\u81ea\u5b9a\u4e49\u751f\u6210\u8c03\u8bd5\u4efb\u52a1 2.2.1 \u751f\u6210\u7684launch.json 2.2.2 launch.json\u91cd\u8981\u9879\u4fee\u6539\u6dfb\u52a0 2.2.3 launch.json\u53c2\u8003 3. \u7f16\u8bd1&\u8c03\u8bd5 3. 1 \u8c03\u8bd5\u524d\u7684\u51c6\u5907 3.2 \u5f00\u59cb\u8c03\u8bd5 4. \u6f14\u793a\u6548\u679c","title":"VS Code\u642d\u5efaARM Linux Makefile\u5de5\u7a0bIDE\uff08C/C++\uff09[\u53f2\u4e0a\u6700\u8be6\u7ec6]"},{"location":"[\u53f2\u4e0a\u6700\u8be6\u7ec6]VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE\uff08C-C++\uff09/#0","text":"\u4e3b\u673a\uff1aubuntu 18.04(LTS) \u5f00\u53d1\u677f\u4e3b\u63a7\uff1aRK3399(ARM 64bit) \u6216\u8005\u5176\u4ed6\u4efb\u610f\u4e00\u6b3e\u53ea\u6709\u5bf9\u5e94\u7684\u5de5\u5177\u94fe\u5373\u53ef OS:Linux version 4.4.143 \u5f00\u53d1\u677fIP\uff1a192.168.19.171 \u7f16\u8bd1\u5668\uff1aaarch64-linux-gnu-gcc (gcc version 7.3.0) \u8c03\u8bd5\u5668\uff1a\u4e3b\u673a\uff1aaarch64-linux-gnu-gdb (gcc version 7.3.0) \u5f00\u53d1\u677f\uff1agdbserver(7.3.0) VS Code\u7248\u672c \u7248\u672c 1.23.1 \u63d0\u4ea4 d0182c3417d225529c6d5ad24b7572815d0de9ac \u65e5\u671f 2018-05-10T16:04:33.747Z Shell 1.7.12 \u6e32\u67d3\u5668 58.0.3029.110 Node 7.9.0 \u67b6\u6784 x64 VS Code\u63d2\u4ef6\uff1aC/C++ \uff08\u5728\u6269\u5c55\u91cc\u9762\u6dfb\u52a0\u5373\u53ef\uff09","title":"0.\u73af\u5883\u4ecb\u7ecd"},{"location":"[\u53f2\u4e0a\u6700\u8be6\u7ec6]VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE\uff08C-C++\uff09/#1cc-makefile","text":"","title":"1.\u7b80\u5355\u7684C/C++ Makefile\u5de5\u7a0b"},{"location":"[\u53f2\u4e0a\u6700\u8be6\u7ec6]VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE\uff08C-C++\uff09/#11","text":". \u251c\u2500\u2500 add.c \u251c\u2500\u2500 makefile \u251c\u2500\u2500 sub.c \u2514\u2500\u2500 test.h","title":"1.1 \u6574\u4f53\u5de5\u7a0b\u9884\u89c8"},{"location":"[\u53f2\u4e0a\u6700\u8be6\u7ec6]VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE\uff08C-C++\uff09/#12-addc","text":"#include \"test.h\" #include <stdio.h> int add(int a, int b) { return a + b; } int main() { printf(\" 2 + 3 = %d\\n\", add(2, 3)); printf(\" 2 - 3 = %d\\n\", sub(2, 3)); return 1; }","title":"1.2 add.c"},{"location":"[\u53f2\u4e0a\u6700\u8be6\u7ec6]VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE\uff08C-C++\uff09/#13-subc","text":"#include \"test.h\" int sub(int a, int b) { return a - b; }","title":"1.3  sub.c"},{"location":"[\u53f2\u4e0a\u6700\u8be6\u7ec6]VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE\uff08C-C++\uff09/#14-testh","text":"#ifndef _TEST_H #define _TEST_H int add(int a, int b); int sub(int a, int b); #endif","title":"1.4  test.h"},{"location":"[\u53f2\u4e0a\u6700\u8be6\u7ec6]VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE\uff08C-C++\uff09/#15-makefile","text":"#\u677f\u5b50\u5bf9\u5e94\u7684\u4ea4\u53c9\u94fe\uff0c\u53ef\u4ee5\u6362\u6210\u5176\u4ed6\u5bf9\u5e94\u7684\u7248\u672c\u5373\u53ef CC=aarch64-linux-gnu-gcc test: add.o sub.o $(CC) -o test add.o sub.o add.o: add.c test.h $(CC) -c add.c sub.o: sub.c test.h $(CC) -c sub.c clean: rm -rf test rm -rf *.o","title":"1.5  makefile"},{"location":"[\u53f2\u4e0a\u6700\u8be6\u7ec6]VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE\uff08C-C++\uff09/#2-vs-code","text":"VS Code\u7684\u7075\u6d3b\u6027\u5728\u4e8e\u53ef\u4ee5\u5b8c\u5168\u81ea\u5b9a\u4e49\u642d\u5efa\u4e00\u4e2a\u9002\u5408\u81ea\u5df1\u7528\u7684\u5f00\u53d1\u73af\u5883\uff0c\u5176\u4e2d\u5305\u62ec\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7f16\u8bd1\u4efb\u52a1\uff0c\u8c03\u8bd5\u4efb\u52a1\u3002","title":"2. VS Code\u5f00\u53d1\u73af\u5883\u642d\u5efa"},{"location":"[\u53f2\u4e0a\u6700\u8be6\u7ec6]VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE\uff08C-C++\uff09/#21-vs-code","text":"\u76f4\u63a5\u6253\u5f00VS Code\uff0c\u518d\u9009\u62e9\u201c\u6253\u5f00\u6587\u4ef6\u5939\u201d\uff0c\u6253\u5f00\u5bf9\u5e94\u5de5\u7a0b\u7684\u6587\u4ef6\u5939\u5373\u53ef","title":"2.1  VS Code\u5bfc\u5165\u5de5\u7a0b"},{"location":"[\u53f2\u4e0a\u6700\u8be6\u7ec6]VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE\uff08C-C++\uff09/#22-vs-code","text":"\u5982\u4e0a\u9762\u63d0\u5230\uff0cVS Code\u7684\u7075\u6d3b\u6027\u5728\u4e8e\u81ea\u5b9a\u4e49\u7f16\u8bd1\u4efb\u52a1\uff0c\u800cVS Code\u4e2d\u7528\u4e8e\u63cf\u8ff0\u7f16\u8bd1\u4efb\u52a1\u7684\u5b9a\u4e49\u4e3a\uff1a tasks.json \uff0c\u6240\u4ee5\u81ea\u5b9a\u4e49\u7f16\u8bd1\u4efb\u52a1\u5c31\u662f\u7f16\u5199 tasks.json \u3002\u9996\u5148\uff0c\u7f16\u5199 tasks.json \u6709\u4ee5\u4e0b\u4e24\u79cd\u65b9\u6cd5\uff1a 1. \u5728View\u4e0b\u6253\u5f00\u547d\u4ee4\u9762\u677f(Command Pallette)\uff08\u5feb\u6377\u952e Ctrl+Shift+p \uff09\uff0c\u641c\u7d22Task\uff0c\u9009\u62e9Tasks:Configure Task\uff0c\u4e4b\u540e\u9009\u62e9Others\uff0c\u751f\u6210tasks.json\u6587\u4ef6\u3002 2. \u5728\u83dc\u5355\u680f\u4e0a\u9762\uff0c\u9009\u62e9\u4efb\u52a1(T)-->\u914d\u7f6e\u4efb\u52a1(C)...-->\u4f7f\u7528\u6a21\u677f\u521b\u5efatasks.json-->Others\uff0c\u751f\u6210tasks.json\u6587\u4ef6\u3002","title":"2.2  VS Code\u81ea\u5b9a\u4e49\u751f\u6210\u7f16\u8bd1\u4efb\u52a1"},{"location":"[\u53f2\u4e0a\u6700\u8be6\u7ec6]VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE\uff08C-C++\uff09/#221-tasksjson","text":"{ // See https://go.microsoft.com/fwlink/?LinkId=733558 // for the documentation about the tasks.json format \"version\": \"2.0.0\", \"tasks\": [ { \"label\": \"shell\",//\u4efb\u52a1\u540d\u79f0\uff0c\u548claunch.json\u4e2d\u4e00\u81f4\uff0c\u5373\u6267\u884c\u8fd9\u4e2a\u4efb\u52a1 \"type\": \"shell\",//\u4efb\u52a1\u7c7b\u578b\uff0c\u5373\u6267\u884c\u8be5\u4efb\u52a1\u7684\u7c7b\u578b\uff0c\u586bshell\u8868\u793a\u5728\u547d\u4ee4\u884c\u4e2d\u6267\u884c\u7684\u4efb\u52a1 \"command\": \"make\",//\u6267\u884c\u547d\u4ee4\u662fmake\uff0c\u5373\u8c03\u7528makefile\u8fdb\u884c\u7f16\u8bd1\u82e5\u76f4\u63a5\u4f7f\u7528gcc\u547d\u4ee4\u884c\uff0c\u66ff\u6362\u5373\u53ef \"problemMatcher\": [ \"$gcc\" ], \"group\": { \"kind\": \"build\", \"isDefault\": true } } ] }","title":"2.2.1 \u81f3\u7b80\u7684tasks.json\u53c2\u8003"},{"location":"[\u53f2\u4e0a\u6700\u8be6\u7ec6]VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE\uff08C-C++\uff09/#222-tasksjson","text":"{ // See https://go.microsoft.com/fwlink/?LinkId=733558 // for the documentation about the tasks.json format \"version\": \"2.0.0\", \"tasks\": [ { \"label\": \"shell\", \"type\": \"shell\", \"command\": \"make\", //\u8fd9\u4e2a\u5b57\u6bb5\u662f\u53d1\u751f\u9519\u8bef\u65f6\uff0c\u4fe1\u606f\u7684\u5339\u914d \"problemMatcher\": { \"owner\": \"cpp\", \"fileLocation\": [ \"relative\", \"${workspaceFolder}\" ], \"pattern\": [ { \"regexp\": \"^([^\\\\s].*)$\", \"file\": 1 }, { \"regexp\": \"^\\\\s+(\\\\d+):(\\\\d+)\\\\s+(error|warning|info)\\\\s+(.*)\\\\s\\\\s+(.*)$\", \"line\": 1, \"column\": 2, \"severity\": 3, \"message\": 4, \"code\": 5, \"loop\": true } ] }, \"group\": { \"kind\": \"build\", \"isDefault\": true } } ] }","title":"2.2.2 \u6dfb\u52a0\u51fa\u9519\u4fe1\u606f\u7684tasks.json\u53c2\u8003"},{"location":"[\u53f2\u4e0a\u6700\u8be6\u7ec6]VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE\uff08C-C++\uff09/#22-vs-code_1","text":"\u5982\u4e0a\u9762\u63d0\u5230\uff0cVS Code\u7684\u7075\u6d3b\u6027\u5728\u4e8e\u81ea\u5b9a\u4e49\u8c03\u8bd5\u4efb\u52a1\uff0c\u800cVS Code\u4e2d\u7528\u4e8e\u63cf\u8ff0\u8c03\u8bd5\u4efb\u52a1\u7684\u5b9a\u4e49\u4e3a\uff1a launch.json \uff0c\u6240\u4ee5\u81ea\u5b9a\u4e49\u7f16\u8bd1\u4efb\u52a1\u5c31\u662f\u7f16\u5199 launch.json \u3002\u9996\u5148\uff0c\u7f16\u5199 launch.json \u53ef\u4ee5\u53c2\u8003\u4ee5\u4e0b\u65b9\u6cd5\uff1a \u5728\u83dc\u5355\u680f\u4e0a\u9762\uff0c\u9009\u62e9\u8c03\u8bd5(D)-->\u6253\u5f00\u914d\u7f6e(C)...-->C++(GDB/LLDB)\uff0c\u751f\u6210 launch.json \u6587\u4ef6\u3002","title":"2.2  VS Code\u81ea\u5b9a\u4e49\u751f\u6210\u8c03\u8bd5\u4efb\u52a1"},{"location":"[\u53f2\u4e0a\u6700\u8be6\u7ec6]VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE\uff08C-C++\uff09/#221-launchjson","text":"\u7cfb\u7edf\u81ea\u52a8\u751f\u6210\u7684\u6a21\u5757\u5982\u4e0b\uff1a { // \u4f7f\u7528 IntelliSense \u4e86\u89e3\u76f8\u5173\u5c5e\u6027\u3002 // \u60ac\u505c\u4ee5\u67e5\u770b\u73b0\u6709\u5c5e\u6027\u7684\u63cf\u8ff0\u3002 // \u6b32\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95ee: https://go.microsoft.com/fwlink/?linkid=830387 \"version\": \"0.2.0\", \"configurations\": [ { \"name\": \"(gdb) Launch\", \"type\": \"cppdbg\", \"request\": \"launch\", \"program\": \"enter program name, for example ${workspaceFolder}/a.out\", \"args\": [], \"stopAtEntry\": false, \"cwd\": \"${workspaceFolder}\", \"environment\": [], \"externalConsole\": true, \"MIMode\": \"gdb\", \"setupCommands\": [ { \"description\": \"Enable pretty-printing for gdb\", \"text\": \"-enable-pretty-printing\", \"ignoreFailures\": true } ] } ] }","title":"2.2.1 \u751f\u6210\u7684launch.json"},{"location":"[\u53f2\u4e0a\u6700\u8be6\u7ec6]VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE\uff08C-C++\uff09/#222-launchjson","text":"\u53ef\u4ee5\u770b\u5230VS Code\u5e2e\u6211\u4eec\u751f\u6210\u7684\u6587\u4ef6\u91cc\u9762\u5df2\u7ecf\u5b8c\u6210\u5927\u90e8\u5206\u5de5\u4f5c\uff0c\u53ea\u9700\u6dfb\u52a0\u4fee\u6539\u76f8\u5e94\u7684\u5fc5\u8981\u9879\u5373\u53ef\uff1a \u4fee\u6539\u53ef\u6267\u884c\u6587\u4ef6\u7684\u4f4d\u7f6e\uff1a \"program\": \"enter program name, for example ${workspaceFolder}/a.out\", \u4fee\u6539\u6210\u6211\u4eecmake\u7f16\u8bd1\u5b8c\u6210\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5982\u672c\u6b21\u793a\u4f8b\u4e2d\u7684 \"program\": \"${workspaceFolder}/test\", \u4fee\u6539\u6240\u7528gdb\u8c03\u8bd5\u5668\u6240\u5728\u7684\u4f4d\u7f6e\uff0c\u6dfb\u52a0\u9009\u9879\uff1a \"miDebuggerPath\":\"/usr/bin/aarch64-linux-gnu-gdb\", \u5efa\u8bae\u6700\u597d\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84\uff0c\u5982\u672c\u4f8b\u6240\u793a \u4fee\u6539\u76ee\u6807\u5f00\u53d1\u677f\u7684IP\u548c\u7aef\u53e3\uff0c\u6dfb\u52a0\u9009\u9879\uff1a \"miDebuggerServerAddress\": \"192.168.19.171:10000\", \u5982\u672c\u4f8b\u6240\u793a \u5176\u4ed6\u4fee\u6539\uff1a \"preLaunchTask\":\"shell\", \u4e0e\u4e4b\u524dtasks.json\u4e2d\u7684\u4efb\u52a1\u540d\u79f0\u8981\u4e00\u81f4\uff0c\u8868\u793a\u5728\u8c03\u8bd5\u524d\u6267\u884c\u7684\u524d\u7f6e\u4efb\u52a1\uff0c\u5f53\u7136\uff0c\u9664\u4e86\u6267\u884cmake\uff0c\u8fd8\u53ef\u4ee5\u6267\u884c\u5176\u4ed6\u7cfb\u7edf\u547d\u4ee4\uff0c\u5982\u5c06\u7f16\u8bd1\u751f\u6210\u6587\u4ef6\u590d\u5236\u5230\u76ee\u6807\u5f00\u53d1\u677f\u4e0a\u7b49\u7b49\u3002\u3002\u3002","title":"2.2.2 launch.json\u91cd\u8981\u9879\u4fee\u6539\u6dfb\u52a0"},{"location":"[\u53f2\u4e0a\u6700\u8be6\u7ec6]VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE\uff08C-C++\uff09/#223-launchjson","text":"{ // \u4f7f\u7528 IntelliSense \u4e86\u89e3\u76f8\u5173\u5c5e\u6027\u3002 // \u60ac\u505c\u4ee5\u67e5\u770b\u73b0\u6709\u5c5e\u6027\u7684\u63cf\u8ff0\u3002 // \u6b32\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95ee: https://go.microsoft.com/fwlink/?linkid=830387 \"version\": \"0.2.0\", \"configurations\": [ { \"name\": \"(gdb) Launch\", \"type\": \"cppdbg\", \"request\": \"launch\", \"program\": \"${workspaceFolder}/test\", \"args\": [], \"stopAtEntry\": true, \"cwd\": \"${workspaceFolder}\", \"environment\": [], \"externalConsole\": true, \"MIMode\": \"gdb\", \"miDebuggerPath\":\"/usr/bin/aarch64-linux-gnu-gdb\", \"miDebuggerServerAddress\": \"192.168.19.171:10000\", \"preLaunchTask\":\"shell\", \"setupCommands\": [ { \"description\": \"Enable pretty-printing for gdb\", \"text\": \"-enable-pretty-printing\", \"ignoreFailures\": true } ] } ] }","title":"2.2.3 launch.json\u53c2\u8003"},{"location":"[\u53f2\u4e0a\u6700\u8be6\u7ec6]VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE\uff08C-C++\uff09/#3","text":"","title":"3. \u7f16\u8bd1&amp;\u8c03\u8bd5"},{"location":"[\u53f2\u4e0a\u6700\u8be6\u7ec6]VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE\uff08C-C++\uff09/#3-1","text":"\u4e3a\u4e86\u4f7f\u5f00\u53d1\u4e3b\u673a\u4e0a\u7684\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u53ef\u4ee5\u590d\u5236\u5230\u76ee\u6807\u5f00\u53d1\u677f\u4e0a\uff0c\u53ef\u4ee5\u901a\u8fc7\u7f51\u7edc\u7684\u5f62\u5f0f\u8fdb\u884c\u4f20\u8f93\uff0c\u6bd5\u7adfGDB\u4e5f\u662f\u57fa\u4e8e\u7f51\u7edc\u7684\uff0c\u8fd9\u6837\u5c31\u66f4\u65b9\u4fbf\u4e9b\uff0c\u4f8b\u5982\u672c\u6587\u6240\u7528\u7684\u65b9\u5f0fNFS\uff1a\u5df2\u77e5\u5728\u5f00\u53d1\u4e3b\u673a\u4e0a\u5df2\u7ecf\u6709NFS\u670d\u52a1\u5668\u4e86\uff0c\u76ee\u5f55\u4e3a /home/dl/share/nfs \uff0cIP\u5730\u5740\u4e3a\uff1a192.168.19.188 \u3002\u90a3\u4e48\u53ea\u9700\u8981\u5728\u5f00\u53d1\u677f\u4e0a\u6302\u8f7dNFS\u670d\u52a1\u5668\u5373\u53ef\uff0c\u7528\u5982\u4e0b\u547d\u4ee4\uff1a mount -t nfs -o nolock 192.168.19.188:/home/dl/share/nfs /mnt \u5c06PC\u7684NFS\u76ee\u5f55\u6302\u8f7d\u5230\u5f00\u53d1\u677f\u7684mnt\u76ee\u5f55 \u3002 \u56e0\u6b64\uff0c\u9700\u8981\u6bcf\u6b21\u5c06\u751f\u6210\u7684\u76ee\u6807\u6587\u4ef6\u590d\u5236\u5230nfs\u76ee\u5f55\u4e0b\uff0c\u6709\u5f88\u591a\u79cd\u65b9\u5f0f\uff0c\u53ef\u4ee5\u624b\u52a8\u7528\u547d\u4ee4\u8fdb\u884c\uff0c\u56e0\u6b64VS Code\u4e2d\u5df2\u7ecf\u96c6\u6210\u4e86\u7ec8\u7aef\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528\uff0c\u53c8\u6216\u8005\u4fee\u6539makefile\uff0c\u6dfb\u52a0make install \u4e4b\u7c7b\u7684\u547d\u4ee4\uff0c\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u65b9\u6cd5\u6709\u5f88\u591a\uff0c\u4e3e\u4e2a\u7b80\u964b\u7684\u4f8b\u5b50\uff08makefile\uff09\uff1a install: cp -raf test /home/dl/share/nfs \u7136\u540e\uff0c\u4fee\u6539 tasks.josn \uff0c\u8ba9\u5b83\u6267\u884c make \u4e4b\u540e\u518d\u6267\u884c make install \uff1a ............. \"tasks\": [ { \"label\": \"shell\", \"type\": \"shell\", \"command\": \"make;make install\", .............","title":"3. 1 \u8c03\u8bd5\u524d\u7684\u51c6\u5907"},{"location":"[\u53f2\u4e0a\u6700\u8be6\u7ec6]VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE\uff08C-C++\uff09/#32","text":"VS Code\u8fd8\u6709\u4e00\u4e2a\u597d\u5904\u5c31\u662f\u96c6\u6210\u4e86linux sh\u7ec8\u7aef\uff0c\u4f7f\u7528VS Code\u7ec8\u7aef\u754c\u9762\uff0c\u5728\u91cc\u9762\u8fde\u5f00\u53d1\u677f\u7684SSH\uff0c\u5c31\u4e0d\u518d\u9700\u8981\u5728\u8c03\u8bd5\u7684\u8fc7\u7a0b\u4e2d\u4e0d\u65ad\u7684\u8fdb\u884c\u754c\u9762\u5207\u6362\u4e86\uff0c\u6309\u4e0a\u6587\u6240\u63d0\u5f00\u53d1\u677f\u7684IP\u4e3a\uff1a192.168.19.171,\u56e0\u6b64\uff0c\u5728VS Code\u4e2d\u7528SSH\u76f8\u8fde\u5373\u53ef\uff1a \u6309\u524d\u9762\u7684\u6b65\u9aa4\uff0c\u5df2\u7ecf\u53ef\u4ee5\u5b9e\u73b0\u5728\u5f00\u53d1\u677f\u7684/mnt\u76ee\u5f55\u4e0b\u9762\u5b9e\u73b0\u6570\u636e\u7a0b\u5e8f\u7684\u5171\u4eab\u4e86\uff0c\u5728\u5f00\u53d1\u677f\u7684/mnt\u76ee\u5f55\u4e0b\u9762\u8f93\u5165\u547d\u4ee4\uff1a gdbserver :10000 test \u5373\u53ef\u5b9e\u73b0\u5728\u5f00\u53d1\u677f\u76d1\u542c 10000 \u7aef\u53e3\u7684GDB\u8c03\u8bd5\u4e8b\u4ef6\u4e86\u3002 \u5728VS Code\u4e0b\u9762\u6309\u4e0b\u5feb\u6377\u952e\uff1a Ctrl+Shift+B \u5373\u53ef\u5b9e\u73b0\u8c03\u7528makefile\u5bf9\u6574\u4e2a\u5de5\u7a0b\u8fdb\u884cmake \u5e76\u4e14make install \uff0c\u6548\u679c\u5982\u4e0b\uff1a","title":"3.2 \u5f00\u59cb\u8c03\u8bd5"},{"location":"[\u53f2\u4e0a\u6700\u8be6\u7ec6]VSCode\u642d\u5efaARMLinuxMakefile\u5de5\u7a0bIDE\uff08C-C++\uff09/#4","text":"","title":"4. \u6f14\u793a\u6548\u679c"},{"location":"\u4e09\u79cd\u603b\u7ebf\u7684\u6a2a\u5411\u5bf9\u6bd4\u8868/","text":"\u4ece\u4e0a\u8ff0\u8868\u683c\u4e2d\uff0c\u6211\u4eec\u4e0d\u96be\u770b\u51fa\uff0c\u603b\u7ebf\uff1amybus(\u81ea\u5df1\u5199\u7684)\uff0cplatform(\u5e73\u53f0\u603b\u7ebf)\uff0cIIC\u603b\u7ebf\u90fd\u662f\u57fa\u4e8ebus----driver----device\u7684\u6a21\u578b \u5bf9\u4e8e\u603b\u7ebf\u800c\u8a00\uff0c\u65e0\u975e\u5c31\u662f\u4ecestruct bus_type\u6d3e\u751f\u51fa\u6765\u7684\u4e00\u4e2a\u5b9e\u4f8b\uff1b \u5bf9\u4e8edriver\u800c\u8a00\uff0c\u57fa\u672c\u90fd\u662f\u7ee7\u627fstruct device_driver\u800c\u6269\u5c55\u51fa\u6765\u7684\uff1b \u5bf9\u4e8edevice\u800c\u8a00\uff0c\u65e0\u975e\u5c31\u662f\u4ecestruct device\u800c\u6269\u5c55\u51fa\u6765\u7684\u3002","title":"\u603b\u7ebf\u7684\u6a2a\u5411\u5bf9\u6bd4\u8868"},{"location":"\u624b\u628a\u624b\u6559\u4f60\u4ece\u5355\u7247\u673a\u79fb\u690d\u9a71\u52a8\u5230ARMLinux\u4e0a/","text":"1. \u5199\u5728\u524d\u9762 2. \u786c\u4ef6\u73af\u5883 2.1 \u4e3b\u63a7\u73af\u5883 2.2 \u5916\u8bbe\u73af\u5883 3.\u786c\u4ef6\u63a5\u7ebf 3.1 STM32\u63a5\u7ebf 3.2 RK3399\u63a5\u7ebf 4. \u79fb\u690d\u539f\u7406 5. \u79fb\u690d\u64cd\u4f5c 5.1 \u4ece\u8bbe\u5907\u6811\u4e2d\u4f20\u5165GPIO\u53e3\u5b9a\u4e49 5.2 \u66ff\u6362STM32\u4e2d\u7684\u63a5\u53e3 5.2.1 \u66ff\u6362\u5b8f\u5b9a\u4e49\u63a5\u53e3 5.2.2 \u66ff\u6362\u5ef6\u65f6\u63a5\u53e3 5.2.3 \u64cd\u4f5c\u51fd\u6570\u63a5\u53e3\u66ff\u6362 5.2.3.1 void DHT11_IO_OUT(void) ; 5.2.3.2 void DHT11_IO_IN(void) ; 5.2.3.3 u8 DHT11_Read_DQ(void); 5.2.3.4 \u603b\u7ed3\u5bf9\u6bd4 5.2.3.5 \u5176\u4ed6\u76f4\u63a5\u65e0\u7f1d\u4f7f\u7528\u7684\u7684\u4ee3\u7801 6. \u52a0\u5165\u5230\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u6846\u67b6 7. \u6d4b\u8bd5\u4ee3\u7801 8. \u6d4b\u8bd5\u6548\u679c 9. \u4ee3\u7801\u5f00\u6e90\u5730\u5740 1. \u5199\u5728\u524d\u9762 \u7ecf\u8fc7\u524d\u9762\u7684\u7ae0\u8282\uff0c\u53ef\u80fd\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4ece\u4e00\u4e2a\u666e\u901a\u5916\u8bbe\u5230\u9a71\u52a8\u7684\u7f16\u5199\uff0c\u5e94\u7528\u5c42\u7684\u6d4b\u8bd5\uff0c\u5176\u5b9e\u5bf9\u4e8e\u540c\u662fARM \u7684\u82af\u7247\uff0c\u4f46\u5374\u662f\u4e0d\u540c\u7cfb\u5217\uff0c\u53c8\u6216\u8005\u64cd\u4f5c\u7cfb\u7edf\u4e0d\u4e00\u81f4\uff0c\u5982RTOS\u4e0eLinux\u4e4b\u524d\uff0c\u4f46\u662f\u5bf9\u4e8e\u4e00\u4e2a\u786c\u4ef6\u5916\u8bbe\u6765\u8bf4\uff0c\u5b83\u7684\u5bc4\u5b58\u5668\u3001\u64cd\u4f5c\u65f6\u5e8f\u7b49\uff0c\u4e0d\u4f1a\u56e0\u4e3a\u4e3b\u673a\u7684\u4e0d\u540c\u4e5f\u53d1\u751f\u53d8\u5316\u3002\u90a3\u4e48\uff0c\u8fd9\u7bc7\u6587\u7ae0\u4e5f\u662f\u5e2e\u52a9\u4e00\u4e9b\u5177\u6709\u4e00\u5b9a\u7684\u786c\u4ef6\u5f00\u53d1\u80fd\u529b\u7684\u7ae5\u978b\uff0c\u5c06\u4e4b\u524d\u7684\u6210\u679c\u5feb\u901f\u5730\u8f6c\u5316\u5230ARM Linux\u5f00\u53d1\u73af\u5883\u4e0a\u6765\uff0c\u5e2e\u52a9\u5176\u66f4\u597d\u7684\u7406\u89e3ARM Linux\u73af\u5883\u4e0b\u7684\u5f00\u53d1\uff1b\u53c8\u6216\u8005\u7ed9\u53ea\u6709ARM Linux\u9a71\u52a8\u5f00\u53d1\u7684\u7ae5\u978b\u63d0\u4f9b\u591a\u4e00\u6761\u601d\u8def\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u6bd4\u8f83\u6210\u719f\u7684\u5916\u8bbe\u6a21\u5757\uff0c\u5728\u6ca1\u6709\u76f8\u540c\u5e73\u53f0\u7684Demo\u7684\u60c5\u51b5\u4e0b\uff0c\u5feb\u901f\u5730\u53c2\u8003\u5df2\u7ecf\u6709\u7684\u5176\u4ed6\u5e73\u53f0\u7684\u4f8b\u5b50\uff0c\u5feb\u901f\u5b8c\u6210\u529f\u80fd\u5f00\u53d1\u3002 \u672c\u7ae0\u5c31\u4ee5\u4e3a STM32 \u5e73\u53f0\u9a71\u52a8\u6e29\u6e7f\u5ea6 DHT11 \u4e3a\u4f8b\uff0c\u5b9e\u73b0\u5c06\u5355 \u7247\u673a\u9a71\u52a8\u79fb\u690d\u5230ARM Linux\u4e0b\u3002 2. \u786c\u4ef6\u73af\u5883 2.1 \u4e3b\u63a7\u73af\u5883 \u5f00\u53d1\u677f\uff1a\u53cb\u5584\u7535\u5b50Nano Pi T4 \u4e3b\u63a7\uff1aRK3399(ARM V8) OS:Linux version 4.4.143 \u7f16\u8bd1\u5668\uff1aaarch64-linux-gnu-gcc (gcc version 7.3.0) 2.2 \u5916\u8bbe\u73af\u5883 DHT11 \u6570\u5b57\u6e29\u6e7f\u5ea6\u4f20\u611f\u5668\u662f\u4e00\u6b3e\u542b\u6709\u5df2\u6821\u51c6\u6570\u5b57\u4fe1\u53f7\u8f93\u51fa\u7684\u6e29\u6e7f\u5ea6\u590d\u5408\u4f20\u611f\u5668\u3002 1\uff0e \u4f9b\u7535\u7535\u538b\uff1a3-5.5V 2\uff0e \u4f9b\u7535\u7535\u6d41\uff1a\u6700\u59272.5mA 3\uff0e \u6e29\u5ea6\u8303\u56f4\uff1a0-50\u2103 \u8bef\u5dee\u00b12\u2103 4\uff0e \u6e7f\u5ea6\u8303\u56f4\uff1a20-90%RH \u8bef\u5dee\u00b15%RH 5\uff0e \u54cd\u5e94\u65f6\u95f4: 1/e(63%) 6-30s 6\uff0e \u6d4b\u91cf\u5206\u8fa8\u7387\u5206\u522b\u4e3a 8bit\uff08\u6e29\u5ea6\uff09\u30018bit\uff08\u6e7f\u5ea6\uff09 7\uff0e \u91c7\u6837\u5468\u671f\u95f4\u9694\u4e0d\u5f97\u4f4e\u4e8e1 \u79d2\u949f 3.\u786c\u4ef6\u63a5\u7ebf \u7531\u4e8eDHT11\u91c7\u7528\u4e86\u5355\u603b\u7ebf\u7684\u65b9\u5f0f\uff0c\u6240\u4ee5\u8f93\u5165\u8f93\u51fa\u90fd\u662f\u5728DATA\u7ebf\u4e0a\u5b8c\u6210\u4e86\uff0c\u5178\u578b\u7684\u63a5\u7ebf\u56fe\u5982\u4e0b\uff0c\u4e00\u822c\u5c06DATA\u7ebf\u63a5\u81f3CPU\u7684\u67d0\u4e2aIO\u53e3\u4e0a\u3002 3.1 STM32\u63a5\u7ebf :-: PE4\uff0d\uff0d\uff0d\uff0d>DATA\u7ebf 3.2 RK3399\u63a5\u7ebf :-: GPIO1_A0\uff0d\uff0d\uff0d\uff0d>DATA\u7ebf 4. \u79fb\u690d\u539f\u7406 \u5bf9\u4e8eDHT11\u8fd9\u79cd\u5916\u8bbe\u6765\u8bf4\uff0c\u65e0\u975e\u5c31\u662fIO\u53e3\u4e0a\u8bbe\u4e3a\u8f93\u5165\u8f93\u51fa\u95f4\u5207\u6362\uff0c\u8fdb\u800c\u8fdb\u884c\u6570\u636e\u7684\u8bfb\u5199\u64cd\u4f5c\u3002\u5bf9IO\u7684\u64cd\u4f5c\u6765\u8bf4\uff0cSTM32\u6709\u63d0\u4f9b\u4e00\u7cfb\u5217\u65b9\u4fbf\u7684\u5e93\u51fd\u6570\uff0c\u5982\uff1a void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct); void GPIO_StructInit(GPIO_InitTypeDef* GPIO_InitStruct); uint8_t GPIO_ReadInputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin); uint16_t GPIO_ReadInputData(GPIO_TypeDef* GPIOx); uint8_t GPIO_ReadOutputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin); uint16_t GPIO_ReadOutputData(GPIO_TypeDef* GPIOx); void GPIO_SetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin); void GPIO_ResetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin); void GPIO_WriteBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, BitAction BitVal); void GPIO_Write(GPIO_TypeDef* GPIOx, uint16_t PortVal); \u5bf9\u4e8elinux\u6765\u8bf4\uff0c\u540c\u6837\uff0c\u6709\u4e00\u7cfb\u5217\u65b9\u4fbf\u7684\u63a5\u53e3\uff0c\u4e0eSTM32\u5e93\u51fd\u6570\u4e0d\u540c\u7684\u662f\uff0c\u8fd9\u4e9b\u63a5\u53e3\u662f\u7ecf\u8fc7\u9ad8\u5ea6\u62bd\u8c61\u5316\u7684\uff0c\u4e0d\u76f4\u63a5\u64cd\u4f5c\u786c\u4ef6\u3002 enum of_gpio_flags { OF_GPIO_ACTIVE_LOW = 0x1, }; int of_get_named_gpio_flags(struct device_node *np, const char *propname, int index, enum of_gpio_flags *flags); int gpio_is_valid(int gpio); int gpio_request(unsigned gpio, const char *label); void gpio_free(unsigned gpio); int gpio_direction_input(int gpio); int gpio_direction_output(int gpio, int v); \u9664\u6b64\u4e4b\u5916\uff0c\u5bf9\u4e8e\u5916\u8bbe\u9a71\u52a8\u6765\u8bf4\uff0c\u9664\u4e86IO\u63a7\u5236\u4e4b\u5916\uff0c\u8fd8\u5fc5\u987b\u5bf9\u65f6\u5e8f\u6709\u4e25\u683c\u7684\u8981\u6c42\uff0c\u6bd4\u5982\u8bf4\u5ef6\u65f6\uff0c\u90a3\u4e48\uff0c\u5bf9\u4e8e\u4e00\u5b9aMCU\u6765\u8bf4\u6709\u7c7b\u4f3cSTM32 \u6ef4\u7b54\u65f6\u949f\u5b9e\u73b0\u7684\u5ef6\u65f6\uff0c\u5176\u5b9e\uff0c\u5728linux\u9a71\u52a8\u6765\u8bf4\uff0c\u4e5f\u6709\u63d0\u4f9b\u8fd9\u4e9b\u7c7b\u4f3c\u7684\u63a5\u53e3\u3002 \u6240\u4ee5\uff0c\u7efc\u4e0a\uff0c\u6211\u4eec\u4ece\u5355\u7247\u673a\u79fb\u690d\u4e00\u4e2a\u9a71\u52a8\u5230Linux\u73af\u5883\u4e0b\uff0c\u65e0\u975e\u5c31\u662f\u5c06\u63a5\u53e3\u8fdb\u884c\u66ff\u6362\u3002 5. \u79fb\u690d\u64cd\u4f5c 5.1 \u4ece\u8bbe\u5907\u6811\u4e2d\u4f20\u5165GPIO\u53e3\u5b9a\u4e49 \u4ece\u4e0a\u6587\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u5176\u5b9e\u64cd\u4f5cLinux\u4e0b\u7684GPIO\u65e0\u975e\u5c31\u662f\u901a\u8fc7GPIO\u7684API\u8fdb\u884c\u64cd\u4f5c\uff0c\u90a3\u4e48\uff0c\u6211\u4eec\u5927\u53ef\u76f4\u63a5\u4f7f\u7528 gpio_direction_output(12,1) \u6765\u5b9e\u73b0IO\u76f4\u63a5\u64cd\u4f5c\uff0c\u4f46\u662f\u5728ARM Linux\u4e0a\u5462\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8bbe\u5907\u6811\u7684\u65b9\u5f0f\uff0c\u7075\u6d3b\u7684\u4f20\u5165 12 \u8fd9\u4e2a\u7f16\u53f7\uff0c\u5bf9\u4e8e\u672c\u6b21\u4f8b\u7a0b\uff0c\u6211\u4f7f\u7528\u4e86\u4e4b\u524d\u7684GPIO-LED\u65b9\u5f0f\u7684GPIO\uff0c\u8bbe\u5907\u6811\u5927\u6982\u5982\u4e0b\uff1a myleds: mygpio-leds { compatible = \"mygpio-leds\"; pinctrl-names = \"default\"; pinctrl-0 =<&myleds_gpio>; led@1 { gpios = <&gpio1 0 GPIO_ACTIVE_HIGH>; label = \"my_led\"; linux,default-trigger = \"heartbeat\"; linux,default-trigger-delay-ms = <0>; }; }; mygpio-leds { myleds_gpio: myleds-gpio { rockchip,pins = <1 0 RK_FUNC_GPIO &pcfg_pull_none>; }; }; \u6240\u4ee5\u6211\u4eec\u9700\u8981\u5728\u9a71\u52a8\u6dfb\u52a0\u83b7\u53d6\u5230\u8fd9\u4e2aGPIO\u7684\u5b9a\u4e49\uff1a gpios = <&gpio1 0 GPIO_ACTIVE_HIGH>; \u9996\u5148\uff0c\u6309\u7167\u524d\u9762\u7684\u7ae0\u8282\u6240\u4ecb\u7ecd\u7684\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6784\u5efa\u597d\u6211\u4eec\u7684\u8bbe\u5907\u6811\u7ed3\u6784\u4f53\uff0c\u7136\u540e\uff0c\u5c06\u540d\u5b57\u4e0e compatible = \"mygpio-leds\" \u4e2d\u7684 \"mygpio-leds\" \u4e00\u81f4\u5373\u53ef\uff0c\u770b\u4e0b\u9762\u793a\u4f8b\uff1a static const struct of_device_id of_dht11_match[] = { { .compatible = \"mygpio-leds\", }, {}, }; MODULE_DEVICE_TABLE(of, of_dht11_match); \u6700\u540e\u4f7f\u7528\u7684 MODULE_DEVICE_TABLE \u5c06\u6211\u4eec\u7684\u7ed3\u6784\u4f53\u6dfb\u52a0\u5230\u5185\u6838\u7684\u8bbe\u5907\u6811\u7684\u94fe\u8868\u4e2d\u53bb\u3002 \u6700\u540e\uff0c\u6211\u4eec\u9700\u8981\u6784\u5efa\u4e00\u4e2adrivers\u5c06\u6211\u4eec\u7684\u9a71\u52a8\u6ce8\u518c\u5230\u5185\u6838\u4e2d\u53bb\uff0c\u8ba9\u5185\u6838\u53bb\u5339\u914d\uff0c\u8fd9\u91cc\u4f7f\u7528\u4e00\u4e2aplatform \u9a71\u52a8\u4e3a\u4f8b\uff1a static struct platform_driver dht11_driver = { .probe = dht11_probe, .remove = dht11_remove, .shutdown = dht11_shutdown, .driver = { .name = \"dht11_driver\", .of_match_table = of_dht11_match, }, }; module_platform_driver(dht11_driver); \u6ce8\u610f\uff0c\u4e5f\u8981\u628a\u521a\u624d\u8bf4\u7684\u8bbe\u5907\u6811\u7684\u7ed3\u6784\u4f53\u9644\u7ed9\u8fd9\u4e2adriver,\u5982\u4e0a\u4ee3\u7801\u7247\u6bb5\u6240\u793a\u7684\uff1a .driver = { .name = \"dht11_driver\", .of_match_table = of_dht11_match, } \u6309\u7167\u4e4b\u524d\u7684\u65b9\u6cd5\uff0c\u5f53\u8bbe\u5907\u6811\u4e2d\u7684\u8282\u70b9\u4fe1\u606f\u4e0edriver\u5339\u914d \u540e\uff0c\u4f1a\u8c03\u7528probe\u51fd\u6570\uff0c\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u5728probe\u51fd\u6570\u4e2d\uff0c\u5c06 gpios = <&gpio1 0 GPIO_ACTIVE_HIGH>; \u53d6\u51fa\u6765\uff0c\u5229\u7528\u4e00\u4e9b\u8bbe\u5907\u6811\u7684API\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a struct device_node *dht11_gpio_node = pdev->dev.of_node; \u6b64\u65f6\uff0cdht11_gpio_node \u5c31\u53d6\u51fa myleds: mygpio-leds \u8fd9\u4e2a\u4e3b\u8282\u70b9\uff0c\u7136\u540e\u9700\u8981\u627e\u51fa\u8fd9\u4e2a\u5b50\u8282\u70b9\uff1a led@1 \u6240\u4ee5\uff0c\u771f\u6b63\u7684\u8282\u70b9\u7684\u662f dht11_gpio_node->child \u6240\u4ee5\u4f7f\u7528\u8d77\u6765\u7684\u6548\u679c\u662f\u8fd9\u6837\u7684\uff1a dht11_gpio = of_get_named_gpio_flags(dht11_gpio_node->child, \"gpios\", 0, &flag); \u5176\u4e2d\uff0c dht11_gpio \u5c31\u662f\u6211\u4eec\u8981\u4f7f\u7528\u7684GPIO\u7684\u5b9a\u4e49\uff0c\u6309\u8bbe\u5907\u6811\u7684\u5b9a\u4e49\u6765\u8bf4\uff0c\u5c31\u662f gpios = <&gpio1 0 GPIO_ACTIVE_HIGH>; \u5982\u679c\u4e0d\u51fa\u95ee\u9898\u7684\u8bdd\uff0c dht11_gpio\uff1d32 \u4e00\u65e6\u5f97\u5230GPIO\u53f7\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u4e4b\u524d\u63d0\u53ca\u7684GPIO\u8f93\u51fa\u8f93\u5165\u63a7\u5236\u63a5\u53e3\uff0c\u6240\u4ee5\u6700\u7ec8\uff0c\u5728probe\u51fd\u6570\u4e2d\u53ef\u4ee5\u521d\u6b65\u5199\u6210\u5982\u4e0b\uff1a static int dht11_probe(struct platform_device *pdev) { int ret; enum of_gpio_flags flag;//(flag == OF_GPIO_ACTIVE_LOW) ? printk(\"-------%s-------------\\n\", __FUNCTION__); struct device_node *dht11_gpio_node = pdev->dev.of_node; dht11_gpio = of_get_named_gpio_flags(dht11_gpio_node->child, \"gpios\", 0, &flag); if (!gpio_is_valid(dht11_gpio)) { printk(\"dht11-gpio: %d is invalid\\n\", dht11_gpio); return -ENODEV; } else printk(\"dht11-gpio: %d is valid!\\n\", dht11_gpio); if (gpio_request(dht11_gpio, \"dht11-gpio\")) { printk(\"gpio %d request failed!\\n\", dht11_gpio); gpio_free(dht11_gpio); return -ENODEV; } else printk(\"gpio %d request success!\\n\", dht11_gpio); } 5.2 \u66ff\u6362STM32\u4e2d\u7684\u63a5\u53e3 \u6309\u524d\u6587\u6240\u8ff0\uff0c\u5c31\u662f\u5c06STM32\u4e2d\u5173\u4e8eIO\u53e3\u64cd\u4f5c\u7684\u63a5\u53e3\u6362\u6210Linux\u4e2d\u7684\uff0c\u4e0b\u9762\u5f00\u59cb\u9010\u6b65\u5206\u89e3 5.2.1 \u66ff\u6362\u5b8f\u5b9a\u4e49\u63a5\u53e3 \u6211\u4eec\u5148\u6765\u770b\u4e00\u4e0bSTM32\u4e2d\u5173\u4e8eGPIO\u4e2d\u64cd\u4f5c\u7684\u5b8f\u5b9a\u4e49\u76f8\u5173\u7684\uff1a #define IO_DHT11 GPIO_Pin_4 //\u5f15\u5165\u4e2d\u95f4\u53d8\u91cf\uff0c\u65b9\u4fbf\u79fb\u690d #define GPIO_DHT11 GPIOE //\u5f15\u5165\u4e2d\u95f4\u53d8\u91cf\uff0c\u65b9\u4fbf\u79fb\u690d #define DHT11_DQ_High GPIO_SetBits(GPIO_DHT11,IO_DHT11) #define DHT11_DQ_Low GPIO_ResetBits(GPIO_DHT11,IO_DHT11) \u66ff\u6362\u6210\u8fd9\u6837\uff1a static int dht11_gpio; //data\u7ebf\u5b8f\u5b9a\u4e49\uff0c\u66ff\u6362STM32\u4e2dGPIOXX #define DHT11_DQ_High gpio_direction_output(dht11_gpio, 1) #define DHT11_DQ_Low gpio_direction_output(dht11_gpio, 0) \u8fd9\u91cc\u7684\u53c2\u6570\uff1a dht11_gpio \u5c31\u662f\u524d\u9762\u901a\u8fc7\u8bbe\u5907\u6811API\u4ece\u8bbe\u5907\u6811\u4e2d\u8bfb\u5230\u7684\u3002\u6240\u4ee5\u524d\u9762\uff0c\u4e3a\u4e86\u65b9\u4fbf\uff0c\u76f4\u63a5\u5c06\u5176\u505a\u4e86\u5168\u5c40\u53d8\u91cf\u4e86\u3002 5.2.2 \u66ff\u6362\u5ef6\u65f6\u63a5\u53e3 \u719f\u6089STM32\u5355\u7247\u673a\u7684\u7ae5\u978b\u4e00\u822c\u90fd\u77e5\u9053\u5728STM32\u4e0a\u4f7f\u7528\u7684\u5ef6\u65f6\u51fd\u6570\uff0c\u4e00\u822c\u662f\u901a\u8fc7\u6ef4\u7b54\uff08systick\uff09\u5b9e\u73b0\u7684\uff0c\u4e3a\u4e86\u79fb\u690d\u8fc7\u7a0b\u4e2d\uff0c\u66ff\u6362\u4ee3\u7801\u91cf\u5c11\uff0c\u6211\u76f4\u63a5\u5c06\u539f\u4ee3\u7801\u4e2d\u7684\u63a5\u53e3\u5b8f\u5b9a\u4e49\u4e86\uff1a #define delay_us(x) udelay(x) #define delay_ms(x) msleep(x) 5.2.3 \u64cd\u4f5c\u51fd\u6570\u63a5\u53e3\u66ff\u6362 \u4e3b\u8981\u6709\u4ee5\u4e0b\u7684\u63a5\u53e3\uff1a void DHT11_IO_OUT(void);//\u6e29\u6e7f\u5ea6\u6a21\u5757\u8f93\u51fa\u51fd\u6570 void DHT11_IO_IN(void); //\u6e29\u6e7f\u5ea6\u6a21\u5757\u8f93\u5165\u51fd\u6570 void DHT11_Init(void); //\u521d\u59cb\u5316DHT11 u8 DHT11_Read_DQ(void); //\u8bfb\u53d6Data\u7ebf\u7535\u5e73 u8 DHT11_Read_Data(u8 *temp,u8 *humi);//\u8bfb\u53d6\u6e29\u6e7f\u5ea6 u8 DHT11_Read_Byte(void); //\u8bfb\u51fa\u4e00\u4e2a\u5b57\u8282 u8 DHT11_Read_Bit(void); //\u8bfb\u51fa\u4e00\u4e2a\u4f4d u8 DHT11_Check(void); //\u68c0\u6d4b\u662f\u5426\u5b58\u5728DHT11 void DHT11_Rst(void); //\u590d\u4f4dDHT11 \u4e0b\u9762\u6765\u770b\u4e00\u4e2a\u4e2a\u51fd\u6570\u4fee\u6539\u79fb\u690d\u7684\u6548\u679c 5.2.3.1 void DHT11_IO_OUT(void) ; void DHT11_IO_OUT(void)//\u6e29\u6e7f\u5ea6\u6a21\u5757\u8f93\u51fa\u51fd\u6570 { GPIO_InitTypeDef GPIO_InitStructure; GPIO_InitStructure.GPIO_Pin=IO_DHT11; GPIO_InitStructure.GPIO_Speed=GPIO_Speed_50MHz; GPIO_InitStructure.GPIO_Mode=GPIO_Mode_Out_PP; GPIO_Init(GPIO_DHT11,&GPIO_InitStructure); } \u66ff\u6362\uff1a\u5176\u5b9e\u8fd9\u4e2a\u51fd\u6570\u7684\u4f5c\u7528\u65e0\u975e\u5c31\u662f\u5c06IO\u8bbe\u4e3a\u8f93\u51fa\u6a21\u5f0f\uff0c\u7136\u540e\u4f7f\u7528 DHT11_DQ_High \u6216\u8005 DHT11_DQ_Low \u8f93\u51fa\u9ad8\u4f4e\u7535\u5e73\uff0c\u800c\u6211\u4eec\u79fb\u690d\u7684\u5b8f\u5b9a\u4e49\uff0c\u5df2\u7ecf\u5b9e\u73b0\u4e86\u5148\u8bbe\u7f6e\u4e3a\u8f93\u51fa\u518d\u8f93\u51fa\u9ad8\u4f4e\u7535\u5e73\uff0c\u4e00\u6b65\u5230\u4f4d\uff01 5.2.3.2 void DHT11_IO_IN(void) ; STM32\u4e0a\u539f\u59cb\u7684\u6837\u5b50\uff1a void DHT11_IO_IN(void)//\u6e29\u6e7f\u5ea6\u6a21\u5757\u8f93\u5165\u51fd\u6570 { GPIO_InitTypeDef GPIO_InitStructure; GPIO_InitStructure.GPIO_Pin=IO_DHT11; GPIO_InitStructure.GPIO_Mode=GPIO_Mode_IN_FLOATING; GPIO_Init(GPIO_DHT11,&GPIO_InitStructure); } \u66ff\u6362\u6210\u8fd9\u6837\uff1a void DHT11_IO_IN(void)//\u6e29\u6e7f\u5ea6\u6a21\u5757\u8f93\u5165\u51fd\u6570 { gpio_direction_input(dht11_gpio); }\uff1b 5.2.3.3 u8 DHT11_Read_DQ(void); STM32\u4e0a\u539f\u59cb\u7684\u6837\u5b50\uff1a u8 DHT11_Read_DQ(void) { return GPIO_ReadInputDataBit(GPIO_DHT11,IO_DHT11); } \u66ff\u6362\u6210\uff1a static u8 DHT11_Read_DQ(void) { return gpio_get_value(dht11_gpio); } 5.2.3.4 \u603b\u7ed3\u5bf9\u6bd4 \u5230\u6b64\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5176\u5b9e\u5bf9\u4e8e\u6bd4\u8f83\u4e0a\u5c42\u4e00\u70b9\u7684\u51fd\u6570\uff0c\u5176\u5b9e\u51fd\u6570\u57fa\u672c\u4e0a\u53ef\u4ee5\u76f4\u63a5\u7528\u4e86\uff0c\u56e0\u4e3a\u6211\u4eec\u5b8c\u6210\u4e86\u5e95\u5c42\u7684\u63a5\u53e3\u7684\u66ff\u6362\u4e4b\u540e\uff0c\u4ee3\u7801\u57fa\u672c\u4e0a\u4e00\u81f4\u3002\u4e0b\u9762\u5c31\u4e0d\u518d\u4e00\u4e00\u8d58\u8ff0\u8fd9\u4e9b\u51fd\u6570\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u770b\u6574\u4e2a\u4ee3\u7801\u79fb\u690d\u524d\u540e\u7684\u5bf9\u6bd4\u56fe\uff1a 5.2.3.5 \u5176\u4ed6\u76f4\u63a5\u65e0\u7f1d\u4f7f\u7528\u7684\u7684\u4ee3\u7801 //\u590d\u4f4dDHT11 void DHT11_Rst(void) { DHT11_IO_OUT(); //SET OUTPUT DHT11_DQ_Low; //DQ=0 delay_ms(20); //\u62c9\u4f4e\u81f3\u5c1118ms DHT11_DQ_High; //DQ=1 delay_us(30); //\u4e3b\u673a\u62c9\u9ad820~40us } //\u7b49\u5f85DHT11\u7684\u56de\u5e94 //\u8fd4\u56de1:\u672a\u68c0\u6d4b\u5230DHT11\u7684\u5b58\u5728 //\u8fd4\u56de0:\u5b58\u5728 u8 DHT11_Check(void) { u8 retry=0;//\u5b9a\u4e49\u4e34\u65f6\u53d8\u91cf DHT11_IO_IN();//SET INPUT while ((DHT11_Read_DQ()==1)&&retry<100)//DHT11\u4f1a\u62c9\u4f4e40~80us { retry++; delay_us(1); }; if(retry>=100)return 1; else retry=0; while ((DHT11_Read_DQ())==0)&&retry<100)//DHT11\u62c9\u4f4e\u540e\u4f1a\u518d\u6b21\u62c9\u9ad840~80us { retry++; delay_us(1); }; if(retry>=100)return 1; return 0; } //\u4eceDHT11\u8bfb\u53d6\u4e00\u4e2a\u4f4d //\u8fd4\u56de\u503c\uff1a1/0 u8 DHT11_Read_Bit(void) { u8 retry=0; while((DHT11_Read_DQ()==1)&&retry<100)//\u7b49\u5f85\u53d8\u4e3a\u4f4e\u7535\u5e73 { retry++; delay_us(1); } retry=0; while((DHT11_Read_DQ()==0)&&retry<100)//\u7b49\u5f85\u53d8\u9ad8\u7535\u5e73 { retry++; delay_us(1); } delay_us(40);//\u7b49\u5f8540us if(DHT11_Read_DQ()==1) return 1; else return 0; } //\u4eceDHT11\u8bfb\u53d6\u4e00\u4e2a\u5b57\u8282 //\u8fd4\u56de\u503c\uff1a\u8bfb\u5230\u7684\u6570\u636e u8 DHT11_Read_Byte(void) { u8 i,dat; dat=0; for (i=0;i<8;i++) { dat<<=1; dat|=DHT11_Read_Bit(); } return dat; } //\u4eceDHT11\u8bfb\u53d6\u4e00\u6b21\u6570\u636e //temp:\u6e29\u5ea6\u503c(\u8303\u56f4:0~50\u00b0) //humi:\u6e7f\u5ea6\u503c(\u8303\u56f4:20%~90%) //\u8fd4\u56de\u503c\uff1a0,\u6b63\u5e38;1,\u8bfb\u53d6\u5931\u8d25 u8 DHT11_Read_Data(u8 *temp,u8 *humi) { u8 buf[5]; u8 i; DHT11_Rst(); if(DHT11_Check()==0) { for(i=0;i<5;i++)//\u8bfb\u53d640\u4f4d\u6570\u636e { buf[i]=DHT11_Read_Byte(); } if((buf[0]+buf[1]+buf[2]+buf[3])==buf[4]) { *humi=buf[0]; *temp=buf[2]; } }else return 1; return 0; } //\u521d\u59cb\u5316DHT11\u7684IO\u53e3 DQ \u540c\u65f6\u68c0\u6d4bDHT11\u7684\u5b58\u5728 //\u8fd4\u56de1:\u4e0d\u5b58\u5728 //\u8fd4\u56de0:\u5b58\u5728 void DHT11_Init(void) { DHT11_Rst(); //\u590d\u4f4dDHT11 DHT11_Check();//\u7b49\u5f85DHT11\u7684\u56de\u5e94 } 6. \u52a0\u5165\u5230\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u6846\u67b6 \u6309\u7167\u4e4b\u524d\u7684\u6559\u7a0b\uff0c\u7f16\u5199\u5b57\u7b26\u9a71\u52a8\u6846\u67b6\uff0c\u6700\u7ec8\u521b\u5efa\u4e00\u4e2a\u5b57\u7b26\u8bbe\u5907 /dev/dht11 \u4f9b\u4e0a\u5c42\u5e94\u7528\u8bfb\u5199\uff0c\u4e3b\u8981\u5728read\u51fd\u6570\u4e2d\uff0c\u8c03\u7528 DHT11_Read_Data \uff0c\u5c06\u8bfb\u5230\u7684\u6e29\u6e7f\u5ea6\u4f20\u7ed9\u4e0a\u5c42\u3002 read\u51fd\u6570\u6548\u679c\u5927\u81f4\u5982\u4e0b\uff1a static ssize_t DHT11_read(struct file *file, char __user *buf, size_t nbytes, loff_t *ppos) { printk(\"--------------%s--------------\\n\",__FUNCTION__); dht11_data Last_dht11_data; if(DHT11_Read_Data(&Last_dht11_data.temp,&Last_dht11_data.hum) == 0);//\u8bfb\u53d6\u6e29\u6e7f\u5ea6\u503c { if ( copy_to_user(buf,&Last_dht11_data,sizeof(Last_dht11_data)) ) { return EFAULT ; } } } .... static struct file_operations dht11_fops = { .owner = THIS_MODULE, .read = DHT11_read, .open = DHT11_open, .release = DHT11_close, }; ...... 7. \u6d4b\u8bd5\u4ee3\u7801 #include <stdio.h> #include <stdlib.h> #include <unistd.h> #include <sys/types.h> #include <sys/stat.h> #include <fcntl.h> #include <errno.h> typedef unsigned char u8; typedef unsigned short u16; typedef struct DHT11_SENSOR_DATA { u16 temp;//\u6e29\u5ea6 u16 hum;//\u6e7f\u5ea6 }dht11_data; int main ( void ) { int fd ; int retval ; dht11_data Curdht11_data; fd = open ( \"/dev/dht11\" , O_RDONLY) ; if ( fd == -1 ) { perror ( \"open dht11 error\\n\" ) ; exit ( -1 ) ; } printf ( \"open /dev/dht11 successfully\\n\" ) ; sleep ( 2 ) ; while ( 1 ) { sleep ( 1 ) ; retval = read ( fd , &Curdht11_data , sizeof(Curdht11_data) ); if ( retval == -1 ) { perror ( \"read dht11 error\" ) ; printf ( \"read dht11 error\" ) ; exit ( -1 ) ; } if(Curdht11_data.temp != 0xffff) printf ( \"Temperature:%d.%d C,Humidity:%d.%d %%RH\\n\",Curdht11_data.temp>>8,Curdht11_data.temp&0xff,\\ Curdht11_data.hum>>8,Curdht11_data.hum&0xff ) ; } close ( fd ) ; } 8. \u6d4b\u8bd5\u6548\u679c 9. \u4ee3\u7801\u5f00\u6e90\u5730\u5740 Github","title":"\u9a71\u52a8\u7b2c\u4e94\u5929"},{"location":"\u624b\u628a\u624b\u6559\u4f60\u4ece\u5355\u7247\u673a\u79fb\u690d\u9a71\u52a8\u5230ARMLinux\u4e0a/#1","text":"\u7ecf\u8fc7\u524d\u9762\u7684\u7ae0\u8282\uff0c\u53ef\u80fd\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4ece\u4e00\u4e2a\u666e\u901a\u5916\u8bbe\u5230\u9a71\u52a8\u7684\u7f16\u5199\uff0c\u5e94\u7528\u5c42\u7684\u6d4b\u8bd5\uff0c\u5176\u5b9e\u5bf9\u4e8e\u540c\u662fARM \u7684\u82af\u7247\uff0c\u4f46\u5374\u662f\u4e0d\u540c\u7cfb\u5217\uff0c\u53c8\u6216\u8005\u64cd\u4f5c\u7cfb\u7edf\u4e0d\u4e00\u81f4\uff0c\u5982RTOS\u4e0eLinux\u4e4b\u524d\uff0c\u4f46\u662f\u5bf9\u4e8e\u4e00\u4e2a\u786c\u4ef6\u5916\u8bbe\u6765\u8bf4\uff0c\u5b83\u7684\u5bc4\u5b58\u5668\u3001\u64cd\u4f5c\u65f6\u5e8f\u7b49\uff0c\u4e0d\u4f1a\u56e0\u4e3a\u4e3b\u673a\u7684\u4e0d\u540c\u4e5f\u53d1\u751f\u53d8\u5316\u3002\u90a3\u4e48\uff0c\u8fd9\u7bc7\u6587\u7ae0\u4e5f\u662f\u5e2e\u52a9\u4e00\u4e9b\u5177\u6709\u4e00\u5b9a\u7684\u786c\u4ef6\u5f00\u53d1\u80fd\u529b\u7684\u7ae5\u978b\uff0c\u5c06\u4e4b\u524d\u7684\u6210\u679c\u5feb\u901f\u5730\u8f6c\u5316\u5230ARM Linux\u5f00\u53d1\u73af\u5883\u4e0a\u6765\uff0c\u5e2e\u52a9\u5176\u66f4\u597d\u7684\u7406\u89e3ARM Linux\u73af\u5883\u4e0b\u7684\u5f00\u53d1\uff1b\u53c8\u6216\u8005\u7ed9\u53ea\u6709ARM Linux\u9a71\u52a8\u5f00\u53d1\u7684\u7ae5\u978b\u63d0\u4f9b\u591a\u4e00\u6761\u601d\u8def\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u6bd4\u8f83\u6210\u719f\u7684\u5916\u8bbe\u6a21\u5757\uff0c\u5728\u6ca1\u6709\u76f8\u540c\u5e73\u53f0\u7684Demo\u7684\u60c5\u51b5\u4e0b\uff0c\u5feb\u901f\u5730\u53c2\u8003\u5df2\u7ecf\u6709\u7684\u5176\u4ed6\u5e73\u53f0\u7684\u4f8b\u5b50\uff0c\u5feb\u901f\u5b8c\u6210\u529f\u80fd\u5f00\u53d1\u3002 \u672c\u7ae0\u5c31\u4ee5\u4e3a STM32 \u5e73\u53f0\u9a71\u52a8\u6e29\u6e7f\u5ea6 DHT11 \u4e3a\u4f8b\uff0c\u5b9e\u73b0\u5c06\u5355 \u7247\u673a\u9a71\u52a8\u79fb\u690d\u5230ARM Linux\u4e0b\u3002","title":"1. \u5199\u5728\u524d\u9762"},{"location":"\u624b\u628a\u624b\u6559\u4f60\u4ece\u5355\u7247\u673a\u79fb\u690d\u9a71\u52a8\u5230ARMLinux\u4e0a/#2","text":"","title":"2. \u786c\u4ef6\u73af\u5883"},{"location":"\u624b\u628a\u624b\u6559\u4f60\u4ece\u5355\u7247\u673a\u79fb\u690d\u9a71\u52a8\u5230ARMLinux\u4e0a/#21","text":"\u5f00\u53d1\u677f\uff1a\u53cb\u5584\u7535\u5b50Nano Pi T4 \u4e3b\u63a7\uff1aRK3399(ARM V8) OS:Linux version 4.4.143 \u7f16\u8bd1\u5668\uff1aaarch64-linux-gnu-gcc (gcc version 7.3.0)","title":"2.1 \u4e3b\u63a7\u73af\u5883"},{"location":"\u624b\u628a\u624b\u6559\u4f60\u4ece\u5355\u7247\u673a\u79fb\u690d\u9a71\u52a8\u5230ARMLinux\u4e0a/#22","text":"DHT11 \u6570\u5b57\u6e29\u6e7f\u5ea6\u4f20\u611f\u5668\u662f\u4e00\u6b3e\u542b\u6709\u5df2\u6821\u51c6\u6570\u5b57\u4fe1\u53f7\u8f93\u51fa\u7684\u6e29\u6e7f\u5ea6\u590d\u5408\u4f20\u611f\u5668\u3002 1\uff0e \u4f9b\u7535\u7535\u538b\uff1a3-5.5V 2\uff0e \u4f9b\u7535\u7535\u6d41\uff1a\u6700\u59272.5mA 3\uff0e \u6e29\u5ea6\u8303\u56f4\uff1a0-50\u2103 \u8bef\u5dee\u00b12\u2103 4\uff0e \u6e7f\u5ea6\u8303\u56f4\uff1a20-90%RH \u8bef\u5dee\u00b15%RH 5\uff0e \u54cd\u5e94\u65f6\u95f4: 1/e(63%) 6-30s 6\uff0e \u6d4b\u91cf\u5206\u8fa8\u7387\u5206\u522b\u4e3a 8bit\uff08\u6e29\u5ea6\uff09\u30018bit\uff08\u6e7f\u5ea6\uff09 7\uff0e \u91c7\u6837\u5468\u671f\u95f4\u9694\u4e0d\u5f97\u4f4e\u4e8e1 \u79d2\u949f","title":"2.2 \u5916\u8bbe\u73af\u5883"},{"location":"\u624b\u628a\u624b\u6559\u4f60\u4ece\u5355\u7247\u673a\u79fb\u690d\u9a71\u52a8\u5230ARMLinux\u4e0a/#3","text":"\u7531\u4e8eDHT11\u91c7\u7528\u4e86\u5355\u603b\u7ebf\u7684\u65b9\u5f0f\uff0c\u6240\u4ee5\u8f93\u5165\u8f93\u51fa\u90fd\u662f\u5728DATA\u7ebf\u4e0a\u5b8c\u6210\u4e86\uff0c\u5178\u578b\u7684\u63a5\u7ebf\u56fe\u5982\u4e0b\uff0c\u4e00\u822c\u5c06DATA\u7ebf\u63a5\u81f3CPU\u7684\u67d0\u4e2aIO\u53e3\u4e0a\u3002","title":"3.\u786c\u4ef6\u63a5\u7ebf"},{"location":"\u624b\u628a\u624b\u6559\u4f60\u4ece\u5355\u7247\u673a\u79fb\u690d\u9a71\u52a8\u5230ARMLinux\u4e0a/#31-stm32","text":":-: PE4\uff0d\uff0d\uff0d\uff0d>DATA\u7ebf","title":"3.1 STM32\u63a5\u7ebf"},{"location":"\u624b\u628a\u624b\u6559\u4f60\u4ece\u5355\u7247\u673a\u79fb\u690d\u9a71\u52a8\u5230ARMLinux\u4e0a/#32-rk3399","text":":-: GPIO1_A0\uff0d\uff0d\uff0d\uff0d>DATA\u7ebf","title":"3.2 RK3399\u63a5\u7ebf"},{"location":"\u624b\u628a\u624b\u6559\u4f60\u4ece\u5355\u7247\u673a\u79fb\u690d\u9a71\u52a8\u5230ARMLinux\u4e0a/#4","text":"\u5bf9\u4e8eDHT11\u8fd9\u79cd\u5916\u8bbe\u6765\u8bf4\uff0c\u65e0\u975e\u5c31\u662fIO\u53e3\u4e0a\u8bbe\u4e3a\u8f93\u5165\u8f93\u51fa\u95f4\u5207\u6362\uff0c\u8fdb\u800c\u8fdb\u884c\u6570\u636e\u7684\u8bfb\u5199\u64cd\u4f5c\u3002\u5bf9IO\u7684\u64cd\u4f5c\u6765\u8bf4\uff0cSTM32\u6709\u63d0\u4f9b\u4e00\u7cfb\u5217\u65b9\u4fbf\u7684\u5e93\u51fd\u6570\uff0c\u5982\uff1a void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct); void GPIO_StructInit(GPIO_InitTypeDef* GPIO_InitStruct); uint8_t GPIO_ReadInputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin); uint16_t GPIO_ReadInputData(GPIO_TypeDef* GPIOx); uint8_t GPIO_ReadOutputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin); uint16_t GPIO_ReadOutputData(GPIO_TypeDef* GPIOx); void GPIO_SetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin); void GPIO_ResetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin); void GPIO_WriteBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, BitAction BitVal); void GPIO_Write(GPIO_TypeDef* GPIOx, uint16_t PortVal); \u5bf9\u4e8elinux\u6765\u8bf4\uff0c\u540c\u6837\uff0c\u6709\u4e00\u7cfb\u5217\u65b9\u4fbf\u7684\u63a5\u53e3\uff0c\u4e0eSTM32\u5e93\u51fd\u6570\u4e0d\u540c\u7684\u662f\uff0c\u8fd9\u4e9b\u63a5\u53e3\u662f\u7ecf\u8fc7\u9ad8\u5ea6\u62bd\u8c61\u5316\u7684\uff0c\u4e0d\u76f4\u63a5\u64cd\u4f5c\u786c\u4ef6\u3002 enum of_gpio_flags { OF_GPIO_ACTIVE_LOW = 0x1, }; int of_get_named_gpio_flags(struct device_node *np, const char *propname, int index, enum of_gpio_flags *flags); int gpio_is_valid(int gpio); int gpio_request(unsigned gpio, const char *label); void gpio_free(unsigned gpio); int gpio_direction_input(int gpio); int gpio_direction_output(int gpio, int v); \u9664\u6b64\u4e4b\u5916\uff0c\u5bf9\u4e8e\u5916\u8bbe\u9a71\u52a8\u6765\u8bf4\uff0c\u9664\u4e86IO\u63a7\u5236\u4e4b\u5916\uff0c\u8fd8\u5fc5\u987b\u5bf9\u65f6\u5e8f\u6709\u4e25\u683c\u7684\u8981\u6c42\uff0c\u6bd4\u5982\u8bf4\u5ef6\u65f6\uff0c\u90a3\u4e48\uff0c\u5bf9\u4e8e\u4e00\u5b9aMCU\u6765\u8bf4\u6709\u7c7b\u4f3cSTM32 \u6ef4\u7b54\u65f6\u949f\u5b9e\u73b0\u7684\u5ef6\u65f6\uff0c\u5176\u5b9e\uff0c\u5728linux\u9a71\u52a8\u6765\u8bf4\uff0c\u4e5f\u6709\u63d0\u4f9b\u8fd9\u4e9b\u7c7b\u4f3c\u7684\u63a5\u53e3\u3002 \u6240\u4ee5\uff0c\u7efc\u4e0a\uff0c\u6211\u4eec\u4ece\u5355\u7247\u673a\u79fb\u690d\u4e00\u4e2a\u9a71\u52a8\u5230Linux\u73af\u5883\u4e0b\uff0c\u65e0\u975e\u5c31\u662f\u5c06\u63a5\u53e3\u8fdb\u884c\u66ff\u6362\u3002","title":"4. \u79fb\u690d\u539f\u7406"},{"location":"\u624b\u628a\u624b\u6559\u4f60\u4ece\u5355\u7247\u673a\u79fb\u690d\u9a71\u52a8\u5230ARMLinux\u4e0a/#5","text":"","title":"5.  \u79fb\u690d\u64cd\u4f5c"},{"location":"\u624b\u628a\u624b\u6559\u4f60\u4ece\u5355\u7247\u673a\u79fb\u690d\u9a71\u52a8\u5230ARMLinux\u4e0a/#51-gpio","text":"\u4ece\u4e0a\u6587\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u5176\u5b9e\u64cd\u4f5cLinux\u4e0b\u7684GPIO\u65e0\u975e\u5c31\u662f\u901a\u8fc7GPIO\u7684API\u8fdb\u884c\u64cd\u4f5c\uff0c\u90a3\u4e48\uff0c\u6211\u4eec\u5927\u53ef\u76f4\u63a5\u4f7f\u7528 gpio_direction_output(12,1) \u6765\u5b9e\u73b0IO\u76f4\u63a5\u64cd\u4f5c\uff0c\u4f46\u662f\u5728ARM Linux\u4e0a\u5462\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8bbe\u5907\u6811\u7684\u65b9\u5f0f\uff0c\u7075\u6d3b\u7684\u4f20\u5165 12 \u8fd9\u4e2a\u7f16\u53f7\uff0c\u5bf9\u4e8e\u672c\u6b21\u4f8b\u7a0b\uff0c\u6211\u4f7f\u7528\u4e86\u4e4b\u524d\u7684GPIO-LED\u65b9\u5f0f\u7684GPIO\uff0c\u8bbe\u5907\u6811\u5927\u6982\u5982\u4e0b\uff1a myleds: mygpio-leds { compatible = \"mygpio-leds\"; pinctrl-names = \"default\"; pinctrl-0 =<&myleds_gpio>; led@1 { gpios = <&gpio1 0 GPIO_ACTIVE_HIGH>; label = \"my_led\"; linux,default-trigger = \"heartbeat\"; linux,default-trigger-delay-ms = <0>; }; }; mygpio-leds { myleds_gpio: myleds-gpio { rockchip,pins = <1 0 RK_FUNC_GPIO &pcfg_pull_none>; }; }; \u6240\u4ee5\u6211\u4eec\u9700\u8981\u5728\u9a71\u52a8\u6dfb\u52a0\u83b7\u53d6\u5230\u8fd9\u4e2aGPIO\u7684\u5b9a\u4e49\uff1a gpios = <&gpio1 0 GPIO_ACTIVE_HIGH>; \u9996\u5148\uff0c\u6309\u7167\u524d\u9762\u7684\u7ae0\u8282\u6240\u4ecb\u7ecd\u7684\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6784\u5efa\u597d\u6211\u4eec\u7684\u8bbe\u5907\u6811\u7ed3\u6784\u4f53\uff0c\u7136\u540e\uff0c\u5c06\u540d\u5b57\u4e0e compatible = \"mygpio-leds\" \u4e2d\u7684 \"mygpio-leds\" \u4e00\u81f4\u5373\u53ef\uff0c\u770b\u4e0b\u9762\u793a\u4f8b\uff1a static const struct of_device_id of_dht11_match[] = { { .compatible = \"mygpio-leds\", }, {}, }; MODULE_DEVICE_TABLE(of, of_dht11_match); \u6700\u540e\u4f7f\u7528\u7684 MODULE_DEVICE_TABLE \u5c06\u6211\u4eec\u7684\u7ed3\u6784\u4f53\u6dfb\u52a0\u5230\u5185\u6838\u7684\u8bbe\u5907\u6811\u7684\u94fe\u8868\u4e2d\u53bb\u3002 \u6700\u540e\uff0c\u6211\u4eec\u9700\u8981\u6784\u5efa\u4e00\u4e2adrivers\u5c06\u6211\u4eec\u7684\u9a71\u52a8\u6ce8\u518c\u5230\u5185\u6838\u4e2d\u53bb\uff0c\u8ba9\u5185\u6838\u53bb\u5339\u914d\uff0c\u8fd9\u91cc\u4f7f\u7528\u4e00\u4e2aplatform \u9a71\u52a8\u4e3a\u4f8b\uff1a static struct platform_driver dht11_driver = { .probe = dht11_probe, .remove = dht11_remove, .shutdown = dht11_shutdown, .driver = { .name = \"dht11_driver\", .of_match_table = of_dht11_match, }, }; module_platform_driver(dht11_driver); \u6ce8\u610f\uff0c\u4e5f\u8981\u628a\u521a\u624d\u8bf4\u7684\u8bbe\u5907\u6811\u7684\u7ed3\u6784\u4f53\u9644\u7ed9\u8fd9\u4e2adriver,\u5982\u4e0a\u4ee3\u7801\u7247\u6bb5\u6240\u793a\u7684\uff1a .driver = { .name = \"dht11_driver\", .of_match_table = of_dht11_match, } \u6309\u7167\u4e4b\u524d\u7684\u65b9\u6cd5\uff0c\u5f53\u8bbe\u5907\u6811\u4e2d\u7684\u8282\u70b9\u4fe1\u606f\u4e0edriver\u5339\u914d \u540e\uff0c\u4f1a\u8c03\u7528probe\u51fd\u6570\uff0c\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u5728probe\u51fd\u6570\u4e2d\uff0c\u5c06 gpios = <&gpio1 0 GPIO_ACTIVE_HIGH>; \u53d6\u51fa\u6765\uff0c\u5229\u7528\u4e00\u4e9b\u8bbe\u5907\u6811\u7684API\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a struct device_node *dht11_gpio_node = pdev->dev.of_node; \u6b64\u65f6\uff0cdht11_gpio_node \u5c31\u53d6\u51fa myleds: mygpio-leds \u8fd9\u4e2a\u4e3b\u8282\u70b9\uff0c\u7136\u540e\u9700\u8981\u627e\u51fa\u8fd9\u4e2a\u5b50\u8282\u70b9\uff1a led@1 \u6240\u4ee5\uff0c\u771f\u6b63\u7684\u8282\u70b9\u7684\u662f dht11_gpio_node->child \u6240\u4ee5\u4f7f\u7528\u8d77\u6765\u7684\u6548\u679c\u662f\u8fd9\u6837\u7684\uff1a dht11_gpio = of_get_named_gpio_flags(dht11_gpio_node->child, \"gpios\", 0, &flag); \u5176\u4e2d\uff0c dht11_gpio \u5c31\u662f\u6211\u4eec\u8981\u4f7f\u7528\u7684GPIO\u7684\u5b9a\u4e49\uff0c\u6309\u8bbe\u5907\u6811\u7684\u5b9a\u4e49\u6765\u8bf4\uff0c\u5c31\u662f gpios = <&gpio1 0 GPIO_ACTIVE_HIGH>; \u5982\u679c\u4e0d\u51fa\u95ee\u9898\u7684\u8bdd\uff0c dht11_gpio\uff1d32 \u4e00\u65e6\u5f97\u5230GPIO\u53f7\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u4e4b\u524d\u63d0\u53ca\u7684GPIO\u8f93\u51fa\u8f93\u5165\u63a7\u5236\u63a5\u53e3\uff0c\u6240\u4ee5\u6700\u7ec8\uff0c\u5728probe\u51fd\u6570\u4e2d\u53ef\u4ee5\u521d\u6b65\u5199\u6210\u5982\u4e0b\uff1a static int dht11_probe(struct platform_device *pdev) { int ret; enum of_gpio_flags flag;//(flag == OF_GPIO_ACTIVE_LOW) ? printk(\"-------%s-------------\\n\", __FUNCTION__); struct device_node *dht11_gpio_node = pdev->dev.of_node; dht11_gpio = of_get_named_gpio_flags(dht11_gpio_node->child, \"gpios\", 0, &flag); if (!gpio_is_valid(dht11_gpio)) { printk(\"dht11-gpio: %d is invalid\\n\", dht11_gpio); return -ENODEV; } else printk(\"dht11-gpio: %d is valid!\\n\", dht11_gpio); if (gpio_request(dht11_gpio, \"dht11-gpio\")) { printk(\"gpio %d request failed!\\n\", dht11_gpio); gpio_free(dht11_gpio); return -ENODEV; } else printk(\"gpio %d request success!\\n\", dht11_gpio); }","title":"5.1  \u4ece\u8bbe\u5907\u6811\u4e2d\u4f20\u5165GPIO\u53e3\u5b9a\u4e49"},{"location":"\u624b\u628a\u624b\u6559\u4f60\u4ece\u5355\u7247\u673a\u79fb\u690d\u9a71\u52a8\u5230ARMLinux\u4e0a/#52-stm32","text":"\u6309\u524d\u6587\u6240\u8ff0\uff0c\u5c31\u662f\u5c06STM32\u4e2d\u5173\u4e8eIO\u53e3\u64cd\u4f5c\u7684\u63a5\u53e3\u6362\u6210Linux\u4e2d\u7684\uff0c\u4e0b\u9762\u5f00\u59cb\u9010\u6b65\u5206\u89e3","title":"5.2  \u66ff\u6362STM32\u4e2d\u7684\u63a5\u53e3"},{"location":"\u624b\u628a\u624b\u6559\u4f60\u4ece\u5355\u7247\u673a\u79fb\u690d\u9a71\u52a8\u5230ARMLinux\u4e0a/#521","text":"\u6211\u4eec\u5148\u6765\u770b\u4e00\u4e0bSTM32\u4e2d\u5173\u4e8eGPIO\u4e2d\u64cd\u4f5c\u7684\u5b8f\u5b9a\u4e49\u76f8\u5173\u7684\uff1a #define IO_DHT11 GPIO_Pin_4 //\u5f15\u5165\u4e2d\u95f4\u53d8\u91cf\uff0c\u65b9\u4fbf\u79fb\u690d #define GPIO_DHT11 GPIOE //\u5f15\u5165\u4e2d\u95f4\u53d8\u91cf\uff0c\u65b9\u4fbf\u79fb\u690d #define DHT11_DQ_High GPIO_SetBits(GPIO_DHT11,IO_DHT11) #define DHT11_DQ_Low GPIO_ResetBits(GPIO_DHT11,IO_DHT11) \u66ff\u6362\u6210\u8fd9\u6837\uff1a static int dht11_gpio; //data\u7ebf\u5b8f\u5b9a\u4e49\uff0c\u66ff\u6362STM32\u4e2dGPIOXX #define DHT11_DQ_High gpio_direction_output(dht11_gpio, 1) #define DHT11_DQ_Low gpio_direction_output(dht11_gpio, 0) \u8fd9\u91cc\u7684\u53c2\u6570\uff1a dht11_gpio \u5c31\u662f\u524d\u9762\u901a\u8fc7\u8bbe\u5907\u6811API\u4ece\u8bbe\u5907\u6811\u4e2d\u8bfb\u5230\u7684\u3002\u6240\u4ee5\u524d\u9762\uff0c\u4e3a\u4e86\u65b9\u4fbf\uff0c\u76f4\u63a5\u5c06\u5176\u505a\u4e86\u5168\u5c40\u53d8\u91cf\u4e86\u3002","title":"5.2.1  \u66ff\u6362\u5b8f\u5b9a\u4e49\u63a5\u53e3"},{"location":"\u624b\u628a\u624b\u6559\u4f60\u4ece\u5355\u7247\u673a\u79fb\u690d\u9a71\u52a8\u5230ARMLinux\u4e0a/#522","text":"\u719f\u6089STM32\u5355\u7247\u673a\u7684\u7ae5\u978b\u4e00\u822c\u90fd\u77e5\u9053\u5728STM32\u4e0a\u4f7f\u7528\u7684\u5ef6\u65f6\u51fd\u6570\uff0c\u4e00\u822c\u662f\u901a\u8fc7\u6ef4\u7b54\uff08systick\uff09\u5b9e\u73b0\u7684\uff0c\u4e3a\u4e86\u79fb\u690d\u8fc7\u7a0b\u4e2d\uff0c\u66ff\u6362\u4ee3\u7801\u91cf\u5c11\uff0c\u6211\u76f4\u63a5\u5c06\u539f\u4ee3\u7801\u4e2d\u7684\u63a5\u53e3\u5b8f\u5b9a\u4e49\u4e86\uff1a #define delay_us(x) udelay(x) #define delay_ms(x) msleep(x)","title":"5.2.2  \u66ff\u6362\u5ef6\u65f6\u63a5\u53e3"},{"location":"\u624b\u628a\u624b\u6559\u4f60\u4ece\u5355\u7247\u673a\u79fb\u690d\u9a71\u52a8\u5230ARMLinux\u4e0a/#523","text":"\u4e3b\u8981\u6709\u4ee5\u4e0b\u7684\u63a5\u53e3\uff1a void DHT11_IO_OUT(void);//\u6e29\u6e7f\u5ea6\u6a21\u5757\u8f93\u51fa\u51fd\u6570 void DHT11_IO_IN(void); //\u6e29\u6e7f\u5ea6\u6a21\u5757\u8f93\u5165\u51fd\u6570 void DHT11_Init(void); //\u521d\u59cb\u5316DHT11 u8 DHT11_Read_DQ(void); //\u8bfb\u53d6Data\u7ebf\u7535\u5e73 u8 DHT11_Read_Data(u8 *temp,u8 *humi);//\u8bfb\u53d6\u6e29\u6e7f\u5ea6 u8 DHT11_Read_Byte(void); //\u8bfb\u51fa\u4e00\u4e2a\u5b57\u8282 u8 DHT11_Read_Bit(void); //\u8bfb\u51fa\u4e00\u4e2a\u4f4d u8 DHT11_Check(void); //\u68c0\u6d4b\u662f\u5426\u5b58\u5728DHT11 void DHT11_Rst(void); //\u590d\u4f4dDHT11 \u4e0b\u9762\u6765\u770b\u4e00\u4e2a\u4e2a\u51fd\u6570\u4fee\u6539\u79fb\u690d\u7684\u6548\u679c","title":"5.2.3  \u64cd\u4f5c\u51fd\u6570\u63a5\u53e3\u66ff\u6362"},{"location":"\u624b\u628a\u624b\u6559\u4f60\u4ece\u5355\u7247\u673a\u79fb\u690d\u9a71\u52a8\u5230ARMLinux\u4e0a/#5231-void-dht11_io_outvoid","text":"void DHT11_IO_OUT(void)//\u6e29\u6e7f\u5ea6\u6a21\u5757\u8f93\u51fa\u51fd\u6570 { GPIO_InitTypeDef GPIO_InitStructure; GPIO_InitStructure.GPIO_Pin=IO_DHT11; GPIO_InitStructure.GPIO_Speed=GPIO_Speed_50MHz; GPIO_InitStructure.GPIO_Mode=GPIO_Mode_Out_PP; GPIO_Init(GPIO_DHT11,&GPIO_InitStructure); } \u66ff\u6362\uff1a\u5176\u5b9e\u8fd9\u4e2a\u51fd\u6570\u7684\u4f5c\u7528\u65e0\u975e\u5c31\u662f\u5c06IO\u8bbe\u4e3a\u8f93\u51fa\u6a21\u5f0f\uff0c\u7136\u540e\u4f7f\u7528 DHT11_DQ_High \u6216\u8005 DHT11_DQ_Low \u8f93\u51fa\u9ad8\u4f4e\u7535\u5e73\uff0c\u800c\u6211\u4eec\u79fb\u690d\u7684\u5b8f\u5b9a\u4e49\uff0c\u5df2\u7ecf\u5b9e\u73b0\u4e86\u5148\u8bbe\u7f6e\u4e3a\u8f93\u51fa\u518d\u8f93\u51fa\u9ad8\u4f4e\u7535\u5e73\uff0c\u4e00\u6b65\u5230\u4f4d\uff01","title":"5.2.3.1 void DHT11_IO_OUT(void) ;"},{"location":"\u624b\u628a\u624b\u6559\u4f60\u4ece\u5355\u7247\u673a\u79fb\u690d\u9a71\u52a8\u5230ARMLinux\u4e0a/#5232-void-dht11_io_invoid","text":"STM32\u4e0a\u539f\u59cb\u7684\u6837\u5b50\uff1a void DHT11_IO_IN(void)//\u6e29\u6e7f\u5ea6\u6a21\u5757\u8f93\u5165\u51fd\u6570 { GPIO_InitTypeDef GPIO_InitStructure; GPIO_InitStructure.GPIO_Pin=IO_DHT11; GPIO_InitStructure.GPIO_Mode=GPIO_Mode_IN_FLOATING; GPIO_Init(GPIO_DHT11,&GPIO_InitStructure); } \u66ff\u6362\u6210\u8fd9\u6837\uff1a void DHT11_IO_IN(void)//\u6e29\u6e7f\u5ea6\u6a21\u5757\u8f93\u5165\u51fd\u6570 { gpio_direction_input(dht11_gpio); }\uff1b","title":"5.2.3.2 void DHT11_IO_IN(void) ;"},{"location":"\u624b\u628a\u624b\u6559\u4f60\u4ece\u5355\u7247\u673a\u79fb\u690d\u9a71\u52a8\u5230ARMLinux\u4e0a/#5233-u8-dht11_read_dqvoid","text":"STM32\u4e0a\u539f\u59cb\u7684\u6837\u5b50\uff1a u8 DHT11_Read_DQ(void) { return GPIO_ReadInputDataBit(GPIO_DHT11,IO_DHT11); } \u66ff\u6362\u6210\uff1a static u8 DHT11_Read_DQ(void) { return gpio_get_value(dht11_gpio); }","title":"5.2.3.3 u8 DHT11_Read_DQ(void);"},{"location":"\u624b\u628a\u624b\u6559\u4f60\u4ece\u5355\u7247\u673a\u79fb\u690d\u9a71\u52a8\u5230ARMLinux\u4e0a/#5234","text":"\u5230\u6b64\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5176\u5b9e\u5bf9\u4e8e\u6bd4\u8f83\u4e0a\u5c42\u4e00\u70b9\u7684\u51fd\u6570\uff0c\u5176\u5b9e\u51fd\u6570\u57fa\u672c\u4e0a\u53ef\u4ee5\u76f4\u63a5\u7528\u4e86\uff0c\u56e0\u4e3a\u6211\u4eec\u5b8c\u6210\u4e86\u5e95\u5c42\u7684\u63a5\u53e3\u7684\u66ff\u6362\u4e4b\u540e\uff0c\u4ee3\u7801\u57fa\u672c\u4e0a\u4e00\u81f4\u3002\u4e0b\u9762\u5c31\u4e0d\u518d\u4e00\u4e00\u8d58\u8ff0\u8fd9\u4e9b\u51fd\u6570\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u770b\u6574\u4e2a\u4ee3\u7801\u79fb\u690d\u524d\u540e\u7684\u5bf9\u6bd4\u56fe\uff1a","title":"5.2.3.4  \u603b\u7ed3\u5bf9\u6bd4"},{"location":"\u624b\u628a\u624b\u6559\u4f60\u4ece\u5355\u7247\u673a\u79fb\u690d\u9a71\u52a8\u5230ARMLinux\u4e0a/#5235","text":"//\u590d\u4f4dDHT11 void DHT11_Rst(void) { DHT11_IO_OUT(); //SET OUTPUT DHT11_DQ_Low; //DQ=0 delay_ms(20); //\u62c9\u4f4e\u81f3\u5c1118ms DHT11_DQ_High; //DQ=1 delay_us(30); //\u4e3b\u673a\u62c9\u9ad820~40us } //\u7b49\u5f85DHT11\u7684\u56de\u5e94 //\u8fd4\u56de1:\u672a\u68c0\u6d4b\u5230DHT11\u7684\u5b58\u5728 //\u8fd4\u56de0:\u5b58\u5728 u8 DHT11_Check(void) { u8 retry=0;//\u5b9a\u4e49\u4e34\u65f6\u53d8\u91cf DHT11_IO_IN();//SET INPUT while ((DHT11_Read_DQ()==1)&&retry<100)//DHT11\u4f1a\u62c9\u4f4e40~80us { retry++; delay_us(1); }; if(retry>=100)return 1; else retry=0; while ((DHT11_Read_DQ())==0)&&retry<100)//DHT11\u62c9\u4f4e\u540e\u4f1a\u518d\u6b21\u62c9\u9ad840~80us { retry++; delay_us(1); }; if(retry>=100)return 1; return 0; } //\u4eceDHT11\u8bfb\u53d6\u4e00\u4e2a\u4f4d //\u8fd4\u56de\u503c\uff1a1/0 u8 DHT11_Read_Bit(void) { u8 retry=0; while((DHT11_Read_DQ()==1)&&retry<100)//\u7b49\u5f85\u53d8\u4e3a\u4f4e\u7535\u5e73 { retry++; delay_us(1); } retry=0; while((DHT11_Read_DQ()==0)&&retry<100)//\u7b49\u5f85\u53d8\u9ad8\u7535\u5e73 { retry++; delay_us(1); } delay_us(40);//\u7b49\u5f8540us if(DHT11_Read_DQ()==1) return 1; else return 0; } //\u4eceDHT11\u8bfb\u53d6\u4e00\u4e2a\u5b57\u8282 //\u8fd4\u56de\u503c\uff1a\u8bfb\u5230\u7684\u6570\u636e u8 DHT11_Read_Byte(void) { u8 i,dat; dat=0; for (i=0;i<8;i++) { dat<<=1; dat|=DHT11_Read_Bit(); } return dat; } //\u4eceDHT11\u8bfb\u53d6\u4e00\u6b21\u6570\u636e //temp:\u6e29\u5ea6\u503c(\u8303\u56f4:0~50\u00b0) //humi:\u6e7f\u5ea6\u503c(\u8303\u56f4:20%~90%) //\u8fd4\u56de\u503c\uff1a0,\u6b63\u5e38;1,\u8bfb\u53d6\u5931\u8d25 u8 DHT11_Read_Data(u8 *temp,u8 *humi) { u8 buf[5]; u8 i; DHT11_Rst(); if(DHT11_Check()==0) { for(i=0;i<5;i++)//\u8bfb\u53d640\u4f4d\u6570\u636e { buf[i]=DHT11_Read_Byte(); } if((buf[0]+buf[1]+buf[2]+buf[3])==buf[4]) { *humi=buf[0]; *temp=buf[2]; } }else return 1; return 0; } //\u521d\u59cb\u5316DHT11\u7684IO\u53e3 DQ \u540c\u65f6\u68c0\u6d4bDHT11\u7684\u5b58\u5728 //\u8fd4\u56de1:\u4e0d\u5b58\u5728 //\u8fd4\u56de0:\u5b58\u5728 void DHT11_Init(void) { DHT11_Rst(); //\u590d\u4f4dDHT11 DHT11_Check();//\u7b49\u5f85DHT11\u7684\u56de\u5e94 }","title":"5.2.3.5  \u5176\u4ed6\u76f4\u63a5\u65e0\u7f1d\u4f7f\u7528\u7684\u7684\u4ee3\u7801"},{"location":"\u624b\u628a\u624b\u6559\u4f60\u4ece\u5355\u7247\u673a\u79fb\u690d\u9a71\u52a8\u5230ARMLinux\u4e0a/#6","text":"\u6309\u7167\u4e4b\u524d\u7684\u6559\u7a0b\uff0c\u7f16\u5199\u5b57\u7b26\u9a71\u52a8\u6846\u67b6\uff0c\u6700\u7ec8\u521b\u5efa\u4e00\u4e2a\u5b57\u7b26\u8bbe\u5907 /dev/dht11 \u4f9b\u4e0a\u5c42\u5e94\u7528\u8bfb\u5199\uff0c\u4e3b\u8981\u5728read\u51fd\u6570\u4e2d\uff0c\u8c03\u7528 DHT11_Read_Data \uff0c\u5c06\u8bfb\u5230\u7684\u6e29\u6e7f\u5ea6\u4f20\u7ed9\u4e0a\u5c42\u3002 read\u51fd\u6570\u6548\u679c\u5927\u81f4\u5982\u4e0b\uff1a static ssize_t DHT11_read(struct file *file, char __user *buf, size_t nbytes, loff_t *ppos) { printk(\"--------------%s--------------\\n\",__FUNCTION__); dht11_data Last_dht11_data; if(DHT11_Read_Data(&Last_dht11_data.temp,&Last_dht11_data.hum) == 0);//\u8bfb\u53d6\u6e29\u6e7f\u5ea6\u503c { if ( copy_to_user(buf,&Last_dht11_data,sizeof(Last_dht11_data)) ) { return EFAULT ; } } } .... static struct file_operations dht11_fops = { .owner = THIS_MODULE, .read = DHT11_read, .open = DHT11_open, .release = DHT11_close, }; ......","title":"6. \u52a0\u5165\u5230\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u6846\u67b6"},{"location":"\u624b\u628a\u624b\u6559\u4f60\u4ece\u5355\u7247\u673a\u79fb\u690d\u9a71\u52a8\u5230ARMLinux\u4e0a/#7","text":"#include <stdio.h> #include <stdlib.h> #include <unistd.h> #include <sys/types.h> #include <sys/stat.h> #include <fcntl.h> #include <errno.h> typedef unsigned char u8; typedef unsigned short u16; typedef struct DHT11_SENSOR_DATA { u16 temp;//\u6e29\u5ea6 u16 hum;//\u6e7f\u5ea6 }dht11_data; int main ( void ) { int fd ; int retval ; dht11_data Curdht11_data; fd = open ( \"/dev/dht11\" , O_RDONLY) ; if ( fd == -1 ) { perror ( \"open dht11 error\\n\" ) ; exit ( -1 ) ; } printf ( \"open /dev/dht11 successfully\\n\" ) ; sleep ( 2 ) ; while ( 1 ) { sleep ( 1 ) ; retval = read ( fd , &Curdht11_data , sizeof(Curdht11_data) ); if ( retval == -1 ) { perror ( \"read dht11 error\" ) ; printf ( \"read dht11 error\" ) ; exit ( -1 ) ; } if(Curdht11_data.temp != 0xffff) printf ( \"Temperature:%d.%d C,Humidity:%d.%d %%RH\\n\",Curdht11_data.temp>>8,Curdht11_data.temp&0xff,\\ Curdht11_data.hum>>8,Curdht11_data.hum&0xff ) ; } close ( fd ) ; }","title":"7. \u6d4b\u8bd5\u4ee3\u7801"},{"location":"\u624b\u628a\u624b\u6559\u4f60\u4ece\u5355\u7247\u673a\u79fb\u690d\u9a71\u52a8\u5230ARMLinux\u4e0a/#8","text":"","title":"8.  \u6d4b\u8bd5\u6548\u679c"},{"location":"\u624b\u628a\u624b\u6559\u4f60\u4ece\u5355\u7247\u673a\u79fb\u690d\u9a71\u52a8\u5230ARMLinux\u4e0a/#9","text":"Github","title":"9.  \u4ee3\u7801\u5f00\u6e90\u5730\u5740"},{"location":"\u9a71\u52a8\u7b2c\u4e00\u5929---\u9a71\u52a8\u57fa\u7840/","text":"\u9a71\u52a8\u7b2c\u4e00\u5929---\u9a71\u52a8\u57fa\u7840 \u76ee\u5f55\uff1a \u9a71\u52a8\u7b2c\u4e00\u5929---\u9a71\u52a8\u57fa\u7840 \u5f00\u53d1\u73af\u5883\u642d\u5efa \u4e00\u3001tftp \u670d\u52a1\u5668\u642d\u5efa\uff08ubuntu\u7248\uff09 \u4e8c\u3001\u5f00\u53d1\u677f\u7684\u4e0d\u540c\u542f\u52a8\u65b9\u5f0f \u4e09\u3001\u5f00\u53d1\u677f\u6302\u8f7dNFS\u670d\u52a1\u5668 \u5229\u7528source insight\u521b\u5efaLinux\u6e90\u7801\u5de5\u7a0b \u9a71\u52a8\u6a21\u5757\u5f00\u53d1\u57fa\u7840 \u6700\u7b80\u5355\u7684\u9a71\u52a8Demo: \u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u57fa\u7840 \u5f00\u53d1\u73af\u5883\u642d\u5efa \u5229\u7528source insight\u521b\u5efaLinux\u6e90\u7801\u5de5\u7a0b \u9a71\u52a8\u6a21\u5757\u5f00\u53d1\u57fa\u7840 \u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u57fa\u7840 \u5f00\u53d1\u73af\u5883\u642d\u5efa \u4e00\u3001tftp \u670d\u52a1\u5668\u642d\u5efa\uff08ubuntu\u7248\uff09 1.\u5b89\u88c5tftp-server sudo apt-get install tftpd-hpa 2.\u914d\u7f6eTFTP\u670d\u52a1\u5668 sudo vim /etc/default/tftpd-hpa \u5c06\u539f\u6765\u7684\u5185\u5bb9\u6539\u4e3a: TFTP_USERNAME=\"tftp\" TFTP_ADDRESS=\"0.0.0.0:69\" TFTP_DIRECTORY=\"tftp\u6839\u76ee\u5f55\" #\u670d\u52a1\u5668\u76ee\u5f55,\u9700\u8981\u8bbe\u7f6e\u6743\u9650\u4e3a777,chomd 777 TFTP_OPTIONS=\"-l -c -s\" 3.\u91cd\u65b0\u542f\u52a8TFTP\u670d\u52a1 sudo service tftpd-hpa restart 4.\u6d4b\u8bd5 sudo netstat -a | grep tftp \u53ef\u4ee5\u770b\u5230\uff1a udp0 0 0.0.0.0:tftp0.0.0.0:* udp6 0 0 [::]:tftp [::]:* \u5219\u8868\u793atftpserver\u642d\u5efa\u6210\u529f\u4e86\u3002 \u4e8c\u3001\u5f00\u53d1\u677f\u7684\u4e0d\u540c\u542f\u52a8\u65b9\u5f0f 1\u3001\u901a\u8fc7\u7f51\u7edc\u52a0\u8f7d\u5185\u6838\u548c\u6587\u4ef6\u7cfb\u7edf a)\u5c06 \u955c\u50cf\u6587\u4ef6/uImage\u62f7\u8d1d\u5230ubuntu\u7684 /tftpboot\u4e0b b)\u5c06 \u955c\u50cf\u6587\u4ef6/rootfs.tar.xz\u62f7\u8d1d\u5230ubuntu\u7684 /source\u4e0b\u5e76\u89e3\u538b c)\u5c06 \u955c\u50cf\u6587\u4ef6/exynos4412-fs4412.dtb\u62f7\u8d1d\u5230ubuntu\u7684 /tftpboot\u4e0b d)\u4fee\u6539\u865a\u62df\u673anfs\u914d\u7f6e\u6587\u4ef6/etc/exports\uff0c\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9\u5e76\u91cd\u542fnfs\u670d\u52a1 /source/rootfs *(rw,sync,no_subtree_check,no_root_squash) e)\u91cd\u65b0\u9a71\u52a8nfs\u670d\u52a1 $ sudo /etc/init.d/nfs-kernel-server restart f)\u8bbe\u7f6e\u542f\u52a8\u53c2\u6570 # setenv serverip 192.168.9.120 # setenv ipaddr 192.168.9.233 # setenv bootcmd tftp 41000000 uImage;tftp 42000000 exynos4412- fs4412.dtb;bootm 41000000-42000000 #setenv bootargs root=/dev/nfs nfsroot=192.168.9.120:/source/rootfs rw console=ttySAC2,115200 init=/linuxrc ip=192.168.9.233 # saveenv \u6ce8\u610f\uff1a\u8fd9\u4e24\u4e2aip\u5e94\u8be5\u6839\u636e\u81ea\u5df1\u7684\u5b9e\u9645\u60c5\u51b5\u9002\u5f53\u4fee\u6539 192.168.9.120 \u5bf9\u5e94Ubuntu\u7684ip\uff1b 192.168.9.233 \u5bf9\u5e94\u677f\u5b50\u7684ip 2\u3001\u4eceEMMC\u52a0\u8f7d\u5185\u6838\u548c\u6587\u4ef6\u7cfb\u7edf a)\u62f7\u8d1d\u955c\u50cf\u6587\u4ef6/ramdisk.img\u62f7\u8d1d\u5230\u865a\u62df\u673a/tftpboot\u76ee\u5f55\u4e0b b)\u70e7\u5199\u5185\u6838\u955c\u50cf\u5230EMMC\u4e0a tftp 41000000 uImage movi write kernel 41000000 c)\u70e7\u5199\u8bbe\u5907\u6811\u6587\u4ef6\u5230EMMC\u4e0a tftp 41000000 exynos4412-fs4412.dtb movi write dtb 41000000 d)\u70e7\u5199\u6587\u4ef6\u7cfb\u7edf\u955c\u50cf\u5230EMMC\u4e0a tftp 41000000 ramdisk.img movi write rootfs 41000000 300000 e)\u8bbe\u7f6e\u542f\u52a8\u53c2\u6570 setenv bootcmd movi read kernel 41000000\\;movi read dtb 42000000\\; movi read rootfs 43000000 300000\\;bootm 41000000 43000000 42000000 saveenv f)\u91cd\u65b0\u542f\u52a8\u5f00\u53d1\u677f\uff0cu-boot\u81ea\u52a8\u52a0\u8f7d\u3001\u6267\u884c\u5185\u6838 \u4e09\u3001\u5f00\u53d1\u677f\u6302\u8f7dNFS\u670d\u52a1\u5668 \u9996\u5148\uff0c\u5728ubuntu\u4e0a\u5b89\u88c5\uff1a sudo apt-get install nfs-kernel-server \u4fee\u6539\u865a\u62df\u673anfs\u914d\u7f6e\u6587\u4ef6/etc/exports\uff0c\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9\u5e76\u91cd\u542fnfs\u670d\u52a1 /xx/xx *(rw,sync,no_subtree_check,no_root_squash) \u6ce8\u610f\uff1axx/xx\u662f\u4f60\u8981\u505a\u4e3anfs\u670d\u52a1\u5668\u7684\u76ee\u5f55 \u91cd\u65b0\u9a71\u52a8nfs\u670d\u52a1 $ sudo /etc/init.d/nfs-kernel-server restart \u5728\u5f00\u53d1\u677f\u4e0a\uff0c\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\uff1a mount -t nfs -o nolock 192.168.10.10:/home/ubuntu/share/nfs /mnt/ \u5229\u7528source insight\u521b\u5efaLinux\u6e90\u7801\u5de5\u7a0b \u53c2\u8003\u94fe\u63a5\uff1a http://bbs.elecfans.com/forum.php?mod=viewthread&tid=1114963&extra= \u9a71\u52a8\u6a21\u5757\u5f00\u53d1\u57fa\u7840 \u5185\u6838\u6a21\u5757\u662f\u4ec0\u4e48\uff1f Kconfig Makefile \u7684\u542b\u4e49\uff1f \u4ee5\u4efb\u610f\u4e00\u4e2a\u9009\u9879\u7684\u5b57\u7b26\u4e32\u53bb\u5185\u6838 \u91cc\u9762\u67e5\u627e\u76f8\u5bf9\u7684\u6e90\u7801\uff1a \u5728\u5185\u6838\u5de5\u7a0b\u91cc\u9762\u76f4\u63a5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u53ef\u4ee5\u751f\u6210 mkdir -p module_install #\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939\u7528\u4e8e\u5b58\u653e\u7f16\u8bd1\u751f\u6210\u7684\u6a21\u5757\u7684\u5b89\u88c5\u76ee\u5f55 make INSTALL_MOD_PATH=module_install modules #\u7f16\u8bd1\u6a21\u5757 make INSTALL_MOD_PATH=module_install modules_install #\u5b89\u88c5\u6a21\u5757\u5230\u6307\u5b9a\u76ee\u5f55 \u9a71\u52a8\u6a21\u5757\u5f00\u53d1\uff1a \u9a71\u52a8\u5f00\u53d1\u56db\u6b65\u8d70 1\uff0c\u5934\u6587\u4ef6 2\uff0c\u9a71\u52a8\u6a21\u5757\u88c5\u8f7d\u548c\u5378\u8f7d\u51fd\u6570\u5165\u53e3\u5230\u58f0\u660e 3\uff0c\u5b9e\u73b0\u6a21\u5757\u88c5\u8f7d\u548c\u5378\u8f7d\u51fd\u6570\u5165\u53e3 4\uff0cGPL\u58f0\u660e \u6700\u7b80\u5355\u7684\u9a71\u52a8Demo: #include <linux/init.h> #include <linux/module.h> #include <linux/stat.h> static int __init hello_drv_init(void) { //\u4e00\u822c\u505a\u7cfb\u7edf\u7533\u8bf7\u8d44\u6e90 printk(\"-------%s-------------\\n\", __FUNCTION__); return 0; } static void __exit hello_drv_exit(void) { //\u4e00\u822c\u505a\u7cfb\u7edf\u91ca\u653e\u8d44\u6e90 printk(\"-------%s-------------\\n\", __FUNCTION__); } module_init(hello_drv_init); module_exit(hello_drv_exit); MODULE_LICENSE(\"GPL\"); \u9a71\u52a8\u7684makefile ROOTFS_DIR = /home/ubuntu/share/nfs ifeq ($(KERNELRELEASE), ) KERNEL_DIR = /home/ubuntu/work/linux-3.14-fs4412 CUR_DIR = $(shell pwd) all : make -C $(KERNEL_DIR) M=$(CUR_DIR) modules clean : make -C $(KERNEL_DIR) M=$(CUR_DIR) clean install: cp -raf *.ko $(ROOTFS_DIR) else obj-m += hello_drv.o #obj-m += math.o endif PS\uff1a\u5982\u679c\u8981\u7f16\u8bd1\u591a\u6e90\u7801\u6784\u6210\u7684\u4e00\u4e2a\u6a21\u5757\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\uff1a vers-objs = xx.o xxx.o .... \u9a71\u52a8\u76f8\u5173\u547d\u4ee4\uff1a \u5b89\u88c5\uff1ainsmod xxxx.ko \u67e5\u770b\u6a21\u5757\u5b89\u88c5\u5217\u8868\uff1alsmod \u5378\u8f7d\uff1armmod xxx \u4fe1\u606f:modinfo \u67e5\u770b\u6a21\u5757\u76f8\u5e94\u7684\u4fe1\u606f\u4ee5\u53ca\u4f9d\u8d56\u9879 modprobe \u5b89\u88c5\u547d\u4ee4\uff0c1\u3001\u89e3\u51b3\u4f9d\u8d56\u9879 2\u3001\u53ef\u4ee5\u76f4\u63a5\u5728\u76ee\u5f55\u4e0b\u641c\u7d22\u76f8\u5173\u7684\u9a71\u52a8\uff0c\u4e0d\u9700\u8981\u5e26.ko\u5373\u53ef \u5378\u8f7d\u9a71\u52a8\u51fa\u9519\uff1a rmmod fs4412_led rmmod: can't change directory to '/lib/modules': No such file or directory \u89e3\u51b3\u65b9\u6848\uff1a mkdir -p /lib/modules/3.14.0 1\uff0c\u53c2\u6570\u4f20\u9012 \u52a0\u8f7dko\uff1a insmod hello.ko myname=\"avd\" myvalue=33 \u7528\u9014\uff1a wifi\u9a71\u52a8\uff0cwifiname wifipass \u5728\u4ee3\u7801\u5982\u4f55\u5904\u7406\u53c2\u6570\uff1a module_param(name, type, perm) \u53c2\u65701\uff1a\u8868\u793a\u53c2\u6570\u5230\u540d\u5b57\uff0c\u6bd4\u5982myname\uff0c myvalue \u53c2\u65702\uff1a\u53c2\u6570\u5230\u7c7b\u578b, charp, int,bool... \u53c2\u65703\uff1a /sys/modules/\u8868\u793a\u6587\u4ef6\u5230\u6743\u9650\uff1a 0666 \u7528\u6cd5\uff1a module_param(myvalue, int, 0666); module_param(myname, charp, S_IRUGO|S_IWUGO|S_IXUGO); 2\uff0c\u7b26\u53f7\u5bfc\u51fa #include <linux/module.h> #include <linux/init.h> //\u4e0d\u9700\u8981\u6a21\u5757\u52a0\u8f7d\u548c\u5378\u8f7d\u5230\u5165\u53e3\u58f0\u660e\uff0c\u76f4\u63a5\u5b9a\u4e49\u597d\u4e00\u4e9b\u5c01\u88c5\u7684\u51fd\u6570 int my_add(int a, int b) { return a+b; } EXPORT_SYMBOL(my_add); int my_sub(int a, int b) { return a-b; } EXPORT_SYMBOL(my_sub); MODULE_LICENSE(\"GPL\"); \u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u57fa\u7840 \u4e00\u3001 linux \u8bbe\u5907\u9a71\u52a8\u7c7b\u578b\u4e3b\u8981\u6709\u4ee5\u4e0b\u56db\u79cd\uff1a\u5b57\u7b26\u8bbe\u5907\uff0c\u5757\u8bbe\u5907\uff0c\u7f51\u7edc\u8bbe\u5907\uff0c\u6742\u9879\u8bbe\u5907 \u4e8c\u3001\u8bbe\u5907\u53f7\uff1a \u4e00\u4e2a\u8bbe\u5907\u6709\u4e3b\u6b21\u8bbe\u5907\u53f7\uff1b\u4e3b\u8bbe\u5907\u53f7\u53ef\u4ee5\u7406\u89e3\u6210\u4e3a\u4e00\u7c7b\uff0c\u800c\u6b21\u8bbe\u5907\u53ef\u4ee5\u7406\u89e3\u6210\u4e3a\u5177\u4f53\u67d0\u4e2a\u5bf9\u8c61 \u4ee5\u4e0b\u9762\u7684\u4e3a\u4f8b\uff1a 7:0 -> ../loop0 7:1 -> ../loop1 7:2 -> ../loop2 7:3 -> ../loop3 7:4 -> ../loop4 7:5 -> ../loop5 7:6 -> ../loop6 7:7 -> ../loop7 7\u4ee3\u8868\u4e3b\u8bbe\u5907\u53f7\uff0c0~7\u4ee3\u8868\u5404\u4e2a\u8bbe\u5907\u7684\u6b21\u8bbe\u5907\u53f7 \u4e09\u3001Linux\u63d0\u4f9b\u7684\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u63a5\u53e3 3.1\u3001\u7533\u8bf7\u6ce8\u518c\u4e00\u4e2a\u8bbe\u5907\uff08char \u5b57\u7b26\u8bbe\u5907\uff09\uff1a static inline int register_chrdev(unsigned int major, const char *name, const struct file_operations *fops); \u53c2\u65701\u3001major \u8868\u8bbe\u5907\u53f7\uff0832\u4f4d\u7684\u503c \u7531\u4e3b+\u6b21\u8bbe\u5907\u53f7\u6784\u6210\uff09\u9ad812\u4f4d\u4e3b\u8bbe\u5907\u53f7+\u4f4e20\u4f4d\u7684\u6b21\u8bbe\u5907\u53f7\u6784\u6210 exp: \u4e3b\u8bbe\u5907\u53f7\uff1a1 \u6b21\u8bbe\u5907\u53f7\uff1a2 \u8bbe\u5907\u53f7=1<<20|2 =12\u6784\u6210\u4e86\u8bbe\u5907\u53f7 #define MINORBITS 20 #define MINORMASK ((1U << MINORBITS) - 1) #define MKDEV(ma,mi) (((ma) << MINORBITS) | (mi)) #define MAJOR(dev) ((unsigned int) ((dev) >> MINORBITS)) #define MINOR(dev) ((unsigned int) ((dev) & MINORMASK)) //\u6ce8\uff1ama\u8868\u793a\u4e3b\u8bbe\u5907\u53f7\uff0cmi\u8868\u793a\u6b21\u8bbe\u5907\u53f7 \u53c2\u65702\uff1aname \u8868\u793a\u8bbe\u5907\u540d\u5b57 /dev/\u4e0b\u9762\u7684\u8bbe\u5907\u540d\u5b57 /dev/xxx \u53c2\u65703\uff1afile_operations \u8868\u793a\u6587\u4ef6\u64cd\u4f5c\u96c6\uff1a\u6bd4\u5982\u5e38\u89c1\u7684open,read,write,close,ioctl..... struct file_operations { struct module *owner; loff_t (*llseek) (struct file *, loff_t, int); ssize_t (*read) (struct file *, char __user *, size_t, loff_t *); ssize_t (*write) (struct file *, const char __user *, size_t, loff_t *); ssize_t (*aio_read) (struct kiocb *, const struct iovec *, unsigned long, loff_t); ssize_t (*aio_write) (struct kiocb *, const struct iovec *, unsigned long, loff_t); int (*iterate) (struct file *, struct dir_context *); unsigned int (*poll) (struct file *, struct poll_table_struct *); long (*unlocked_ioctl) (struct file *, unsigned int, unsigned long); long (*compat_ioctl) (struct file *, unsigned int, unsigned long); int (*mmap) (struct file *, struct vm_area_struct *); int (*open) (struct inode *, struct file *); int (*flush) (struct file *, fl_owner_t id); int (*release) (struct inode *, struct file *); int (*fsync) (struct file *, loff_t, loff_t, int datasync); int (*aio_fsync) (struct kiocb *, int datasync); int (*fasync) (int, struct file *, int); int (*lock) (struct file *, int, struct file_lock *); ssize_t (*sendpage) (struct file *, struct page *, int, size_t, loff_t *, int); unsigned long (*get_unmapped_area)(struct file *, unsigned long, unsigned long, unsigned long, unsigned long); int (*check_flags)(int); int (*flock) (struct file *, int, struct file_lock *); ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t, unsigned int); ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t, unsigned int); int (*setlease)(struct file *, long, struct file_lock **); long (*fallocate)(struct file *file, int mode, loff_t offset, loff_t len); int (*show_fdinfo)(struct seq_file *m, struct file *f); }; 3.2\u3001\u91ca\u653e\u4e00\u4e2a\u8bbe\u5907\uff08char \u5b57\u7b26\u8bbe\u5907\uff09\uff1a static inline void unregister_chrdev(unsigned int major, const char *name) \u53c2\u65701\u3001major \u8868\u8bbe\u5907\u53f7 \u53c2\u65702\uff1aname \u8868\u793a\u8bbe\u5907\u540d\u5b57 3.3\u3001\u521b\u5efa\u8bbe\u5907\u8282\u70b9\uff1a 3.3.1\u3001\u624b\u52a8\u521b\u5efa\u4e00\u4e2a\u8bbe\u5907\u8282\u70b9\uff1amknod mknod: invalid option -- 'h' BusyBox v1.22.1 (2014-08-10 15:54:57 CST) multi-call binary. Usage: mknod [-m MODE] NAME TYPE MAJOR MINOR Create a special file (block, character, or pipe) -m MODE Creation mode (default a=rw) TYPE: b Block device c or u Character device p Named pipe (MAJOR and MINOR are ignored) \u7528\u6cd5\uff1a mknod /dev/\u8bbe\u5907\u540d \u7c7b\u578b \u4e3b\u8bbe\u5907\u53f7 \u6b21\u8bbe\u5907\u53f7 \u6bd4\u5982\uff1a mknod /dev/chr0 c 250 0 \u6ce8\uff1a\u624b\u52a8\u521b\u5efa--\u7f3a\u70b9/dev/\u76ee\u5f55\u4e2d\u6587\u4ef6\u90fd\u662f\u5728\u5185\u5b58\u4e2d\uff0c\u65ad\u7535\u540e/dev/\u6587\u4ef6\u5c31\u4f1a\u6d88\u5931 3.3.2\u3001\u81ea\u52a8\u521b\u5efa\uff08\u901a\u8fc7udev/mdev\u673a\u5236\uff09 \u63a5\u53e3\u4e00\uff1a\u521b\u5efa\u4e00\u4e2a\u7c7b struct class *class_create(owner, name)//\u521b\u5efa\u4e00\u4e2a\u7c7b \u53c2\u65701\uff1a THIS_MODULE \u53c2\u65702\uff1a \u5b57\u7b26\u4e32\u540d\u5b57\uff0c\u81ea\u5b9a\u4e49 \u8fd4\u56de\u4e00\u4e2aclass\u6307\u9488 \u4e3e\u4f8b\uff1a class_create(THIS_MODULE,\"hello_class\") \u6ce8\uff1a\u8c03\u8bd5\u4fe1\u606f\uff1a cat /sys/class/ \u53ef\u4ee5\u770b\u5230\uff1a\u4e0eclass_create\u4e2d\u5bf9\u5e94\u7684hello_class bdi/ hello_class/ misc/ rtc/ tty/ block/ i2c-adapter/ mmc_host/ scsi_device/ vc/ dma/ input/ net/ scsi_disk/ vtconsole/ firmware/ mdio_bus/ phy/ scsi_generic/ graphics/ mem/ regulator/ scsi_host/ \u63a5\u53e3\u4e8c\uff1a\u9500\u6bc1\u4e00\u4e2a\u7c7b void class_destroy(devcls); \u53c2\u65701\uff1a class\u7ed3\u6784\u4f53\uff0cclass_create\u8c03\u7528\u4e4b\u540e\u5230\u8fd4\u56de\u503c \u63a5\u53e3\u4e09:\u521b\u5efa\u4e00\u4e2a\u8bbe\u5907\u6587\u4ef6 struct device *device_create(struct class * class, struct device * parent, dev_t devt, void * drvdata, const char * fmt,...) \u53c2\u65701\uff1a class\u7ed3\u6784\u4f53\uff0cclass_create\u8c03\u7528\u4e4b\u540e\u5230\u8fd4\u56de\u503c \u53c2\u65702\uff1a\u8868\u793a\u7236\u4eb2\uff0c\u4e00\u822c\u76f4\u63a5\u586bNULL \u53c2\u65703\uff1a \u8bbe\u5907\u53f7\u7c7b\u578b dev_t \u53c2\u65704\uff1a\u79c1\u6709\u6570\u636e\uff0c\u4e00\u822c\u76f4\u63a5\u586bNULL \u53c2\u65705\u548c6\uff1a\u8868\u793a\u53ef\u53d8\u53c2\u6570\uff0c\u5b57\u7b26\u4e32\uff0c\u8868\u793a\u8bbe\u5907\u8282\u70b9\u540d\u5b57:(exp)led2\u3001gpio ---->>/dev/led2 \u3001gpio \u4e3e\u4f8b\uff1a device_create(hello_class, NULL,MKDEV(my_major,0), NULL,\"hello_dev\"); \u6ce8\uff1a\u8c03\u8bd5\u4fe1\u606f\uff1a ls /dev/hello_dev -l \u53ef\u4ee5\u770b\u5230\uff1a\u4e0edevice_create\u4e2d\u5bf9\u5e94\u7684\u4e3b\u3001\u6b21\u8bbe\u5907\u53f7\uff0c\u4ee5\u53ca\u8bbe\u5907\u8282\u70b9\u540d\u79f0 crw-r--r--1 00 253, 0 Jan 1 00:08 /dev/hello_dev \u63a5\u53e3\u56db:\u9500\u6bc1\u4e00\u4e2a\u8bbe\u5907\u6587\u4ef6 \u539f\u578b\uff1a void device_destroy(struct class *class, dev_t devt) \u53c2\u65701\uff1a class\u7ed3\u6784\u4f53\uff0cclass_create\u8c03\u7528\u4e4b\u540e\u5230\u8fd4\u56de\u503c \u53c2\u65702\uff1a \u8bbe\u5907\u53f7\u7c7b\u578b dev_t \u4f8b\u5b50\uff1a void device_destroy(devcls, MKDEV(dev_major, 0)); 3.4\u3001 \u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u4f20\u9012\u6570\u636e\u7ed9\u9a71\u52a8 int copy_to_user(void __user * to, const void * from, unsigned long n) \u5c06\u6570\u636e\u4ece\u5185\u6838\u7a7a\u95f4\u62f7\u8d1d\u5230\u7528\u6237\u7a7a\u95f4,\u4e00\u822c\u662f\u5728\u9a71\u52a8\u4e2dchr_drv_read()\u7528 \u53c2\u65701\uff1a\u5e94\u7528\u9a71\u52a8\u4e2d\u7684\u4e00\u4e2abuffer \u53c2\u65702\uff1a\u5185\u6838\u7a7a\u95f4\u5230\u4e00\u4e2abuffer \u53c2\u65703\uff1a\u4e2a\u6570 \u8fd4\u56de\u503c\uff1a\u5927\u4e8e0\uff0c\u8868\u793a\u51fa\u9519\uff0c\u5269\u4e0b\u591a\u5c11\u4e2a\u6ca1\u6709\u62f7\u8d1d\u6210\u529f;;\u7b49\u4e8e0\uff0c\u8868\u793a\u6b63\u786e int copy_from_user(void * to, const void __user * from, unsigned long n) \u5c06\u6570\u636e\u4ece\u7528\u6237\u7a7a\u95f4\u62f7\u8d1d\u5230\u5185\u6838\u7a7a\u95f4,\u4e00\u822c\u662f\u5728\u9a71\u52a8\u4e2dchr_drv_write()\u7528 \u53c2\u65701\uff1a\u5185\u6838\u9a71\u52a8\u4e2d\u7684\u4e00\u4e2abuffer \u53c2\u65702\uff1a\u5e94\u7528\u7a7a\u95f4\u5230\u4e00\u4e2abuffer \u53c2\u65703\uff1a\u5927\u5c0f 3.5\u3001IOCTL\u7684\u7528\u6cd5\uff1a \u9a71\u52a8\u5c42\uff1a static long hello_ioctl(struct file *file, unsigned int cmd, unsigned long arg) { switch(cmd) { case cmd_test1: printk(\"cmd is cmd_test1\\n\"); printk(\"cmd test1 's arg:%ld\\n\",arg); break; case cmd_test2: printk(\"cmd is cmd_test2\\n\"); break; default: printk(\"out of cmd!\\n\"); return -1; break; } return 0; } \u5e94\u7528\u5c42\uff1a ioctl(fd,cmd,arg); 3.6 printk \u7b49\u7ea7\u8bf4\u660e\uff1a #define KERN_EMERG KERN_SOH \"0\" /* system is unusable */ #define KERN_ALERT KERN_SOH \"1\" /* action must be taken immediately */ #define KERN_CRIT KERN_SOH \"2\" /* critical conditions */ #define KERN_ERR KERN_SOH \"3\" /* error conditions */ #define KERN_WARNING KERN_SOH \"4\" /* warning conditions */ #define KERN_NOTICE KERN_SOH \"5\" /* normal but significant condition */ #define KERN_INFO KERN_SOH \"6\" /* informational */ #define KERN_DEBUG KERN_SOH \"7\" /* debug-level messages */ #define KERN_DEFAULT KERN_SOH \"d\" /* the default kernel loglevel */ 3.7 \u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u6846\u67b6\u603b\u7ed3\uff1a \u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u7684\u6846\u67b6\uff1a 1\u3001\u5b8c\u5584\u6700\u57fa\u672c\u7684\u6846\u67b6\uff1a \u5934\u6587\u4ef6 \u5165\u51fa\u53e3\u58f0\u660e MODULE_LICENSE(\"GPL\"); 2\u3001\u5728\u5165\u53e3\u51fd\u6570\u91cc\u9762\uff1a 2.1 \u7533\u8bf7\u4e00\u4e2a\u5b57\u7b26\u8bbe\u5907\uff1aregister_chrdev 2.1.1 \u8865\u5145\u76f8\u5e94\u7684\u53c2\u6570\uff0c\u8bbe\u5907\u53f7\uff0c\u540d\u5b57\uff0c\u6587\u4ef6\u64cd\u4f5c\u96c6\uff1afile_operations 2.2 \u7533\u8bf7\u4e00\u4e2a\u7c7b\uff1aclass_create 2.3 \u7533\u8bf7\u4e00\u4e2a\u8bbe\u5907\uff1adevice_create 3\u3001\u5728\u51fa\u53e3\u51fd\u6570\u91cc\u9762\uff1a 3.1 \u91ca\u653e\u8bbe\u5907\uff1a device_destroy 3.2 \u91ca\u653e\u7c7b\uff1a class_destroy 3.3 \u91ca\u653e\u5b57\u7b26\u8bbe\u5907\uff1a unregister_chrdev 4\u3001\u6587\u4ef6\u64cd\u4f5c\u96c6\uff1afile_operations \u63a5\u53e3\u5b8c\u5584 open,write,read,ioctl....... 3.8 \u51fa\u9519\u7801\u63d0\u793a\uff1a static inline long __must_check IS_ERR(__force const void *ptr) \u6ce8\uff1a\u5173\u4e8e\u6307\u9488\u662f\u5426\u51fa\u9519\uff1f static inline long __must_check PTR_ERR(__force const void *ptr) \u6ce8\uff1a\u5c06\u6307\u9488\u51fa\u9519\u7684\u5177\u4f53\u539f\u56e0\u8f6c\u6362\u6210\u4e00\u4e2a\u51fa\u9519\u7801 3.9 \u5728\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u5411\u5185\u6838\u7533\u8bf7\u5185\u5b58\u7a7a\u95f4\uff1a static __always_inline void *kmalloc(size_t size, gfp_t flags) flags \u53d6 GFP_KERNEL\uff1a \u4ee3\u8868\u5411\u5185\u6838\u7533\u8bf7\u5185\u5b58\u8d44\u6e90\uff0c\u5982\u679c\u51fa\u9519\u4e86\uff0c\u5c31\u4f1a\u4e00\u76f4\u963b\u585e\uff08\u4f11\u7720\uff09 4.0 \u786c\u4ef6\u91cd\u6620\u5c04 led \u5bf9\u5e94\u7684gpiox2_7 con :0x11000c40 led \u5bf9\u5e94\u7684gpiox2_7 dat :0x11000c44 ioremap(); \u539f\u578b\uff1a static inline void __iomem *ioremap(phys_addr_t offset, unsigned long size) \u53c2\u65701\uff1a\u7269\u7406\u5730\u5740 \u53c2\u65702\uff1a\u9700\u8981\u6620\u5c04\u7684\u5927\u5c0f iounmap();//\u628aioremap\u7684\u64cd\u4f5c\u53d6\u6d88 \u5bf9\u4e8e\u5bc4\u5b58\u5668\u64cd\u4f5c\u7684API\uff1a readl(addr)//\u4ece\u5730\u5740addr\u4e2d\u8bfb\u53d6\u51fa\u5176\u503c\u5e76\u8fd4\u56de writel(addr,value) //\u628a\u503c value\u5199\u5165\u5230addr\u5730\u5740\u4e2d","title":"\u9a71\u52a8\u7b2c\u4e00\u5929"},{"location":"\u9a71\u52a8\u7b2c\u4e00\u5929---\u9a71\u52a8\u57fa\u7840/#-","text":"\u76ee\u5f55\uff1a \u9a71\u52a8\u7b2c\u4e00\u5929---\u9a71\u52a8\u57fa\u7840 \u5f00\u53d1\u73af\u5883\u642d\u5efa \u4e00\u3001tftp \u670d\u52a1\u5668\u642d\u5efa\uff08ubuntu\u7248\uff09 \u4e8c\u3001\u5f00\u53d1\u677f\u7684\u4e0d\u540c\u542f\u52a8\u65b9\u5f0f \u4e09\u3001\u5f00\u53d1\u677f\u6302\u8f7dNFS\u670d\u52a1\u5668 \u5229\u7528source insight\u521b\u5efaLinux\u6e90\u7801\u5de5\u7a0b \u9a71\u52a8\u6a21\u5757\u5f00\u53d1\u57fa\u7840 \u6700\u7b80\u5355\u7684\u9a71\u52a8Demo: \u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u57fa\u7840 \u5f00\u53d1\u73af\u5883\u642d\u5efa \u5229\u7528source insight\u521b\u5efaLinux\u6e90\u7801\u5de5\u7a0b \u9a71\u52a8\u6a21\u5757\u5f00\u53d1\u57fa\u7840 \u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u57fa\u7840","title":"\u9a71\u52a8\u7b2c\u4e00\u5929---\u9a71\u52a8\u57fa\u7840"},{"location":"\u9a71\u52a8\u7b2c\u4e00\u5929---\u9a71\u52a8\u57fa\u7840/#_1","text":"","title":"\u5f00\u53d1\u73af\u5883\u642d\u5efa"},{"location":"\u9a71\u52a8\u7b2c\u4e00\u5929---\u9a71\u52a8\u57fa\u7840/#tftp-ubuntu","text":"1.\u5b89\u88c5tftp-server sudo apt-get install tftpd-hpa 2.\u914d\u7f6eTFTP\u670d\u52a1\u5668 sudo vim /etc/default/tftpd-hpa \u5c06\u539f\u6765\u7684\u5185\u5bb9\u6539\u4e3a: TFTP_USERNAME=\"tftp\" TFTP_ADDRESS=\"0.0.0.0:69\" TFTP_DIRECTORY=\"tftp\u6839\u76ee\u5f55\" #\u670d\u52a1\u5668\u76ee\u5f55,\u9700\u8981\u8bbe\u7f6e\u6743\u9650\u4e3a777,chomd 777 TFTP_OPTIONS=\"-l -c -s\" 3.\u91cd\u65b0\u542f\u52a8TFTP\u670d\u52a1 sudo service tftpd-hpa restart 4.\u6d4b\u8bd5 sudo netstat -a | grep tftp \u53ef\u4ee5\u770b\u5230\uff1a udp0 0 0.0.0.0:tftp0.0.0.0:* udp6 0 0 [::]:tftp [::]:* \u5219\u8868\u793atftpserver\u642d\u5efa\u6210\u529f\u4e86\u3002","title":"\u4e00\u3001tftp \u670d\u52a1\u5668\u642d\u5efa\uff08ubuntu\u7248\uff09"},{"location":"\u9a71\u52a8\u7b2c\u4e00\u5929---\u9a71\u52a8\u57fa\u7840/#_2","text":"1\u3001\u901a\u8fc7\u7f51\u7edc\u52a0\u8f7d\u5185\u6838\u548c\u6587\u4ef6\u7cfb\u7edf a)\u5c06 \u955c\u50cf\u6587\u4ef6/uImage\u62f7\u8d1d\u5230ubuntu\u7684 /tftpboot\u4e0b b)\u5c06 \u955c\u50cf\u6587\u4ef6/rootfs.tar.xz\u62f7\u8d1d\u5230ubuntu\u7684 /source\u4e0b\u5e76\u89e3\u538b c)\u5c06 \u955c\u50cf\u6587\u4ef6/exynos4412-fs4412.dtb\u62f7\u8d1d\u5230ubuntu\u7684 /tftpboot\u4e0b d)\u4fee\u6539\u865a\u62df\u673anfs\u914d\u7f6e\u6587\u4ef6/etc/exports\uff0c\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9\u5e76\u91cd\u542fnfs\u670d\u52a1 /source/rootfs *(rw,sync,no_subtree_check,no_root_squash) e)\u91cd\u65b0\u9a71\u52a8nfs\u670d\u52a1 $ sudo /etc/init.d/nfs-kernel-server restart f)\u8bbe\u7f6e\u542f\u52a8\u53c2\u6570 # setenv serverip 192.168.9.120 # setenv ipaddr 192.168.9.233 # setenv bootcmd tftp 41000000 uImage;tftp 42000000 exynos4412- fs4412.dtb;bootm 41000000-42000000 #setenv bootargs root=/dev/nfs nfsroot=192.168.9.120:/source/rootfs rw console=ttySAC2,115200 init=/linuxrc ip=192.168.9.233 # saveenv \u6ce8\u610f\uff1a\u8fd9\u4e24\u4e2aip\u5e94\u8be5\u6839\u636e\u81ea\u5df1\u7684\u5b9e\u9645\u60c5\u51b5\u9002\u5f53\u4fee\u6539 192.168.9.120 \u5bf9\u5e94Ubuntu\u7684ip\uff1b 192.168.9.233 \u5bf9\u5e94\u677f\u5b50\u7684ip 2\u3001\u4eceEMMC\u52a0\u8f7d\u5185\u6838\u548c\u6587\u4ef6\u7cfb\u7edf a)\u62f7\u8d1d\u955c\u50cf\u6587\u4ef6/ramdisk.img\u62f7\u8d1d\u5230\u865a\u62df\u673a/tftpboot\u76ee\u5f55\u4e0b b)\u70e7\u5199\u5185\u6838\u955c\u50cf\u5230EMMC\u4e0a tftp 41000000 uImage movi write kernel 41000000 c)\u70e7\u5199\u8bbe\u5907\u6811\u6587\u4ef6\u5230EMMC\u4e0a tftp 41000000 exynos4412-fs4412.dtb movi write dtb 41000000 d)\u70e7\u5199\u6587\u4ef6\u7cfb\u7edf\u955c\u50cf\u5230EMMC\u4e0a tftp 41000000 ramdisk.img movi write rootfs 41000000 300000 e)\u8bbe\u7f6e\u542f\u52a8\u53c2\u6570 setenv bootcmd movi read kernel 41000000\\;movi read dtb 42000000\\; movi read rootfs 43000000 300000\\;bootm 41000000 43000000 42000000 saveenv f)\u91cd\u65b0\u542f\u52a8\u5f00\u53d1\u677f\uff0cu-boot\u81ea\u52a8\u52a0\u8f7d\u3001\u6267\u884c\u5185\u6838","title":"\u4e8c\u3001\u5f00\u53d1\u677f\u7684\u4e0d\u540c\u542f\u52a8\u65b9\u5f0f"},{"location":"\u9a71\u52a8\u7b2c\u4e00\u5929---\u9a71\u52a8\u57fa\u7840/#nfs","text":"\u9996\u5148\uff0c\u5728ubuntu\u4e0a\u5b89\u88c5\uff1a sudo apt-get install nfs-kernel-server \u4fee\u6539\u865a\u62df\u673anfs\u914d\u7f6e\u6587\u4ef6/etc/exports\uff0c\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9\u5e76\u91cd\u542fnfs\u670d\u52a1 /xx/xx *(rw,sync,no_subtree_check,no_root_squash) \u6ce8\u610f\uff1axx/xx\u662f\u4f60\u8981\u505a\u4e3anfs\u670d\u52a1\u5668\u7684\u76ee\u5f55 \u91cd\u65b0\u9a71\u52a8nfs\u670d\u52a1 $ sudo /etc/init.d/nfs-kernel-server restart \u5728\u5f00\u53d1\u677f\u4e0a\uff0c\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\uff1a mount -t nfs -o nolock 192.168.10.10:/home/ubuntu/share/nfs /mnt/","title":"\u4e09\u3001\u5f00\u53d1\u677f\u6302\u8f7dNFS\u670d\u52a1\u5668"},{"location":"\u9a71\u52a8\u7b2c\u4e00\u5929---\u9a71\u52a8\u57fa\u7840/#source-insightlinux","text":"\u53c2\u8003\u94fe\u63a5\uff1a http://bbs.elecfans.com/forum.php?mod=viewthread&tid=1114963&extra=","title":"\u5229\u7528source insight\u521b\u5efaLinux\u6e90\u7801\u5de5\u7a0b"},{"location":"\u9a71\u52a8\u7b2c\u4e00\u5929---\u9a71\u52a8\u57fa\u7840/#_3","text":"\u5185\u6838\u6a21\u5757\u662f\u4ec0\u4e48\uff1f Kconfig Makefile \u7684\u542b\u4e49\uff1f \u4ee5\u4efb\u610f\u4e00\u4e2a\u9009\u9879\u7684\u5b57\u7b26\u4e32\u53bb\u5185\u6838 \u91cc\u9762\u67e5\u627e\u76f8\u5bf9\u7684\u6e90\u7801\uff1a \u5728\u5185\u6838\u5de5\u7a0b\u91cc\u9762\u76f4\u63a5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u53ef\u4ee5\u751f\u6210 mkdir -p module_install #\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939\u7528\u4e8e\u5b58\u653e\u7f16\u8bd1\u751f\u6210\u7684\u6a21\u5757\u7684\u5b89\u88c5\u76ee\u5f55 make INSTALL_MOD_PATH=module_install modules #\u7f16\u8bd1\u6a21\u5757 make INSTALL_MOD_PATH=module_install modules_install #\u5b89\u88c5\u6a21\u5757\u5230\u6307\u5b9a\u76ee\u5f55 \u9a71\u52a8\u6a21\u5757\u5f00\u53d1\uff1a \u9a71\u52a8\u5f00\u53d1\u56db\u6b65\u8d70 1\uff0c\u5934\u6587\u4ef6 2\uff0c\u9a71\u52a8\u6a21\u5757\u88c5\u8f7d\u548c\u5378\u8f7d\u51fd\u6570\u5165\u53e3\u5230\u58f0\u660e 3\uff0c\u5b9e\u73b0\u6a21\u5757\u88c5\u8f7d\u548c\u5378\u8f7d\u51fd\u6570\u5165\u53e3 4\uff0cGPL\u58f0\u660e","title":"\u9a71\u52a8\u6a21\u5757\u5f00\u53d1\u57fa\u7840"},{"location":"\u9a71\u52a8\u7b2c\u4e00\u5929---\u9a71\u52a8\u57fa\u7840/#demo","text":"#include <linux/init.h> #include <linux/module.h> #include <linux/stat.h> static int __init hello_drv_init(void) { //\u4e00\u822c\u505a\u7cfb\u7edf\u7533\u8bf7\u8d44\u6e90 printk(\"-------%s-------------\\n\", __FUNCTION__); return 0; } static void __exit hello_drv_exit(void) { //\u4e00\u822c\u505a\u7cfb\u7edf\u91ca\u653e\u8d44\u6e90 printk(\"-------%s-------------\\n\", __FUNCTION__); } module_init(hello_drv_init); module_exit(hello_drv_exit); MODULE_LICENSE(\"GPL\"); \u9a71\u52a8\u7684makefile ROOTFS_DIR = /home/ubuntu/share/nfs ifeq ($(KERNELRELEASE), ) KERNEL_DIR = /home/ubuntu/work/linux-3.14-fs4412 CUR_DIR = $(shell pwd) all : make -C $(KERNEL_DIR) M=$(CUR_DIR) modules clean : make -C $(KERNEL_DIR) M=$(CUR_DIR) clean install: cp -raf *.ko $(ROOTFS_DIR) else obj-m += hello_drv.o #obj-m += math.o endif PS\uff1a\u5982\u679c\u8981\u7f16\u8bd1\u591a\u6e90\u7801\u6784\u6210\u7684\u4e00\u4e2a\u6a21\u5757\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\uff1a vers-objs = xx.o xxx.o .... \u9a71\u52a8\u76f8\u5173\u547d\u4ee4\uff1a \u5b89\u88c5\uff1ainsmod xxxx.ko \u67e5\u770b\u6a21\u5757\u5b89\u88c5\u5217\u8868\uff1alsmod \u5378\u8f7d\uff1armmod xxx \u4fe1\u606f:modinfo \u67e5\u770b\u6a21\u5757\u76f8\u5e94\u7684\u4fe1\u606f\u4ee5\u53ca\u4f9d\u8d56\u9879 modprobe \u5b89\u88c5\u547d\u4ee4\uff0c1\u3001\u89e3\u51b3\u4f9d\u8d56\u9879 2\u3001\u53ef\u4ee5\u76f4\u63a5\u5728\u76ee\u5f55\u4e0b\u641c\u7d22\u76f8\u5173\u7684\u9a71\u52a8\uff0c\u4e0d\u9700\u8981\u5e26.ko\u5373\u53ef \u5378\u8f7d\u9a71\u52a8\u51fa\u9519\uff1a rmmod fs4412_led rmmod: can't change directory to '/lib/modules': No such file or directory \u89e3\u51b3\u65b9\u6848\uff1a mkdir -p /lib/modules/3.14.0 1\uff0c\u53c2\u6570\u4f20\u9012 \u52a0\u8f7dko\uff1a insmod hello.ko myname=\"avd\" myvalue=33 \u7528\u9014\uff1a wifi\u9a71\u52a8\uff0cwifiname wifipass \u5728\u4ee3\u7801\u5982\u4f55\u5904\u7406\u53c2\u6570\uff1a module_param(name, type, perm) \u53c2\u65701\uff1a\u8868\u793a\u53c2\u6570\u5230\u540d\u5b57\uff0c\u6bd4\u5982myname\uff0c myvalue \u53c2\u65702\uff1a\u53c2\u6570\u5230\u7c7b\u578b, charp, int,bool... \u53c2\u65703\uff1a /sys/modules/\u8868\u793a\u6587\u4ef6\u5230\u6743\u9650\uff1a 0666 \u7528\u6cd5\uff1a module_param(myvalue, int, 0666); module_param(myname, charp, S_IRUGO|S_IWUGO|S_IXUGO); 2\uff0c\u7b26\u53f7\u5bfc\u51fa #include <linux/module.h> #include <linux/init.h> //\u4e0d\u9700\u8981\u6a21\u5757\u52a0\u8f7d\u548c\u5378\u8f7d\u5230\u5165\u53e3\u58f0\u660e\uff0c\u76f4\u63a5\u5b9a\u4e49\u597d\u4e00\u4e9b\u5c01\u88c5\u7684\u51fd\u6570 int my_add(int a, int b) { return a+b; } EXPORT_SYMBOL(my_add); int my_sub(int a, int b) { return a-b; } EXPORT_SYMBOL(my_sub); MODULE_LICENSE(\"GPL\");","title":"\u6700\u7b80\u5355\u7684\u9a71\u52a8Demo:"},{"location":"\u9a71\u52a8\u7b2c\u4e00\u5929---\u9a71\u52a8\u57fa\u7840/#_4","text":"\u4e00\u3001 linux \u8bbe\u5907\u9a71\u52a8\u7c7b\u578b\u4e3b\u8981\u6709\u4ee5\u4e0b\u56db\u79cd\uff1a\u5b57\u7b26\u8bbe\u5907\uff0c\u5757\u8bbe\u5907\uff0c\u7f51\u7edc\u8bbe\u5907\uff0c\u6742\u9879\u8bbe\u5907 \u4e8c\u3001\u8bbe\u5907\u53f7\uff1a \u4e00\u4e2a\u8bbe\u5907\u6709\u4e3b\u6b21\u8bbe\u5907\u53f7\uff1b\u4e3b\u8bbe\u5907\u53f7\u53ef\u4ee5\u7406\u89e3\u6210\u4e3a\u4e00\u7c7b\uff0c\u800c\u6b21\u8bbe\u5907\u53ef\u4ee5\u7406\u89e3\u6210\u4e3a\u5177\u4f53\u67d0\u4e2a\u5bf9\u8c61 \u4ee5\u4e0b\u9762\u7684\u4e3a\u4f8b\uff1a 7:0 -> ../loop0 7:1 -> ../loop1 7:2 -> ../loop2 7:3 -> ../loop3 7:4 -> ../loop4 7:5 -> ../loop5 7:6 -> ../loop6 7:7 -> ../loop7 7\u4ee3\u8868\u4e3b\u8bbe\u5907\u53f7\uff0c0~7\u4ee3\u8868\u5404\u4e2a\u8bbe\u5907\u7684\u6b21\u8bbe\u5907\u53f7 \u4e09\u3001Linux\u63d0\u4f9b\u7684\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u63a5\u53e3 3.1\u3001\u7533\u8bf7\u6ce8\u518c\u4e00\u4e2a\u8bbe\u5907\uff08char \u5b57\u7b26\u8bbe\u5907\uff09\uff1a static inline int register_chrdev(unsigned int major, const char *name, const struct file_operations *fops); \u53c2\u65701\u3001major \u8868\u8bbe\u5907\u53f7\uff0832\u4f4d\u7684\u503c \u7531\u4e3b+\u6b21\u8bbe\u5907\u53f7\u6784\u6210\uff09\u9ad812\u4f4d\u4e3b\u8bbe\u5907\u53f7+\u4f4e20\u4f4d\u7684\u6b21\u8bbe\u5907\u53f7\u6784\u6210 exp: \u4e3b\u8bbe\u5907\u53f7\uff1a1 \u6b21\u8bbe\u5907\u53f7\uff1a2 \u8bbe\u5907\u53f7=1<<20|2 =12\u6784\u6210\u4e86\u8bbe\u5907\u53f7 #define MINORBITS 20 #define MINORMASK ((1U << MINORBITS) - 1) #define MKDEV(ma,mi) (((ma) << MINORBITS) | (mi)) #define MAJOR(dev) ((unsigned int) ((dev) >> MINORBITS)) #define MINOR(dev) ((unsigned int) ((dev) & MINORMASK)) //\u6ce8\uff1ama\u8868\u793a\u4e3b\u8bbe\u5907\u53f7\uff0cmi\u8868\u793a\u6b21\u8bbe\u5907\u53f7 \u53c2\u65702\uff1aname \u8868\u793a\u8bbe\u5907\u540d\u5b57 /dev/\u4e0b\u9762\u7684\u8bbe\u5907\u540d\u5b57 /dev/xxx \u53c2\u65703\uff1afile_operations \u8868\u793a\u6587\u4ef6\u64cd\u4f5c\u96c6\uff1a\u6bd4\u5982\u5e38\u89c1\u7684open,read,write,close,ioctl..... struct file_operations { struct module *owner; loff_t (*llseek) (struct file *, loff_t, int); ssize_t (*read) (struct file *, char __user *, size_t, loff_t *); ssize_t (*write) (struct file *, const char __user *, size_t, loff_t *); ssize_t (*aio_read) (struct kiocb *, const struct iovec *, unsigned long, loff_t); ssize_t (*aio_write) (struct kiocb *, const struct iovec *, unsigned long, loff_t); int (*iterate) (struct file *, struct dir_context *); unsigned int (*poll) (struct file *, struct poll_table_struct *); long (*unlocked_ioctl) (struct file *, unsigned int, unsigned long); long (*compat_ioctl) (struct file *, unsigned int, unsigned long); int (*mmap) (struct file *, struct vm_area_struct *); int (*open) (struct inode *, struct file *); int (*flush) (struct file *, fl_owner_t id); int (*release) (struct inode *, struct file *); int (*fsync) (struct file *, loff_t, loff_t, int datasync); int (*aio_fsync) (struct kiocb *, int datasync); int (*fasync) (int, struct file *, int); int (*lock) (struct file *, int, struct file_lock *); ssize_t (*sendpage) (struct file *, struct page *, int, size_t, loff_t *, int); unsigned long (*get_unmapped_area)(struct file *, unsigned long, unsigned long, unsigned long, unsigned long); int (*check_flags)(int); int (*flock) (struct file *, int, struct file_lock *); ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t, unsigned int); ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t, unsigned int); int (*setlease)(struct file *, long, struct file_lock **); long (*fallocate)(struct file *file, int mode, loff_t offset, loff_t len); int (*show_fdinfo)(struct seq_file *m, struct file *f); }; 3.2\u3001\u91ca\u653e\u4e00\u4e2a\u8bbe\u5907\uff08char \u5b57\u7b26\u8bbe\u5907\uff09\uff1a static inline void unregister_chrdev(unsigned int major, const char *name) \u53c2\u65701\u3001major \u8868\u8bbe\u5907\u53f7 \u53c2\u65702\uff1aname \u8868\u793a\u8bbe\u5907\u540d\u5b57 3.3\u3001\u521b\u5efa\u8bbe\u5907\u8282\u70b9\uff1a 3.3.1\u3001\u624b\u52a8\u521b\u5efa\u4e00\u4e2a\u8bbe\u5907\u8282\u70b9\uff1amknod mknod: invalid option -- 'h' BusyBox v1.22.1 (2014-08-10 15:54:57 CST) multi-call binary. Usage: mknod [-m MODE] NAME TYPE MAJOR MINOR Create a special file (block, character, or pipe) -m MODE Creation mode (default a=rw) TYPE: b Block device c or u Character device p Named pipe (MAJOR and MINOR are ignored) \u7528\u6cd5\uff1a mknod /dev/\u8bbe\u5907\u540d \u7c7b\u578b \u4e3b\u8bbe\u5907\u53f7 \u6b21\u8bbe\u5907\u53f7 \u6bd4\u5982\uff1a mknod /dev/chr0 c 250 0 \u6ce8\uff1a\u624b\u52a8\u521b\u5efa--\u7f3a\u70b9/dev/\u76ee\u5f55\u4e2d\u6587\u4ef6\u90fd\u662f\u5728\u5185\u5b58\u4e2d\uff0c\u65ad\u7535\u540e/dev/\u6587\u4ef6\u5c31\u4f1a\u6d88\u5931 3.3.2\u3001\u81ea\u52a8\u521b\u5efa\uff08\u901a\u8fc7udev/mdev\u673a\u5236\uff09 \u63a5\u53e3\u4e00\uff1a\u521b\u5efa\u4e00\u4e2a\u7c7b struct class *class_create(owner, name)//\u521b\u5efa\u4e00\u4e2a\u7c7b \u53c2\u65701\uff1a THIS_MODULE \u53c2\u65702\uff1a \u5b57\u7b26\u4e32\u540d\u5b57\uff0c\u81ea\u5b9a\u4e49 \u8fd4\u56de\u4e00\u4e2aclass\u6307\u9488 \u4e3e\u4f8b\uff1a class_create(THIS_MODULE,\"hello_class\") \u6ce8\uff1a\u8c03\u8bd5\u4fe1\u606f\uff1a cat /sys/class/ \u53ef\u4ee5\u770b\u5230\uff1a\u4e0eclass_create\u4e2d\u5bf9\u5e94\u7684hello_class bdi/ hello_class/ misc/ rtc/ tty/ block/ i2c-adapter/ mmc_host/ scsi_device/ vc/ dma/ input/ net/ scsi_disk/ vtconsole/ firmware/ mdio_bus/ phy/ scsi_generic/ graphics/ mem/ regulator/ scsi_host/ \u63a5\u53e3\u4e8c\uff1a\u9500\u6bc1\u4e00\u4e2a\u7c7b void class_destroy(devcls); \u53c2\u65701\uff1a class\u7ed3\u6784\u4f53\uff0cclass_create\u8c03\u7528\u4e4b\u540e\u5230\u8fd4\u56de\u503c \u63a5\u53e3\u4e09:\u521b\u5efa\u4e00\u4e2a\u8bbe\u5907\u6587\u4ef6 struct device *device_create(struct class * class, struct device * parent, dev_t devt, void * drvdata, const char * fmt,...) \u53c2\u65701\uff1a class\u7ed3\u6784\u4f53\uff0cclass_create\u8c03\u7528\u4e4b\u540e\u5230\u8fd4\u56de\u503c \u53c2\u65702\uff1a\u8868\u793a\u7236\u4eb2\uff0c\u4e00\u822c\u76f4\u63a5\u586bNULL \u53c2\u65703\uff1a \u8bbe\u5907\u53f7\u7c7b\u578b dev_t \u53c2\u65704\uff1a\u79c1\u6709\u6570\u636e\uff0c\u4e00\u822c\u76f4\u63a5\u586bNULL \u53c2\u65705\u548c6\uff1a\u8868\u793a\u53ef\u53d8\u53c2\u6570\uff0c\u5b57\u7b26\u4e32\uff0c\u8868\u793a\u8bbe\u5907\u8282\u70b9\u540d\u5b57:(exp)led2\u3001gpio ---->>/dev/led2 \u3001gpio \u4e3e\u4f8b\uff1a device_create(hello_class, NULL,MKDEV(my_major,0), NULL,\"hello_dev\"); \u6ce8\uff1a\u8c03\u8bd5\u4fe1\u606f\uff1a ls /dev/hello_dev -l \u53ef\u4ee5\u770b\u5230\uff1a\u4e0edevice_create\u4e2d\u5bf9\u5e94\u7684\u4e3b\u3001\u6b21\u8bbe\u5907\u53f7\uff0c\u4ee5\u53ca\u8bbe\u5907\u8282\u70b9\u540d\u79f0 crw-r--r--1 00 253, 0 Jan 1 00:08 /dev/hello_dev \u63a5\u53e3\u56db:\u9500\u6bc1\u4e00\u4e2a\u8bbe\u5907\u6587\u4ef6 \u539f\u578b\uff1a void device_destroy(struct class *class, dev_t devt) \u53c2\u65701\uff1a class\u7ed3\u6784\u4f53\uff0cclass_create\u8c03\u7528\u4e4b\u540e\u5230\u8fd4\u56de\u503c \u53c2\u65702\uff1a \u8bbe\u5907\u53f7\u7c7b\u578b dev_t \u4f8b\u5b50\uff1a void device_destroy(devcls, MKDEV(dev_major, 0)); 3.4\u3001 \u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u4f20\u9012\u6570\u636e\u7ed9\u9a71\u52a8 int copy_to_user(void __user * to, const void * from, unsigned long n) \u5c06\u6570\u636e\u4ece\u5185\u6838\u7a7a\u95f4\u62f7\u8d1d\u5230\u7528\u6237\u7a7a\u95f4,\u4e00\u822c\u662f\u5728\u9a71\u52a8\u4e2dchr_drv_read()\u7528 \u53c2\u65701\uff1a\u5e94\u7528\u9a71\u52a8\u4e2d\u7684\u4e00\u4e2abuffer \u53c2\u65702\uff1a\u5185\u6838\u7a7a\u95f4\u5230\u4e00\u4e2abuffer \u53c2\u65703\uff1a\u4e2a\u6570 \u8fd4\u56de\u503c\uff1a\u5927\u4e8e0\uff0c\u8868\u793a\u51fa\u9519\uff0c\u5269\u4e0b\u591a\u5c11\u4e2a\u6ca1\u6709\u62f7\u8d1d\u6210\u529f;;\u7b49\u4e8e0\uff0c\u8868\u793a\u6b63\u786e int copy_from_user(void * to, const void __user * from, unsigned long n) \u5c06\u6570\u636e\u4ece\u7528\u6237\u7a7a\u95f4\u62f7\u8d1d\u5230\u5185\u6838\u7a7a\u95f4,\u4e00\u822c\u662f\u5728\u9a71\u52a8\u4e2dchr_drv_write()\u7528 \u53c2\u65701\uff1a\u5185\u6838\u9a71\u52a8\u4e2d\u7684\u4e00\u4e2abuffer \u53c2\u65702\uff1a\u5e94\u7528\u7a7a\u95f4\u5230\u4e00\u4e2abuffer \u53c2\u65703\uff1a\u5927\u5c0f 3.5\u3001IOCTL\u7684\u7528\u6cd5\uff1a \u9a71\u52a8\u5c42\uff1a static long hello_ioctl(struct file *file, unsigned int cmd, unsigned long arg) { switch(cmd) { case cmd_test1: printk(\"cmd is cmd_test1\\n\"); printk(\"cmd test1 's arg:%ld\\n\",arg); break; case cmd_test2: printk(\"cmd is cmd_test2\\n\"); break; default: printk(\"out of cmd!\\n\"); return -1; break; } return 0; } \u5e94\u7528\u5c42\uff1a ioctl(fd,cmd,arg); 3.6 printk \u7b49\u7ea7\u8bf4\u660e\uff1a #define KERN_EMERG KERN_SOH \"0\" /* system is unusable */ #define KERN_ALERT KERN_SOH \"1\" /* action must be taken immediately */ #define KERN_CRIT KERN_SOH \"2\" /* critical conditions */ #define KERN_ERR KERN_SOH \"3\" /* error conditions */ #define KERN_WARNING KERN_SOH \"4\" /* warning conditions */ #define KERN_NOTICE KERN_SOH \"5\" /* normal but significant condition */ #define KERN_INFO KERN_SOH \"6\" /* informational */ #define KERN_DEBUG KERN_SOH \"7\" /* debug-level messages */ #define KERN_DEFAULT KERN_SOH \"d\" /* the default kernel loglevel */ 3.7 \u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u6846\u67b6\u603b\u7ed3\uff1a \u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u7684\u6846\u67b6\uff1a 1\u3001\u5b8c\u5584\u6700\u57fa\u672c\u7684\u6846\u67b6\uff1a \u5934\u6587\u4ef6 \u5165\u51fa\u53e3\u58f0\u660e MODULE_LICENSE(\"GPL\"); 2\u3001\u5728\u5165\u53e3\u51fd\u6570\u91cc\u9762\uff1a 2.1 \u7533\u8bf7\u4e00\u4e2a\u5b57\u7b26\u8bbe\u5907\uff1aregister_chrdev 2.1.1 \u8865\u5145\u76f8\u5e94\u7684\u53c2\u6570\uff0c\u8bbe\u5907\u53f7\uff0c\u540d\u5b57\uff0c\u6587\u4ef6\u64cd\u4f5c\u96c6\uff1afile_operations 2.2 \u7533\u8bf7\u4e00\u4e2a\u7c7b\uff1aclass_create 2.3 \u7533\u8bf7\u4e00\u4e2a\u8bbe\u5907\uff1adevice_create 3\u3001\u5728\u51fa\u53e3\u51fd\u6570\u91cc\u9762\uff1a 3.1 \u91ca\u653e\u8bbe\u5907\uff1a device_destroy 3.2 \u91ca\u653e\u7c7b\uff1a class_destroy 3.3 \u91ca\u653e\u5b57\u7b26\u8bbe\u5907\uff1a unregister_chrdev 4\u3001\u6587\u4ef6\u64cd\u4f5c\u96c6\uff1afile_operations \u63a5\u53e3\u5b8c\u5584 open,write,read,ioctl....... 3.8 \u51fa\u9519\u7801\u63d0\u793a\uff1a static inline long __must_check IS_ERR(__force const void *ptr) \u6ce8\uff1a\u5173\u4e8e\u6307\u9488\u662f\u5426\u51fa\u9519\uff1f static inline long __must_check PTR_ERR(__force const void *ptr) \u6ce8\uff1a\u5c06\u6307\u9488\u51fa\u9519\u7684\u5177\u4f53\u539f\u56e0\u8f6c\u6362\u6210\u4e00\u4e2a\u51fa\u9519\u7801 3.9 \u5728\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u5411\u5185\u6838\u7533\u8bf7\u5185\u5b58\u7a7a\u95f4\uff1a static __always_inline void *kmalloc(size_t size, gfp_t flags) flags \u53d6 GFP_KERNEL\uff1a \u4ee3\u8868\u5411\u5185\u6838\u7533\u8bf7\u5185\u5b58\u8d44\u6e90\uff0c\u5982\u679c\u51fa\u9519\u4e86\uff0c\u5c31\u4f1a\u4e00\u76f4\u963b\u585e\uff08\u4f11\u7720\uff09 4.0 \u786c\u4ef6\u91cd\u6620\u5c04 led \u5bf9\u5e94\u7684gpiox2_7 con :0x11000c40 led \u5bf9\u5e94\u7684gpiox2_7 dat :0x11000c44 ioremap(); \u539f\u578b\uff1a static inline void __iomem *ioremap(phys_addr_t offset, unsigned long size) \u53c2\u65701\uff1a\u7269\u7406\u5730\u5740 \u53c2\u65702\uff1a\u9700\u8981\u6620\u5c04\u7684\u5927\u5c0f iounmap();//\u628aioremap\u7684\u64cd\u4f5c\u53d6\u6d88 \u5bf9\u4e8e\u5bc4\u5b58\u5668\u64cd\u4f5c\u7684API\uff1a readl(addr)//\u4ece\u5730\u5740addr\u4e2d\u8bfb\u53d6\u51fa\u5176\u503c\u5e76\u8fd4\u56de writel(addr,value) //\u628a\u503c value\u5199\u5165\u5230addr\u5730\u5740\u4e2d","title":"\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u57fa\u7840"},{"location":"\u9a71\u52a8\u7b2c\u4e09\u5929---\u603b\u7ebf/","text":"\u9a71\u52a8\u7b2c\u4e09\u5929---\u603b\u7ebf \u9a71\u52a8\u7b2c\u4e09\u5929---\u603b\u7ebf 1. \u603b\u7ebf\u7684\u57fa\u672c\u6982\u5ff5 2. Sysfs\u6587\u4ef6\u7cfb\u7edf 3. \u5199\u4e00\u4e2a\u81ea\u5df1\u7684\u603b\u7ebf\u9a71\u52a8 3.1 \u5199\u4e00\u4e2a\u81ea\u5df1\u7684\u603b\u7ebf\u9a71\u52a8\u2014\u2014bus 3.2 \u5199\u4e00\u4e2a\u81ea\u5df1\u7684\u603b\u7ebf\u9a71\u52a8\u2014\u2014driver 3.3 \u5199\u4e00\u4e2a\u81ea\u5df1\u7684\u603b\u7ebf\u9a71\u52a8\u2014\u2014device 3.4 \u5982\u4f55\u5b9e\u73b0\u603b\u7ebf\u7684\u5339\u914d 4. \u5e73\u53f0\u603b\u7ebf(platform)\u7684\u57fa\u672c\u6982\u5ff5 \u4e3a\u4ec0\u4e48\u4f1a\u6709\u5e73\u53f0\u603b\u7ebf\uff1a 5. \u5e73\u53f0\u603b\u7ebf(platform)\u7f16\u7a0b\u63a5\u53e3 5. \u5199\u4e00\u4e2aplatform led\u9a71\u52a8 IIC\u603b\u7ebf\u9a71\u52a8 1 i2c\u534f\u8bae\u548c\u65f6\u5e8f 2 i2c\u5b50\u7cfb\u7edf\u8f6f\u4ef6\u6846\u67b6 ## 3 I2c\u5b50\u7cfb\u7edf\u4e2d\u6d89\u53ca\u5230\u7684\u8bbe\u5907\u6811\u6587\u4ef6\uff1a 4 i2c driver\u9a71\u52a8\u7684\u7f16\u5199 \u7f16\u5199\u4e00\u4e2a\u6700\u7b80\u5355\u7684i2c driver\u9a71\u52a8\uff0c\u6700\u7ec8\u53ef\u5b9e\u73b0\u8c03\u7528 i2c\u7684probe\uff0c\u4ee3\u7801\u53ef\u53c2\u8003\uff086th/iic_drv\uff09 4 \u9640\u87ba\u4eea\u548c\u52a0\u901f\u5ea6\u5de5\u4f5c\u539f\u7406\uff0c\u5b83\u4eec\u7684\u5e94\u7528 4.1 \u786c\u4ef6\u63a5\u7ebf\u56fe 4.2 \u9640\u87ba\u4eea\u548c\u52a0\u901f\u5ea6\u5de5\u4f5c\u539f\u7406\u53ca\u5e94\u7528 4.2.1 \u9640\u87ba\u4eea 5 mpu605 \u5e38\u7528\u5bc4\u5b58\u5668 6 iic\u9a71\u52a8\u53d1\u9001\u6307\u4ee4APIs 7 ioctl:\u3000\u7ed9\u9a71\u52a8\u53d1\u9001\u4e0d\u540c\u6307\u4ee4 8 mpu6050\u7684\u6570\u636e 1. \u603b\u7ebf\u7684\u57fa\u672c\u6982\u5ff5 1.1 Linux\u8bbe\u5907\u9a71\u52a8\u6a21\u578b\u7684\u7531\u6765 \u5b9e\u73b0\u5165\u53e3\u51fd\u6570 xxx_init() \u548c\u5378\u8f7d\u51fd\u6570 xxx_exit() \u7533\u8bf7\u8bbe\u5907\u53f7 register_chrdev (\u4e0e\u5185\u6838\u76f8\u5173) \u5229\u7528udev/mdev\u673a\u5236\u521b\u5efa\u8bbe\u5907\u6587\u4ef6(\u8282\u70b9) class_create, device_create (\u4e0e\u5185\u6838\u76f8\u5173) \u786c\u4ef6\u90e8\u5206\u521d\u59cb\u5316 io\u8d44\u6e90\u6620\u5c04 ioremap,\u5185\u6838\u63d0\u4f9bgpio\u5e93\u51fd\u6570 (\u4e0e\u786c\u4ef6\u76f8\u5173) \u6ce8\u518c\u4e2d\u65ad(\u4e0e\u786c\u4ef6\u76f8\u5173) 5. \u6784\u5efa file_operation\u7ed3\u6784 (\u4e0e\u5185\u6838\u76f8\u5173) 6. \u5b9e\u73b0\u64cd\u4f5c\u786c\u4ef6\u65b9\u6cd5 xxx_open,xxx_read,xxxx_write 2. Sysfs\u6587\u4ef6\u7cfb\u7edf : : block\uff1a\u7528\u4e8e\u7ba1\u7406\u5757\u8bbe\u5907\uff0c\u7cfb\u7edf\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5757\u8bbe\u5907\u4f1a\u5728\u8be5\u76ee\u5f55\u4e0b\u5bf9\u5e94\u4e00\u4e2a\u5b50\u76ee\u5f55\u3002 bus\uff1a\u7528\u4e8e\u7ba1\u7406\u603b\u7ebf\uff0c\u6bcf\u6ce8\u518c\u4e00\u6761\u603b\u7ebf\uff0c\u5728\u8be5\u76ee\u5f55\u4e0b\u6709\u4e00\u4e2a\u5bf9\u5e94\u7684\u5b50\u76ee\u5f55\u3002 \u5176\u4e2d\uff0c\u6bcf\u4e2a\u603b\u7ebf\u5b50\u76ee\u5f55\u4e0b\u4f1a\u6709\u4e24\u4e2a\u5b50\u76ee\u5f55\uff1adevices\u548cdrivers\u3002 devices\u5305\u542b\u7cfb\u7edf\u4e2d\u6240\u6709\u5c5e\u4e8e\u8be5\u603b\u7ebf\u7684\u7684\u8bbe\u5907\u3002 class\uff1a\u5c06\u7cfb\u7edf\u4e2d\u7684\u8bbe\u5907\u6309\u529f\u80fd\u5206\u7c7b\u3002 dev\uff1a\u8be5\u76ee\u5f55\u5305\u542b\u5df2\u6ce8\u518c\u7684\u8bbe\u5907\u53f7\uff08\u8bbe\u5907\u8282\u70b9)\u7684\u89c6\u56fe\uff0c\u5305\u62ecchar\u548cblock kernel\uff1a\u5185\u6838\u4e2d\u7684\u76f8\u5173\u53c2\u6570\u3002 module\uff1a\u5185\u6838\u4e2d\u7684\u6a21\u5757\u4fe1\u606f\u3002 fireware\uff1a\u5185\u6838\u4e2d\u7684\u56fa\u4ef6\u4fe1\u606f\u3002 fs\uff1a\u63cf\u8ff0\u5185\u6838\u4e2d\u7684\u6587\u4ef6\u7cfb\u7edf\u3002 3. \u5199\u4e00\u4e2a\u81ea\u5df1\u7684\u603b\u7ebf\u9a71\u52a8 \u5199\u4e00\u4e2a\u81ea\u5df1\u7684\u603b\u7ebf\u6a21\u578b\uff0c\u5b9e\u73b0\u5982\u4e0b\u56fe\u7684\u529f\u80fd\uff1a 3.1 \u5199\u4e00\u4e2a\u81ea\u5df1\u7684\u603b\u7ebf\u9a71\u52a8\u2014\u2014bus \u6570\u636e\u7c7b\u578b struct bus_type { const char *name; //\u5047\u5982name =xxx cat /sys/bus/XXX int ( match)(struct device dev, struct device_driver *drv); ........ } API 2.1 \u521b\u5efa int bus_register(struct bus_type *bus); 2.2 \u6ce8\u9500 void bus_unregister(struct bus_type *bus); 3.2 \u5199\u4e00\u4e2a\u81ea\u5df1\u7684\u603b\u7ebf\u9a71\u52a8\u2014\u2014driver \u6570\u636e\u7c7b\u578b struct device_driver { const char *name; struct bus_type *bus; int (*probe) (struct device *dev); int (*remove) (struct device *dev); }; 3.3 \u5199\u4e00\u4e2a\u81ea\u5df1\u7684\u603b\u7ebf\u9a71\u52a8\u2014\u2014device \u6570\u636e\u7c7b\u578b struct device{ struct kobject kobj;//\u4ee3\u8868\u4e00\u5207\u5bf9\u8c61\u7684\u7236\u7c7b\uff0c\u90a3\u4e48\uff0c\u5728\u8fd9\u91cc\u5f15\u4e86kobject\uff0c\u8bf4\u660edevice\u662f\u7ee7\u627fkobject, const char *init_name; /* device \u7684\u540d\u5b57 */ struct bus_type *bus; /* \u9700\u8981\u6302\u63a5\u4e0a\u7684bus\u603b\u7ebf mybus */ struct device_driver *driver; /* \u4e0e\u4e4b\uff08\u5185\u6838\u505a\u7684\uff09\u5df2\u7ecf\u5339\u914d\u6210\u529f\u7684drv */ void *platform_data; /* \u4e07\u80fd\u578b \u6307\u9488 \u6307\u5411dev\u7684\u81ea\u5b9a\u4e49\u7684\u67d0\u4e9b\u6570\u636e\uff0c\u6216\u8005\u8bf4\u7528\u4e8edrv\u4e0edev\u4f20\u9012\u6570\u636e\u7684\u4e00\u4e2a\u8f7d\u4f53*/ } 2 APIs 2.1 \u521b\u5efa int device_register(struct device *dev) 2.2 \u6ce8\u9500 void device_unregister(struct device *dev) 3.4 \u5982\u4f55\u5b9e\u73b0\u603b\u7ebf\u7684\u5339\u914d \u5982\u4f55\u5b9e\u73b0\u603b\u7ebf\u5339\u914d\uff0c\u5339\u914d\u6210\u529f\u4e4b\u540e\u4f1a\u81ea\u52a8\u8c03\u7528driver\u7684probe\u65b9\u6cd5\uff1a 1\uff0c \u5b9e\u73b0bus\u5bf9\u8c61\u4e2d match\u65b9\u6cd5 2\uff0c \u4fdd\u8bc1driver\u548cdevice\u4e2d\u540d\u5b57\u8981\u4e00\u6837 //\u5982\u679c\u8fd4\u56de\u503c \u4e3a1 \u4ee3\u8868\u5339\u914d\u6210\u529f\uff0c\u5426\u5219\u4e0d\u6210\u529f int mybus_match(struct device *dev, struct device_driver *drv) { printk(\"-------------%s------------\\n\",__FUNCTION__); if( strncmp(dev->kobj.name , drv->name , sizeof(drv->name)) == 0 ) { printk(\"match ok\\n\"); return 1; } else { printk(\"match error\\n\"); return 0; } } 4. \u5e73\u53f0\u603b\u7ebf(platform)\u7684\u57fa\u672c\u6982\u5ff5 \u5e73\u53f0\u603b\u7ebf\u6a21\u578b\uff1a \u4e3a\u4ec0\u4e48\u4f1a\u6709\u5e73\u53f0\u603b\u7ebf\uff1a 1 \u4ece\u5382\u5546\u7684\u89d2\u5ea6\u51fa\u53d1 \u7528\u4e8e\u5e73\u53f0\u5347\u7ea7\uff1a\u4e09\u661f\uff1a\u30002410, 2440, 6410, s5pc100 s5pv210 4412 \u786c\u4ef6\u5e73\u53f0\u5347\u7ea7\u7684\u65f6\u5019\uff0c\u90e8\u5206\u7684\u6a21\u5757\u7684\u63a7\u5236\u65b9\u5f0f\uff0c\u57fa\u672c\u4e0a\u662f\u7c7b\u4f3c\u7684 \u4f46\u662f\u6a21\u5757\u7684\u5730\u5740\u662f\u4e0d\u4e00\u6837 gpio\u63a7\u5236\u903b\u8f91\uff1a 1\uff0c \u914d\u7f6egpio\u7684\u8f93\u5165\u8f93\u51fa\u529f\u80fd\uff1a gpxxconf 2\uff0c \u7ed9gpio\u7684\u6570\u636e\u5bc4\u5b58\u5668\u8bbe\u7f6e\u9ad8\u4f4e\u7535\u5e73\uff1a gpxxdata \u903b\u8f91\u64cd\u4f5c\u57fa\u672c\u4e0a\u662f\u4e00\u6837\u7684 \u4f46\u662f\u5730\u5740\u4e0d\u4e00\u6837 uart\u63a7\u5236\uff1a1,\u8bbe\u7f6e8n1,115200, no AFC UCON,ULCON, UMODOEN, UDIV \"\u903b\u8f91\u57fa\u672c\u4e0a\u662f\u4e00\u6837\u7684,\u4f46\u662f\u5730\u5740\u4e0d\u4e00\u6837\" \u95ee\u9898\uff1a \u5f53soc\u5347\u7ea7\u7684\u65f6\u5019\uff0c \u5bf9\u4e8e\u76f8\u4f3c\u7684\u8bbe\u5907\u9a71\u52a8\uff0c\u9700\u8981\u7f16\u5199\u5f88\u591a\u6b21(\u5982\u679c\u4e0d\u7528\u5e73\u53f0\u603b\u7ebf) \u4f46\u662f\u4f1a\u6709\u5927\u90e8\u5206\u91cd\u590d\u4ee3\u7801 \u89e3\u51b3\uff1a\u5f15\u5165\u5e73\u53f0\u603b\u7ebf device(\u4e2d\u65ad/\u5730\u5740)\u548cdriver(\u64cd\u4f5c\u903b\u8f91) \u5206\u79bb \u5728\u5347\u7ea7\u7684\u65f6\u5019\uff0c\u53ea\u9700\u8981\u4fee\u6539device\u4e2d\u4fe1\u606f\u5373\u53ef(\u4e2d\u65ad/\u5730\u5740) \u5b9e\u73b0\u4e00\u4e2adriver\u4ee3\u7801\u80fd\u591f\u9a71\u52a8\u591a\u4e2a\u5e73\u53f0\u76f8\u4f3c\u7684\u6a21\u5757\uff0c\u5e76\u4e14\u4fee\u6539\u7684\u4ee3\u7801\u91cf\u5f88\u5c11 2 \u4ece\u4f7f\u7528\u8005\u7684\u89d2\u5ea6\u51fa\u53d1 5. \u5e73\u53f0\u603b\u7ebf(platform)\u7f16\u7a0b\u63a5\u53e3 \u5e73\u53f0\u603b\u7ebf\u4e2d\u7684\u4e09\u5143\u7d20\uff1a 1\uff0c bus\uff1a\u90aebus\u884d\u751f\u51fa\u6765\u7684platform_bus:\u4e0d\u9700\u8981\u81ea\u5df1\u521b\u5efa\uff0c\u5f00\u673a\u7684\u65f6\u5019\u81ea\u52a8\u521b\u5efa struct bus_type platform_bus_type = { .name = \"platform\", .dev_groups = platform_dev_groups, .match = platform_match, .uevent = platform_uevent, .pm = &platform_dev_pm_ops, }; \u5339\u914d\u65b9\u6cd5\uff1a static int platform_match(struct device *dev, struct device_driver *drv) { struct platform_device *pdev = to_platform_device(dev); struct platform_driver *pdrv = to_platform_driver(drv); /* Attempt an OF style match first */ if (of_driver_match_device(dev, drv)) return 1; /* Then try ACPI style match */ if (acpi_driver_match_device(dev, drv)) return 1; /* Then try to match against the id table */ if (pdrv->id_table) return platform_match_id(pdrv->id_table, pdev) != NULL; /* fall-back to driver name match */ return (strcmp(pdev->name, drv->name) == 0); } \u3002\u3002\u3002\u3002\u3002\u3002dts acpi 1\uff0c\u4f18\u5148\u5339\u914dpdriver\u4e2d\u7684id_table,\u91cc\u9762\u5305\u542b\u4e86\u652f\u6301\u4e0d\u540c\u7684\u5e73\u53f0\u7684\u540d\u5b57 2\uff0c\u76f4\u63a5\u5339\u914ddriver\u4e2d\u540d\u5b57\u548cdevice\u4e2d\u540d\u5b57 2\uff0cdevice\u5bf9\u8c61\uff1a struct platform_device { const char *name; //\u7528\u4e8e\u505a\u5339\u914d int id; // \u4e00\u822c\u90fd\u662f\u76f4\u63a5\u7ed9-1 struct device dev; // \u7ee7\u627f\u4e86device\u7236\u7c7b u32 num_resources; // \u8d44\u6e90\u7684\u4e2a\u6570 struct resource *resource; // \u8d44\u6e90\uff1a\u5305\u62ec\u4e86\u4e00\u4e2a\u8bbe\u5907\u7684\u5730\u5740\u548c\u4e2d\u65ad } \u8d44\u6e90\u5bf9\u8c61resource: struct resource { resource_size_t start; resource_size_t end; const char *name; unsigned long flags; struct resource *parent, *sibling, *child; }; \u6ce8\u518c\u548c\u6ce8\u9500 int platform_device_register(struct platform_device * pdev)\uff1b void platform_device_unregister(struct platform_device * pdev) 3\uff0cdriver\u5bf9\u8c61 struct platform_driver { int (*probe)(struct platform_device *); //\u5339\u914d\u6210\u529f\u4e4b\u540e\u88ab\u8c03\u7528\u7684\u51fd\u6570 int (*remove)(struct platform_device *);//device\u79fb\u9664\u7684\u65f6\u5019\u8c03\u7528\u7684\u51fd\u6570 struct device_driver driver; //\u7ee7\u627f\u4e86driver\u7236\u7c7b | const char *name; const struct platform_device_id *id_table; //\u5982\u679cdriver\u652f\u6301\u591a\u4e2a\u5e73\u53f0\uff0c\u5728\u5217\u8868\u4e2d\u5199\u51fa\u6765 } \u6ce8\u518c\u548c\u6ce8\u9500 int platform_driver_register(struct platform_driver *drv); void platform_driver_unregister(struct platform_driver *drv) 4\uff0c drv\u5982\u4f55\u53bb\u83b7\u53d6dev\u4e2d\u7684\u6570\u636e \u83b7\u53d6\u8d44\u6e90\u6570\u636e int platform_get_irq(struct platform_device * dev,unsigned int num) struct resource * platform_get_resource_byname(struct platform_device * dev, unsigned int type,const char * name) 5. \u5199\u4e00\u4e2aplatform led\u9a71\u52a8 \u7f16\u5199\u4ee3\u7801\uff1a\u3000\u7f16\u5199\u4e00\u4e2a\u80fd\u5728\u591a\u4e2a\u5e73\u53f0\u4e0b\u4f7f\u7528\u7684led\u9a71\u52a8 1\uff0c\u6ce8\u518c\u4e00\u4e2aplatform_device,\u5b9a\u4e49\u8d44\u6e90\uff1a\u5730\u5740\u548c\u4e2d\u65ad struct resource { resource_size_t start; // \u5f00\u59cb resource_size_t end; //\u7ed3\u675f const char *name; //\u63cf\u8ff0\uff0c\u81ea\u5b9a\u4e49 unsigned long flags; //\u533a\u5206\u5f53\u524d\u8d44\u6e90\u63cf\u8ff0\u7684\u662f\u4e2d\u65ad(IORESOURCE_IRQ)\u8fd8\u662f\u5185\u5b58\uff08IORESOURCE_MEM\uff09 #define IORESOURCE_MEM 0x00000200 #define IORESOURCE_REG 0x00000300 /* Register offsets */ #define IORESOURCE_IRQ 0x00000400 struct resource *parent, *sibling, *child; }; 2\uff0c\u6ce8\u518c\u4e00\u4e2aplatform_driver\uff0c\u5b9e\u73b0\u64cd\u4f5c\u8bbe\u5907\u7684\u4ee3\u7801 \u6ce8\u518c\u5b8c\u6bd5\uff0c\u540c\u65f6\u5982\u679c\u548cpdev\u5339\u914d\u6210\u529f\uff0c\u81ea\u52a8\u8c03\u7528probe\u65b9\u6cd5\uff1a probe\u65b9\u6cd5\uff1a \u5bf9\u786c\u4ef6\u8fdb\u884c\u64cd\u4f5c a\uff0c\u6ce8\u518c\u8bbe\u5907\u53f7\uff0c\u5e76\u4e14\u6ce8\u518cfops--\u4e3a\u7528\u6237\u63d0\u4f9b\u4e00\u4e2a\u8bbe\u5907\u6807\u793a\uff0c\u540c\u65f6\u63d0\u4f9b\u6587\u4ef6\u64cd\u4f5cio\u63a5\u53e3 b\uff0c \u521b\u5efa\u8bbe\u5907\u8282\u70b9 c\uff0c \u521d\u59cb\u5316\u786c\u4ef6 ioremap(\u5730\u5740); //\u5730\u5740\u4ecepdev\u9700\u8981\u83b7\u53d6 readl/writle(); d\uff0c\u5b9e\u73b0\u5404\u79cdio\u63a5\u53e3\uff1a xxx_open, xxx_read, .. \u83b7\u53d6\u8d44\u6e90\u7684\u65b9\u5f0f\uff1a //\u83b7\u53d6\u8d44\u6e90 // \u53c2\u65701: \u4ece\u54ea\u4e2apdev\u4e2d\u83b7\u53d6\u8d44\u6e90 // \u53c2\u65702: \u8d44\u6e90\u7c7b\u578b // \u53c2\u65703: \u8868\u793a\u83b7\u53d6\u540c\u79cd\u8d44\u6e90\u7684\u7b2c\u51e0\u4e2a struct resource *platform_get_resource(struct platform_device *dev, unsigned int type, unsigned int num) 3\uff0cplatform \u83b7\u53d6\u4e2d\u65ad\uff08irq\uff09\u8d44\u6e90 / * platform_get_irq - get an IRQ for a device * @dev: platform device * @num: IRQ number index / int platform_get_irq(struct platform_device dev, unsigned int num) 4 \uff0cplatform id_table\u7684\u5b9a\u4e49\uff1a struct platform_device_id { char name[PLATFORM_NAME_SIZE]; kernel_ulong_t driver_data; }; IIC\u603b\u7ebf\u9a71\u52a8 \u4e3b\u8981\u5185\u5bb9\uff1a i2c\u534f\u8bae\u548c\u65f6\u5e8f i2c\u5b50\u7cfb\u7edf\u8f6f\u4ef6\u6846\u67b6 i2c\u4ece\u8bbe\u5907\u9a71\u52a8\u7f16\u5199\u65b9\u5f0f--\u4e0d\u8003\u8651\u5177\u4f53\u7684\u786c\u4ef6 mpu6050\u786c\u4ef6\u8fde\u63a5\uff0c\u9640\u87ba\u4eea\u548c\u52a0\u901f\u5ea6\u5de5\u4f5c\u539f\u7406\uff0c\u5b83\u4eec\u7684\u5e94\u7528 mpu6050\u6570\u636e\u548c\u83b7\u53d6 mpu6050\u4ece\u8bbe\u5907\u9a71\u52a8\u7f16\u5199 1 i2c\u534f\u8bae\u548c\u65f6\u5e8f IIC\u901a\u8baf\u6ce2\u5f62\u56fe: IIC\u534f\u8bae: 2 i2c\u5b50\u7cfb\u7edf\u8f6f\u4ef6\u6846\u67b6 ## \u5e94\u7528 ------------------------------------------ i2c driver:\u4ece\u8bbe\u5907\u9a71\u52a8\u5c42 \u9700\u8981\u548c\u5e94\u7528\u5c42\u8fdb\u884c\u4ea4\u4e92 \u5c01\u5305\u6570\u636e\uff0c\u4e0d\u77e5\u9053\u6570\u636e\u662f\u5982\u4f55\u5199\u5165\u5230\u786c\u4ef6 ------------------------------------------ i2c \u6838\u5fc3\u5c42\uff1a\u7ef4\u62a4i2c \u603b\u7ebf\uff0c\u5305\u62eci2c driver, i2c client\u94fe\u8868 drivers/i2c/i2c-core.c --------------------------------------------------- i2c adapter\u5c42\uff1ai2c\u63a7\u5236\u5c42\uff0c\u521d\u59cb\u5316i2c\u63a7\u5236\u5668 \u5b8c\u6210\u5c06\u6570\u636e\u5199\u5165\u6216\u8bfb\u53d6-\u4ece\u8bbe\u5907\u786c\u4ef6 \u4e0d\u77e5\u9053\u6570\u636e\u5177\u4f53\u662f\u4ec0\u4e48\uff0c\u4f46\u662f\u77e5\u9053\u5982\u4f55\u64cd\u4f5c\u4ece\u8bbe\u5907 drivers/i2c/busses/i2c-s3c2410.c ================================================================ \u53bb\u5185\u6838\u786e\u5b9a\uff1ai2c\u786c\u4ef6\u9a71\u52a8\u4ee3\u7801\u662f\u5426\u52a0\u5165\u5185\u6838\u4e00\u8d77\u7f16\u8bd1 make menuconfig Device Drivers ---> -*- I2C support ---> //\u7f16\u8bd1i2c-core.c I2C Hardware Bus support ---> <*> S3C2410 I2C Driver // i2c-s3c2410.c 3 I2c\u5b50\u7cfb\u7edf\u4e2d\u6d89\u53ca\u5230\u7684\u8bbe\u5907\u6811\u6587\u4ef6\uff1a \u67e5\u770b\u539f\u7406\u56fe\uff1aMPU6050\u6302\u8f7d\u81f3 I2C_5 \u67e5\u770b6050datasheet\uff1a\u5982\u679cAD0\u662f\u9ad8\u7535\u5e73\u7684\u8bdd\uff0c\u90a3\u4e48\uff0cmpu6050\u7684\u5730\u5740\u5c31\u662f0x69,\u5426\u5219AD0\u4e3a\u4f4e\u65f6\u5019\uff0c\u5c31\u662f0x68 \u8bbe\u5907\u6811\uff1a \u63a7\u5236\u5668\u5bf9\u5e94\u7684\u8bbe\u5907\u6811\uff1aarch/arm/boot/dts/exynos4.dtsi i2c_0: i2c@13860000 { #address-cells = <1>; #size-cells = <0>; compatible = \"samsung,s3c2440-i2c\"; reg = <0x13860000 0x100>; interrupts = <0 58 0>; clocks = <&clock 317>; clock-names = \"i2c\"; pinctrl-names = \"default\"; pinctrl-0 = <&i2c0_bus>; status = \"disabled\"; }; i2c_5: i2c@138B0000 { #address-cells = <1>; #size-cells = <0>; compatible = \"samsung,s3c2440-i2c\"; reg = <0x138B0000 0x100>; interrupts = <0 63 0>; clocks = <&clock 322>; clock-names = \"i2c\"; status = \"disabled\"; }; \u6211\u4eec\u7528\u7684\uff1a arch/arm/boot/dts/exynos4412-fs4412.dts i2c@13860000 { #address-cells = <1>; #size-cells = <0>; samsung,i2c-sda-delay = <100>; samsung,i2c-max-bus-freq = <20000>; pinctrl-0 = <&i2c0_bus>; pinctrl-names = \"default\"; status = \"okay\"; s5m8767_pmic@66 { compatible = \"samsung,s5m8767-pmic\"; reg = <0x66>; ........... }; }; \u6211\u4eec\u81ea\u5df1\u505a\u4e00\u4e2a\u8bbe\u5907\u6811\u8282\u70b9\uff0c\u6765\u63cf\u8ff0mpu6050\u7684\u4fe1\u606f\uff1a i2c\u63a7\u5236\u5668\u5730\u57400-8\u7ec4 \u51719\u7ec4\u8bbe\u5907 0x1386_0000, //0 0x1387_0000, 0x1388_0000, 0x1389_0000, 0x138A_0000, 0x138B_0000, ------ MPU6050 0x138C_0000, 0x138D_0000, 0x138E_0000,//8 i2C_5\u7684\u8bbe\u5907\u6811\u8282\u70b9\uff1a i2c@138B0000{ #address-cells = <1>; #size-cells = <0>; samsung,i2c-sda-delay = <100>; samsung,i2c-max-bus-freq = <20000>; pinctrl-0 = <&i2c5_bus>; pinctrl-names = \"default\"; status = \"okay\"; mpu6050@68 { compatible = \"InvenSense,mpu6050\"; reg = <0x68>; }; }; \u7f16\u8bd1\u8bbe\u5907\u6811\u6e90\u7801\uff1a make dtbs \u70e7\u5199\uff1a\u3002\u3002\u3002\u3002\u3002\u3002\u3002 4 i2c driver\u9a71\u52a8\u7684\u7f16\u5199 a\uff0c \u6dfb\u52a0i2c client\u7684\u4fe1\u606f\uff0c\u5fc5\u987b\u5305\u542b\u5728\u63a7\u5236\u5668\u5bf9\u5e94\u7684\u8282\u70b9\u4e2d b\uff0c\u76f4\u63a5\u7f16\u5199i2c driver 1\uff0c\u6784\u5efai2c driver\uff0c\u5e76\u6ce8\u518c\u5230i2c\u603b\u7ebf 2\uff0c\u5b9e\u73b0probe\uff1a | \u7533\u8bf7\u8bbe\u5907\u53f7\uff0c\u5b9e\u73b0fops \u521b\u5efa\u8bbe\u5907\u6587\u4ef6 \u901a\u8fc7i2c\u7684\u63a5\u53e3\u53bb\u521d\u59cb\u5316i2c\u4ece\u8bbe\u5907 \u51e0\u4e2a\u5e38\u7528\u7684\u5bf9\u8c61\uff1a struct i2c_driver {//\u8868\u793a\u662f\u4e00\u4e2a\u4ece\u8bbe\u5907\u7684\u9a71\u52a8\u5bf9\u8c61 int (*probe)(struct i2c_client *, const struct i2c_device_id *); int (*remove)(struct i2c_client *); struct device_driver driver; //\u7ee7\u627f\u4e86\u7236\u7c7b | const struct of_device_id *of_match_table; const struct i2c_device_id *id_table;//\u7528\u4e8e\u505a\u6bd4\u5bf9\uff0c\u975e\u8bbe\u5907\u6811\u7684\u60c5\u51b5 } \u6ce8\u518c\u548c\u6ce8\u9500 int i2c_add_driver( struct i2c_driver *driver); void i2c_del_driver(struct i2c_driver *); struct i2c_client {//\u63cf\u8ff0\u4e00\u4e2a\u4ece\u8bbe\u5907\u7684\u4fe1\u606f,\u4e0d\u9700\u8981\u5728\u4ee3\u7801\u4e2d\u521b\u5efa\uff0c\u56e0\u4e3a\u662f\u7531i2c adapter\u5e2e\u6211\u4eec\u521b\u5efa unsigned short addr; //\u4ece\u8bbe\u5907\u5730\u5740\uff0c\u6765\u81ea\u4e8e\u8bbe\u5907\u6811\u4e2d<reg> char name[I2C_NAME_SIZE]; //\u7528\u4e8e\u548ci2c driver\u8fdb\u884c\u5339\u914d\uff0c\u6765\u81ea\u4e8e\u8bbe\u5907\u6811\u4e2dcompatible struct i2c_adapter *adapter;//\u6307\u5411\u5f53\u524d\u4ece\u8bbe\u5907\u6240\u5b58\u5728\u7684i2c adapter struct device dev; // \u7ee7\u627f\u4e86\u7236\u7c7b }; \u521b\u5efai2c client\u7684\u51fd\u6570 struct i2c_client *i2c_new_device(struct i2c_adapter *adap, struct i2c_board_info const *info) struct i2c_adapter {//\u63cf\u8ff0\u4e00\u4e2ai2c\u63a7\u5236\u5668\uff0c\u4e5f\u4e0d\u662f\u6211\u4eec\u8981\u6784\u5efa\uff0c\u539f\u5382\u7684\u4ee3\u7801\u4f1a\u5e2e\u6211\u4eec\u6784\u5efa const struct i2c_algorithm *algo; //\u7b97\u6cd5 | int (*master_xfer)(struct i2c_adapter *adap, struct i2c_msg *msgs,int num); struct device dev; //\u7ee7\u627f\u4e86\u7236\u7c7b\uff0c\u4e5f\u4f1a\u88ab\u52a0\u5165\u5230i2c bus int nr; //\u7f16\u53f7 } \u6ce8\u518c\u548c\u6ce8\u9500\uff1a int i2c_add_adapter(struct i2c_adapter * adapter); void i2c_del_adapter(struct i2c_adapter * adap); \u7f16\u5199\u4e00\u4e2a\u6700\u7b80\u5355\u7684i2c driver\u9a71\u52a8\uff0c\u6700\u7ec8\u53ef\u5b9e\u73b0\u8c03\u7528 i2c\u7684probe\uff0c\u4ee3\u7801\u53ef\u53c2\u8003\uff086th/iic_drv\uff09 4 \u9640\u87ba\u4eea\u548c\u52a0\u901f\u5ea6\u5de5\u4f5c\u539f\u7406\uff0c\u5b83\u4eec\u7684\u5e94\u7528 4.1 \u786c\u4ef6\u63a5\u7ebf\u56fe \u67e5\u770b\u539f\u7406\u56fe\uff1aMPU6050\u6302\u8f7d\u81f3 I2C_5 \u67e5\u770b6050datasheet\uff1a\u5982\u679cAD0\u662f\u9ad8\u7535\u5e73\u7684\u8bdd\uff0c\u90a3\u4e48\uff0cmpu6050\u7684\u5730\u5740\u5c31\u662f0x69,\u5426\u5219AD0\u4e3a\u4f4e\u65f6\u5019\uff0c\u5c31\u662f0x68 4.2 \u9640\u87ba\u4eea\u548c\u52a0\u901f\u5ea6\u5de5\u4f5c\u539f\u7406\u53ca\u5e94\u7528 4.2.1 \u9640\u87ba\u4eea \u9640\u87ba\u4eea\u7684\u6a21\u578b\uff1a \u539f\u7406\uff1a \u5c0f\u65f6\u5019\u73a9\u8fc7\u9640\u87ba\uff0c\u5982\u679c\u7ed9\u5b83\u4e00\u5b9a\u7684\u65cb\u8f6c\u901f\u5ea6\uff0c\u9640\u87ba\u4f1a\u7ad6\u7acb\u65cb\u8f6c\u8d77\u6765\u800c\u4e0d\u4f1a\u5012 \u4e3b\u8981\u56e0\u4e3a\u9ad8\u901f\u65cb\u8f6c\u6709\u6297\u62d2\u65b9\u5411\u6539\u53d8\u7684\u8d8b\u5411 \u9640\u87ba\u4eea\u5c31\u662f\u5185\u90e8\u7684\u8f6c\u5b50\u9ad8\u901f\u65cb\u8f6c\uff0c\u5f62\u6210\u4e00\u4e2a\u56fa\u5b9a\u7684\u521d\u59cb\u5316\u7684\u53c2\u8003\u5e73\u9762 \u8fd9\u6837\u5c31\u53ef\u4ee5\u901a\u8fc7\u6d4b\u91cf\u521d\u59cb\u7684\u53c2\u8003\u5e73\u9762\u504f\u5dee\u8ba1\u7b97\u51fa\u7269\u4f53\u7684\u65cb\u8f6c\u60c5\u51b5 \u9640\u87ba\u4eea\u7684\u5f3a\u9879\u5728\u4e8e\u6d4b\u91cf\u8bbe\u5907\u81ea\u8eab\u7684\u65cb\u8f6c\u8fd0\u52a8 \u9640\u87ba\u4eea\u7684\u4ea7\u751f\uff1a 1850\u5e74\u6cd5\u56fd\u7684\u7269\u7406\u5b66\u5bb6\u798f\u67ef(J.Foucault)\u4e3a\u4e86\u7814\u7a76\u5730\u7403\u81ea\u8f6c\uff0c\u9996\u5148\u53d1\u73b0\u9ad8\u901f\u8f6c\u52a8\u4e2d\u7684\u8f6c\u5b50(rotor)\uff0c \u7531\u4e8e\u60ef\u6027\u4f5c\u7528\u5b83\u7684\u65cb\u8f6c\u8f74\u6c38\u8fdc\u6307\u5411\u4e00\u56fa\u5b9a\u65b9\u5411\uff0c\u4ed6\u7528\u5e0c\u814a\u5b57gyro(\u65cb\u8f6c)\u548cskopein(\u770b) \u4e24\u5b57\u5408\u4e3agyro scopei\u4e00\u5b57\u6765\u547d\u540d\u8fd9\u79cd\u4eea\u8868 \u9640\u87ba\u4eea\u7684\u57fa\u672c\u90e8\u4ef6\uff1a (1) \u9640\u87ba\u8f6c\u5b50\uff0c\u8f6c\u5b50\u88c5\u5728\u4e00\u652f\u67b6\u5185 (2)\u5185\u3001\u5916\u73af\uff0c\u5b83\u662f\u4f7f\u9640\u87ba\u81ea\u8f6c\u8f74\u83b7\u5f97\u6240\u9700\u89d2\u8f6c\u52a8\u81ea\u7531\u5ea6\u7684\u7ed3\u6784 \u5185\u73af\u53ef\u73af\u7ed5\u5e73\u9762\u4e24\u8f74\u4f5c\u81ea\u7531\u8fd0\u52a8 \u5728\u5185\u73af\u67b6\u5916\u52a0\u4e0a\u4e00\u5916\u73af\u67b6\uff0c\u53ef\u4ee5\u73af\u7ed5\u5e73\u9762\u505a\u4e09\u8f74\u4f5c\u81ea\u7531\u8fd0\u52a8 (3) \u9644\u4ef6(\u662f\u6307\u529b\u77e9\u9a6c\u8fbe\u3001\u4fe1\u53f7\u4f20\u611f\u5668\u7b49)\u3002 \u9640\u87ba\u4eea\u7684\u6570\u636e\u83b7\u53d6\uff1a XYZ\u5206\u522b\u4ee3\u8868\u8bbe\u5907\u56f4\u7ed5XYZ\u4e09\u4e2a\u8f74\u65cb\u8f6c\u7684\u89d2\u901f\u5ea6\uff0c\u9640\u87ba\u4eea\u53ef\u4ee5\u6355\u6349\u5f88\u5fae\u5c0f\u7684\u8fd0\u52a8\u8f68\u8ff9\u53d8\u5316\uff0c \u56e0\u6b64\u53ef\u4ee5\u505a\u9ad8\u5206\u8fa8\u7387\u548c\u5feb\u901f\u53cd\u5e94\u7684\u65cb\u8f6c\u68c0\u6d4b\uff0c\u4f46\u4e0d\u80fd\u6d4b\u91cf\u5f53\u524d\u7684\u8fd0\u884c\u65b9\u5411 \u5e94\u7528\uff1a 1\uff0c\u9640\u87ba\u4eea\u7528\u4e8e\u98de\u884c\u4f53\u8fd0\u52a8\u7684\u81ea\u52a8\u63a7\u5236\u7cfb\u7edf\u4e2d\uff0c\u4f5c\u4e3a\u6c34\u5e73\u3001\u5782\u76f4\u3001\u4fef\u4ef0\u3001\u822a\u5411\u548c\u89d2\u901f\u5ea6\u4f20\u611f\u5668 2\uff0c\u624b\u673a\u4e0a\u7684\u6444\u50cf\u5934\u914d\u5408\u4f7f\u7528\uff0c\u6bd4\u5982\u9632\u6296 3\uff0c\u5404\u7c7b\u624b\u673a\u6e38\u620f\u7684\u4f20\u611f\u5668\uff0c\u5305\u62ec\u4e00\u4e9b\u7b2c\u4e00\u89c6\u89d2\u7c7b\u5c04\u51fb\u6e38\u620f\uff0c\u9640\u87ba\u4eea\u5b8c\u6574\u76d1\u6d4b\u6e38\u620f\u8005\u624b\u7684\u4f4d\u79fb \u624b\u673a\u4e2d\u7684\u9640\u87ba\u4eea\u6700\u65e9\u88abiphone4\u5e94\u7528\uff0c\u6240\u4ee5\u88ab\u5927\u5bb6\u6240\u719f\u77e5 4\uff0c\u5bfc\u822a\uff0c\u624b\u673a\u914d\u5408GPS\uff0c\u5bfc\u822a\u80fd\u529b\u5df2\u7ecf\u53ef\u4ee5\u8fbe\u5230\u4e13\u7528\u7684gps\u5bfc\u822a\u4eea \u52a0\u901f\u5ea6\u4f20\u611f\u5668\uff1a \u91cd\u529b\u52a0\u901f\u5ea6\u4f20\u611f\u5668\u7684\u6a21\u578b\uff1a \u539f\u7406\uff1a \u91cd\u529b\u65bd\u52a0\u5728\u7269\u4f53\u4e0a,\u4f7f\u5b83\u4ea7\u751f\u4e00\u4e2a\u52a0\u901f\u5ea6\uff0c\u91cd\u529b\u5927\u5c0f\u548c\u6b64\u7269\u4f53\u7684\u8d28\u91cf\u6210\u6b63\u6bd4 \u7269\u4f53\u5728\u4e0d\u540c\u7684\u8fd0\u884c\u4e2d\uff0c\u4f1a\u4ea7\u751f\u4e0d\u540c\u7684\u91cd\u529b\uff0c\u4ece\u800c\u53ef\u4ee5\u6d4b\u91cf\u51fa\u7269\u4f53\u7684\u8fd0\u52a8\u60c5\u51b5 \u91cd\u529b\u52a0\u901f\u5ea6\u7684\u6570\u636e\u83b7\u53d6\uff1a \u52a0\u901f\u5ea6\u6d4b\u91cf\u4f20\u611f\u5668\u6709x\u3001y\u3001z\u4e09\u8f74\uff0c\u6ce8\u610f\u5728\u624b\u673a\u4e0a\u5c4f\u5e55\u7684\u5750\u6807\uff0c\u4ee5\u5de6\u4e0a\u89d2\u4f5c\u4e3a\u539f\u70b9\u7684\uff0c\u800c\u4e14Y\u5411\u4e0b\u3002 \u6ce8\u610f\u533a\u5206\u8fd9\u4e24\u4e2a\u4e0d\u540c\u7684\u5750\u6807\u7cfb\u3002 \u52a0\u901f\u4f20\u611f\u5668\u7684\u5355\u4f4d\u662f\u52a0\u901f\u5ea6m/s2\u3002\u5982\u679c\u624b\u673a\u5e73\u653e\u597d\uff0cx\uff0cy\u5728\u4f4d\u7f6e\u4e3a0\uff0c \u800cz\u8f74\u65b9\u5411\u52a0\u901f\u5ea6=\u5f53\u524dz\u65b9\u5411\u52a0\u901f\u5ea6-g\u3002\u7531\u4e8eg\uff08\u91cd\u529b\u52a0\u901f\u5ea6\uff09\u5782\u76f4\u5411\u4e0b\uff0c \u5219g=-9.81m/s2\uff0c\u5373z\u8f74 a=0-(-9.81)=9.81m/s2 \u5e94\u7528\uff1a 1\uff0c\u56fe\u50cf\u81ea\u52a8\u7ffb\u8f6c 2\uff0c\u6e38\u620f\u63a7\u5236 3\uff0c\u8ba1\u6b65\u5668\u529f\u80fd 5 mpu605 \u5e38\u7528\u5bc4\u5b58\u5668 #define SMPLRT_DIV 0x19 //\u91c7\u6837\u9891\u7387\u5bc4\u5b58\u5668-25 \u5178\u578b\u503c\uff1a0x07(125Hz) //\u5bc4\u5b58\u5668\u96c6\u5408\u91cc\u7684\u6570\u636e\u6839\u636e\u91c7\u6837\u9891\u7387\u66f4\u65b0 #define CONFIG 0x1A //\u914d\u7f6e\u5bc4\u5b58\u5668-26-\u5178\u578b\u503c\uff1a0x06(5Hz) //DLPF is disabled\uff08DLPF_CFG=0 or 7\uff09 #define GYRO_CONFIG 0x1B//\u9640\u87ba\u4eea\u914d\u7f6e-27,\u53ef\u4ee5\u914d\u7f6e\u81ea\u68c0\u548c\u6ee1\u91cf\u7a0b\u8303\u56f4 //\u5178\u578b\u503c\uff1a0x18(\u4e0d\u81ea\u68c0\uff0c2000deg/s) #define ACCEL_CONFIG 0x1C //\u52a0\u901f\u5ea6\u914d\u7f6e-28 \u53ef\u4ee5\u914d\u7f6e\u81ea\u68c0\u548c\u6ee1\u91cf\u7a0b\u8303\u56f4\u53ca\u9ad8\u901a\u6ee4\u6ce2\u9891\u7387 //\u5178\u578b\u503c\uff1a0x01(\u4e0d\u81ea\u68c0\uff0c2G\uff0c5Hz) #define ACCEL_XOUT_H 0x3B //59-65,\u52a0\u901f\u5ea6\u8ba1\u6d4b\u91cf\u503c XOUT_H #define ACCEL_XOUT_L 0x3C // XOUT_L #define ACCEL_YOUT_H 0x3D //YOUT_H #define ACCEL_YOUT_L 0x3E //YOUT_L #define ACCEL_ZOUT_H 0x3F //ZOUT_H #define ACCEL_ZOUT_L 0x40 //ZOUT_L---64 #define TEMP_OUT_H 0x41 //\u6e29\u5ea6\u6d4b\u91cf\u503c--65 #define TEMP_OUT_L 0x42 #define GYRO_XOUT_H 0x43 //\u9640\u87ba\u4eea\u503c--67\uff0c\u91c7\u6837\u9891\u7387\uff08\u7531\u5bc4\u5b58\u5668 25 \u5b9a\u4e49\uff09\u5199\u5165\u5230\u8fd9\u4e9b\u5bc4\u5b58\u5668 #define GYRO_XOUT_L 0x44 #define GYRO_YOUT_H 0x45 #define GYRO_YOUT_L 0x46 #define GYRO_ZOUT_H 0x47 #define GYRO_ZOUT_L 0x48 //\u9640\u87ba\u4eea\u503c--72 #define PWR_MGMT_1 0x6B //\u7535\u6e90\u7ba1\u7406 \u5178\u578b\u503c\uff1a0x00(\u6b63\u5e38\u542f\u7528) 6 iic\u9a71\u52a8\u53d1\u9001\u6307\u4ee4APIs //\u53d1\u9001iic\u6570\u636e\u7684API i2c_master_send(const struct i2c_client * client, const char * buf, int count) //\u63a5\u6536 i2c_master_recv(const struct i2c_client * client, char * buf, int count) \u4f20\u9001iic\u6d88\u606f\u7684\u6700\u5c0f\u5355\u4f4d\u4e3astruct i2c_msg msg; struct i2c_msg {//\u63cf\u8ff0\u4e00\u4e2a\u4ece\u8bbe\u5907\u8981\u53d1\u9001\u7684\u6570\u636e\u7684\u6570\u636e\u5305 __u16 addr; //\u4ece\u8bbe\u5907\u5730\u5740\uff0c\u53d1\u9001\u7ed9\u90a3\u4e2a\u4ece\u8bbe\u5907 __u16 flags; //\u8bfb1\u8fd8\u662f\u51990 __u16 len; //\u6536\u53d1\u6570\u636e\u7684\u957f\u5ea6 __u8 *buf; //\u6307\u5411\u6536\u53d1\u6570\u636e\u7684\u6307\u9488 }; \u4ee5\u4e0a\u4e24\u4e2a\u51fd\u6570\u90fd\u8c03\u7528\u4e86\uff1a int i2c_transfer(struct i2c_adapter *adap, struct i2c_msg *msgs, int num) 7 ioctl:\u3000\u7ed9\u9a71\u52a8\u53d1\u9001\u4e0d\u540c\u6307\u4ee4 \u5e94\u7528\u7a0b\u5e8f\uff1a ioctl(fd, cmd, args); ======================================== \u9a71\u52a8\u4e2d\uff1axxx_ioctl() { switch(cmd){ } } \u5982\u4f55\u5b9a\u4e49\u547d\u4ee4\uff1a 1\uff0c \u76f4\u63a5\u5b9a\u4e49\u4e00\u4e2a\u6570\u5b57 #define IOC_GET_ACCEL 0x9999 2, \u901a\u8fc7\u7cfb\u7edf\u7684\u63a5\u53e3 _IO(x,y) _IOR(x,y,z) _IOW(x,y,z) \u53c2\u65701\uff1a\u8868\u793amagic\uff0c\u5b57\u7b26 \u53c2\u65702\uff1a\u533a\u5206\u4e0d\u540c\u547d\u4ee4\uff0c\u6574\u6570\u3000 \u53c2\u6570\uff13\uff1a\u4f20\u7ed9\u9a71\u52a8\u6570\u636e\u7c7b\u578b mpu605\u2014\u2014ioctl\u7684\u7528\u6cd5\u4e3e\u4f8b\uff1a #define IOC_GET_ACCEL _IOR('M', 0x34,union mpu6050_data) #define IOC_GET_GYRO _IOR('M', 0x35,union mpu6050_data) #define IOC_GET_TEMP _IOR('M', 0x36,union mpu6050_data) 8 mpu6050\u7684\u6570\u636e \u9640\u87ba\u4eea\u53ef\u6d4b\u8303\u56f4\u4e3a \u6b27\u62c9\u89d2\u683c\u5f0f\u00b1250\uff0c\u00b1500\uff0c\u00b11000\uff0c\u00b12000\u00b0/\u79d2\uff08dps\uff09 \uff0c\u52a0\u901f\u5ea6\u8ba1\u53ef\u6d4b\u8303\u56f4\u4e3a\u00b12\uff0c\u00b14\uff0c\u00b18\uff0c\u00b116g \u52a0\u901f\u5ea6\u8bfb\u53d6\u7684\u503c\u4e3a\uff1a AFS_SEL Full scale rang LSB Sensitivy 0 +-2g -----------------------16384 LSB/g 1 +-4g -----------------------8192 LSB/g 2 +-8g -----------------------4096 LSB/g 3 +-16g------------------------2048 LSB/g \u6e29\u5ea6\u503c\uff1a C = (TEMP_OUT Register Value )/340 + 36.53 \u9640\u87ba\u4eea\u503c\uff1a FS_SEL Full scale rang LSB Sensitivy 0 +-250 \u5ea6/s ------------------131 LSB \u5ea6/s 1 +-500 \u5ea6/s ------------------65.5 LSB \u5ea6/s 2 +-1000 \u5ea6/s -----------------32.8 LSB \u5ea6/s 3 +-2000 \u5ea6/s ------------------16.4 LSB \u5ea6/s","title":"\u9a71\u52a8\u7b2c\u4e09\u5929"},{"location":"\u9a71\u52a8\u7b2c\u4e09\u5929---\u603b\u7ebf/#-","text":"\u9a71\u52a8\u7b2c\u4e09\u5929---\u603b\u7ebf 1. \u603b\u7ebf\u7684\u57fa\u672c\u6982\u5ff5 2. Sysfs\u6587\u4ef6\u7cfb\u7edf 3. \u5199\u4e00\u4e2a\u81ea\u5df1\u7684\u603b\u7ebf\u9a71\u52a8 3.1 \u5199\u4e00\u4e2a\u81ea\u5df1\u7684\u603b\u7ebf\u9a71\u52a8\u2014\u2014bus 3.2 \u5199\u4e00\u4e2a\u81ea\u5df1\u7684\u603b\u7ebf\u9a71\u52a8\u2014\u2014driver 3.3 \u5199\u4e00\u4e2a\u81ea\u5df1\u7684\u603b\u7ebf\u9a71\u52a8\u2014\u2014device 3.4 \u5982\u4f55\u5b9e\u73b0\u603b\u7ebf\u7684\u5339\u914d 4. \u5e73\u53f0\u603b\u7ebf(platform)\u7684\u57fa\u672c\u6982\u5ff5 \u4e3a\u4ec0\u4e48\u4f1a\u6709\u5e73\u53f0\u603b\u7ebf\uff1a 5. \u5e73\u53f0\u603b\u7ebf(platform)\u7f16\u7a0b\u63a5\u53e3 5. \u5199\u4e00\u4e2aplatform led\u9a71\u52a8 IIC\u603b\u7ebf\u9a71\u52a8 1 i2c\u534f\u8bae\u548c\u65f6\u5e8f 2 i2c\u5b50\u7cfb\u7edf\u8f6f\u4ef6\u6846\u67b6 ## 3 I2c\u5b50\u7cfb\u7edf\u4e2d\u6d89\u53ca\u5230\u7684\u8bbe\u5907\u6811\u6587\u4ef6\uff1a 4 i2c driver\u9a71\u52a8\u7684\u7f16\u5199 \u7f16\u5199\u4e00\u4e2a\u6700\u7b80\u5355\u7684i2c driver\u9a71\u52a8\uff0c\u6700\u7ec8\u53ef\u5b9e\u73b0\u8c03\u7528 i2c\u7684probe\uff0c\u4ee3\u7801\u53ef\u53c2\u8003\uff086th/iic_drv\uff09 4 \u9640\u87ba\u4eea\u548c\u52a0\u901f\u5ea6\u5de5\u4f5c\u539f\u7406\uff0c\u5b83\u4eec\u7684\u5e94\u7528 4.1 \u786c\u4ef6\u63a5\u7ebf\u56fe 4.2 \u9640\u87ba\u4eea\u548c\u52a0\u901f\u5ea6\u5de5\u4f5c\u539f\u7406\u53ca\u5e94\u7528 4.2.1 \u9640\u87ba\u4eea 5 mpu605 \u5e38\u7528\u5bc4\u5b58\u5668 6 iic\u9a71\u52a8\u53d1\u9001\u6307\u4ee4APIs 7 ioctl:\u3000\u7ed9\u9a71\u52a8\u53d1\u9001\u4e0d\u540c\u6307\u4ee4 8 mpu6050\u7684\u6570\u636e","title":"\u9a71\u52a8\u7b2c\u4e09\u5929---\u603b\u7ebf"},{"location":"\u9a71\u52a8\u7b2c\u4e09\u5929---\u603b\u7ebf/#1","text":"1.1 Linux\u8bbe\u5907\u9a71\u52a8\u6a21\u578b\u7684\u7531\u6765 \u5b9e\u73b0\u5165\u53e3\u51fd\u6570 xxx_init() \u548c\u5378\u8f7d\u51fd\u6570 xxx_exit() \u7533\u8bf7\u8bbe\u5907\u53f7 register_chrdev (\u4e0e\u5185\u6838\u76f8\u5173) \u5229\u7528udev/mdev\u673a\u5236\u521b\u5efa\u8bbe\u5907\u6587\u4ef6(\u8282\u70b9) class_create, device_create (\u4e0e\u5185\u6838\u76f8\u5173) \u786c\u4ef6\u90e8\u5206\u521d\u59cb\u5316 io\u8d44\u6e90\u6620\u5c04 ioremap,\u5185\u6838\u63d0\u4f9bgpio\u5e93\u51fd\u6570 (\u4e0e\u786c\u4ef6\u76f8\u5173) \u6ce8\u518c\u4e2d\u65ad(\u4e0e\u786c\u4ef6\u76f8\u5173) 5. \u6784\u5efa file_operation\u7ed3\u6784 (\u4e0e\u5185\u6838\u76f8\u5173) 6. \u5b9e\u73b0\u64cd\u4f5c\u786c\u4ef6\u65b9\u6cd5 xxx_open,xxx_read,xxxx_write","title":"1. \u603b\u7ebf\u7684\u57fa\u672c\u6982\u5ff5"},{"location":"\u9a71\u52a8\u7b2c\u4e09\u5929---\u603b\u7ebf/#2-sysfs","text":": : block\uff1a\u7528\u4e8e\u7ba1\u7406\u5757\u8bbe\u5907\uff0c\u7cfb\u7edf\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5757\u8bbe\u5907\u4f1a\u5728\u8be5\u76ee\u5f55\u4e0b\u5bf9\u5e94\u4e00\u4e2a\u5b50\u76ee\u5f55\u3002 bus\uff1a\u7528\u4e8e\u7ba1\u7406\u603b\u7ebf\uff0c\u6bcf\u6ce8\u518c\u4e00\u6761\u603b\u7ebf\uff0c\u5728\u8be5\u76ee\u5f55\u4e0b\u6709\u4e00\u4e2a\u5bf9\u5e94\u7684\u5b50\u76ee\u5f55\u3002 \u5176\u4e2d\uff0c\u6bcf\u4e2a\u603b\u7ebf\u5b50\u76ee\u5f55\u4e0b\u4f1a\u6709\u4e24\u4e2a\u5b50\u76ee\u5f55\uff1adevices\u548cdrivers\u3002 devices\u5305\u542b\u7cfb\u7edf\u4e2d\u6240\u6709\u5c5e\u4e8e\u8be5\u603b\u7ebf\u7684\u7684\u8bbe\u5907\u3002 class\uff1a\u5c06\u7cfb\u7edf\u4e2d\u7684\u8bbe\u5907\u6309\u529f\u80fd\u5206\u7c7b\u3002 dev\uff1a\u8be5\u76ee\u5f55\u5305\u542b\u5df2\u6ce8\u518c\u7684\u8bbe\u5907\u53f7\uff08\u8bbe\u5907\u8282\u70b9)\u7684\u89c6\u56fe\uff0c\u5305\u62ecchar\u548cblock kernel\uff1a\u5185\u6838\u4e2d\u7684\u76f8\u5173\u53c2\u6570\u3002 module\uff1a\u5185\u6838\u4e2d\u7684\u6a21\u5757\u4fe1\u606f\u3002 fireware\uff1a\u5185\u6838\u4e2d\u7684\u56fa\u4ef6\u4fe1\u606f\u3002 fs\uff1a\u63cf\u8ff0\u5185\u6838\u4e2d\u7684\u6587\u4ef6\u7cfb\u7edf\u3002","title":"2. Sysfs\u6587\u4ef6\u7cfb\u7edf"},{"location":"\u9a71\u52a8\u7b2c\u4e09\u5929---\u603b\u7ebf/#3","text":"\u5199\u4e00\u4e2a\u81ea\u5df1\u7684\u603b\u7ebf\u6a21\u578b\uff0c\u5b9e\u73b0\u5982\u4e0b\u56fe\u7684\u529f\u80fd\uff1a","title":"3. \u5199\u4e00\u4e2a\u81ea\u5df1\u7684\u603b\u7ebf\u9a71\u52a8"},{"location":"\u9a71\u52a8\u7b2c\u4e09\u5929---\u603b\u7ebf/#31-bus","text":"\u6570\u636e\u7c7b\u578b struct bus_type { const char *name; //\u5047\u5982name =xxx cat /sys/bus/XXX int ( match)(struct device dev, struct device_driver *drv); ........ } API 2.1 \u521b\u5efa int bus_register(struct bus_type *bus); 2.2 \u6ce8\u9500 void bus_unregister(struct bus_type *bus);","title":"3.1 \u5199\u4e00\u4e2a\u81ea\u5df1\u7684\u603b\u7ebf\u9a71\u52a8\u2014\u2014bus"},{"location":"\u9a71\u52a8\u7b2c\u4e09\u5929---\u603b\u7ebf/#32-driver","text":"\u6570\u636e\u7c7b\u578b struct device_driver { const char *name; struct bus_type *bus; int (*probe) (struct device *dev); int (*remove) (struct device *dev); };","title":"3.2 \u5199\u4e00\u4e2a\u81ea\u5df1\u7684\u603b\u7ebf\u9a71\u52a8\u2014\u2014driver"},{"location":"\u9a71\u52a8\u7b2c\u4e09\u5929---\u603b\u7ebf/#33-device","text":"\u6570\u636e\u7c7b\u578b struct device{ struct kobject kobj;//\u4ee3\u8868\u4e00\u5207\u5bf9\u8c61\u7684\u7236\u7c7b\uff0c\u90a3\u4e48\uff0c\u5728\u8fd9\u91cc\u5f15\u4e86kobject\uff0c\u8bf4\u660edevice\u662f\u7ee7\u627fkobject, const char *init_name; /* device \u7684\u540d\u5b57 */ struct bus_type *bus; /* \u9700\u8981\u6302\u63a5\u4e0a\u7684bus\u603b\u7ebf mybus */ struct device_driver *driver; /* \u4e0e\u4e4b\uff08\u5185\u6838\u505a\u7684\uff09\u5df2\u7ecf\u5339\u914d\u6210\u529f\u7684drv */ void *platform_data; /* \u4e07\u80fd\u578b \u6307\u9488 \u6307\u5411dev\u7684\u81ea\u5b9a\u4e49\u7684\u67d0\u4e9b\u6570\u636e\uff0c\u6216\u8005\u8bf4\u7528\u4e8edrv\u4e0edev\u4f20\u9012\u6570\u636e\u7684\u4e00\u4e2a\u8f7d\u4f53*/ } 2 APIs 2.1 \u521b\u5efa int device_register(struct device *dev) 2.2 \u6ce8\u9500 void device_unregister(struct device *dev)","title":"3.3 \u5199\u4e00\u4e2a\u81ea\u5df1\u7684\u603b\u7ebf\u9a71\u52a8\u2014\u2014device"},{"location":"\u9a71\u52a8\u7b2c\u4e09\u5929---\u603b\u7ebf/#34","text":"\u5982\u4f55\u5b9e\u73b0\u603b\u7ebf\u5339\u914d\uff0c\u5339\u914d\u6210\u529f\u4e4b\u540e\u4f1a\u81ea\u52a8\u8c03\u7528driver\u7684probe\u65b9\u6cd5\uff1a 1\uff0c \u5b9e\u73b0bus\u5bf9\u8c61\u4e2d match\u65b9\u6cd5 2\uff0c \u4fdd\u8bc1driver\u548cdevice\u4e2d\u540d\u5b57\u8981\u4e00\u6837 //\u5982\u679c\u8fd4\u56de\u503c \u4e3a1 \u4ee3\u8868\u5339\u914d\u6210\u529f\uff0c\u5426\u5219\u4e0d\u6210\u529f int mybus_match(struct device *dev, struct device_driver *drv) { printk(\"-------------%s------------\\n\",__FUNCTION__); if( strncmp(dev->kobj.name , drv->name , sizeof(drv->name)) == 0 ) { printk(\"match ok\\n\"); return 1; } else { printk(\"match error\\n\"); return 0; } }","title":"3.4 \u5982\u4f55\u5b9e\u73b0\u603b\u7ebf\u7684\u5339\u914d"},{"location":"\u9a71\u52a8\u7b2c\u4e09\u5929---\u603b\u7ebf/#4-platform","text":"\u5e73\u53f0\u603b\u7ebf\u6a21\u578b\uff1a","title":"4. \u5e73\u53f0\u603b\u7ebf(platform)\u7684\u57fa\u672c\u6982\u5ff5"},{"location":"\u9a71\u52a8\u7b2c\u4e09\u5929---\u603b\u7ebf/#_1","text":"1 \u4ece\u5382\u5546\u7684\u89d2\u5ea6\u51fa\u53d1 \u7528\u4e8e\u5e73\u53f0\u5347\u7ea7\uff1a\u4e09\u661f\uff1a\u30002410, 2440, 6410, s5pc100 s5pv210 4412 \u786c\u4ef6\u5e73\u53f0\u5347\u7ea7\u7684\u65f6\u5019\uff0c\u90e8\u5206\u7684\u6a21\u5757\u7684\u63a7\u5236\u65b9\u5f0f\uff0c\u57fa\u672c\u4e0a\u662f\u7c7b\u4f3c\u7684 \u4f46\u662f\u6a21\u5757\u7684\u5730\u5740\u662f\u4e0d\u4e00\u6837 gpio\u63a7\u5236\u903b\u8f91\uff1a 1\uff0c \u914d\u7f6egpio\u7684\u8f93\u5165\u8f93\u51fa\u529f\u80fd\uff1a gpxxconf 2\uff0c \u7ed9gpio\u7684\u6570\u636e\u5bc4\u5b58\u5668\u8bbe\u7f6e\u9ad8\u4f4e\u7535\u5e73\uff1a gpxxdata \u903b\u8f91\u64cd\u4f5c\u57fa\u672c\u4e0a\u662f\u4e00\u6837\u7684 \u4f46\u662f\u5730\u5740\u4e0d\u4e00\u6837 uart\u63a7\u5236\uff1a1,\u8bbe\u7f6e8n1,115200, no AFC UCON,ULCON, UMODOEN, UDIV \"\u903b\u8f91\u57fa\u672c\u4e0a\u662f\u4e00\u6837\u7684,\u4f46\u662f\u5730\u5740\u4e0d\u4e00\u6837\" \u95ee\u9898\uff1a \u5f53soc\u5347\u7ea7\u7684\u65f6\u5019\uff0c \u5bf9\u4e8e\u76f8\u4f3c\u7684\u8bbe\u5907\u9a71\u52a8\uff0c\u9700\u8981\u7f16\u5199\u5f88\u591a\u6b21(\u5982\u679c\u4e0d\u7528\u5e73\u53f0\u603b\u7ebf) \u4f46\u662f\u4f1a\u6709\u5927\u90e8\u5206\u91cd\u590d\u4ee3\u7801 \u89e3\u51b3\uff1a\u5f15\u5165\u5e73\u53f0\u603b\u7ebf device(\u4e2d\u65ad/\u5730\u5740)\u548cdriver(\u64cd\u4f5c\u903b\u8f91) \u5206\u79bb \u5728\u5347\u7ea7\u7684\u65f6\u5019\uff0c\u53ea\u9700\u8981\u4fee\u6539device\u4e2d\u4fe1\u606f\u5373\u53ef(\u4e2d\u65ad/\u5730\u5740) \u5b9e\u73b0\u4e00\u4e2adriver\u4ee3\u7801\u80fd\u591f\u9a71\u52a8\u591a\u4e2a\u5e73\u53f0\u76f8\u4f3c\u7684\u6a21\u5757\uff0c\u5e76\u4e14\u4fee\u6539\u7684\u4ee3\u7801\u91cf\u5f88\u5c11 2 \u4ece\u4f7f\u7528\u8005\u7684\u89d2\u5ea6\u51fa\u53d1","title":"\u4e3a\u4ec0\u4e48\u4f1a\u6709\u5e73\u53f0\u603b\u7ebf\uff1a"},{"location":"\u9a71\u52a8\u7b2c\u4e09\u5929---\u603b\u7ebf/#5-platform","text":"\u5e73\u53f0\u603b\u7ebf\u4e2d\u7684\u4e09\u5143\u7d20\uff1a 1\uff0c bus\uff1a\u90aebus\u884d\u751f\u51fa\u6765\u7684platform_bus:\u4e0d\u9700\u8981\u81ea\u5df1\u521b\u5efa\uff0c\u5f00\u673a\u7684\u65f6\u5019\u81ea\u52a8\u521b\u5efa struct bus_type platform_bus_type = { .name = \"platform\", .dev_groups = platform_dev_groups, .match = platform_match, .uevent = platform_uevent, .pm = &platform_dev_pm_ops, }; \u5339\u914d\u65b9\u6cd5\uff1a static int platform_match(struct device *dev, struct device_driver *drv) { struct platform_device *pdev = to_platform_device(dev); struct platform_driver *pdrv = to_platform_driver(drv); /* Attempt an OF style match first */ if (of_driver_match_device(dev, drv)) return 1; /* Then try ACPI style match */ if (acpi_driver_match_device(dev, drv)) return 1; /* Then try to match against the id table */ if (pdrv->id_table) return platform_match_id(pdrv->id_table, pdev) != NULL; /* fall-back to driver name match */ return (strcmp(pdev->name, drv->name) == 0); } \u3002\u3002\u3002\u3002\u3002\u3002dts acpi 1\uff0c\u4f18\u5148\u5339\u914dpdriver\u4e2d\u7684id_table,\u91cc\u9762\u5305\u542b\u4e86\u652f\u6301\u4e0d\u540c\u7684\u5e73\u53f0\u7684\u540d\u5b57 2\uff0c\u76f4\u63a5\u5339\u914ddriver\u4e2d\u540d\u5b57\u548cdevice\u4e2d\u540d\u5b57 2\uff0cdevice\u5bf9\u8c61\uff1a struct platform_device { const char *name; //\u7528\u4e8e\u505a\u5339\u914d int id; // \u4e00\u822c\u90fd\u662f\u76f4\u63a5\u7ed9-1 struct device dev; // \u7ee7\u627f\u4e86device\u7236\u7c7b u32 num_resources; // \u8d44\u6e90\u7684\u4e2a\u6570 struct resource *resource; // \u8d44\u6e90\uff1a\u5305\u62ec\u4e86\u4e00\u4e2a\u8bbe\u5907\u7684\u5730\u5740\u548c\u4e2d\u65ad } \u8d44\u6e90\u5bf9\u8c61resource: struct resource { resource_size_t start; resource_size_t end; const char *name; unsigned long flags; struct resource *parent, *sibling, *child; }; \u6ce8\u518c\u548c\u6ce8\u9500 int platform_device_register(struct platform_device * pdev)\uff1b void platform_device_unregister(struct platform_device * pdev) 3\uff0cdriver\u5bf9\u8c61 struct platform_driver { int (*probe)(struct platform_device *); //\u5339\u914d\u6210\u529f\u4e4b\u540e\u88ab\u8c03\u7528\u7684\u51fd\u6570 int (*remove)(struct platform_device *);//device\u79fb\u9664\u7684\u65f6\u5019\u8c03\u7528\u7684\u51fd\u6570 struct device_driver driver; //\u7ee7\u627f\u4e86driver\u7236\u7c7b | const char *name; const struct platform_device_id *id_table; //\u5982\u679cdriver\u652f\u6301\u591a\u4e2a\u5e73\u53f0\uff0c\u5728\u5217\u8868\u4e2d\u5199\u51fa\u6765 } \u6ce8\u518c\u548c\u6ce8\u9500 int platform_driver_register(struct platform_driver *drv); void platform_driver_unregister(struct platform_driver *drv) 4\uff0c drv\u5982\u4f55\u53bb\u83b7\u53d6dev\u4e2d\u7684\u6570\u636e \u83b7\u53d6\u8d44\u6e90\u6570\u636e int platform_get_irq(struct platform_device * dev,unsigned int num) struct resource * platform_get_resource_byname(struct platform_device * dev, unsigned int type,const char * name)","title":"5. \u5e73\u53f0\u603b\u7ebf(platform)\u7f16\u7a0b\u63a5\u53e3"},{"location":"\u9a71\u52a8\u7b2c\u4e09\u5929---\u603b\u7ebf/#5-platform-led","text":"\u7f16\u5199\u4ee3\u7801\uff1a\u3000\u7f16\u5199\u4e00\u4e2a\u80fd\u5728\u591a\u4e2a\u5e73\u53f0\u4e0b\u4f7f\u7528\u7684led\u9a71\u52a8 1\uff0c\u6ce8\u518c\u4e00\u4e2aplatform_device,\u5b9a\u4e49\u8d44\u6e90\uff1a\u5730\u5740\u548c\u4e2d\u65ad struct resource { resource_size_t start; // \u5f00\u59cb resource_size_t end; //\u7ed3\u675f const char *name; //\u63cf\u8ff0\uff0c\u81ea\u5b9a\u4e49 unsigned long flags; //\u533a\u5206\u5f53\u524d\u8d44\u6e90\u63cf\u8ff0\u7684\u662f\u4e2d\u65ad(IORESOURCE_IRQ)\u8fd8\u662f\u5185\u5b58\uff08IORESOURCE_MEM\uff09 #define IORESOURCE_MEM 0x00000200 #define IORESOURCE_REG 0x00000300 /* Register offsets */ #define IORESOURCE_IRQ 0x00000400 struct resource *parent, *sibling, *child; }; 2\uff0c\u6ce8\u518c\u4e00\u4e2aplatform_driver\uff0c\u5b9e\u73b0\u64cd\u4f5c\u8bbe\u5907\u7684\u4ee3\u7801 \u6ce8\u518c\u5b8c\u6bd5\uff0c\u540c\u65f6\u5982\u679c\u548cpdev\u5339\u914d\u6210\u529f\uff0c\u81ea\u52a8\u8c03\u7528probe\u65b9\u6cd5\uff1a probe\u65b9\u6cd5\uff1a \u5bf9\u786c\u4ef6\u8fdb\u884c\u64cd\u4f5c a\uff0c\u6ce8\u518c\u8bbe\u5907\u53f7\uff0c\u5e76\u4e14\u6ce8\u518cfops--\u4e3a\u7528\u6237\u63d0\u4f9b\u4e00\u4e2a\u8bbe\u5907\u6807\u793a\uff0c\u540c\u65f6\u63d0\u4f9b\u6587\u4ef6\u64cd\u4f5cio\u63a5\u53e3 b\uff0c \u521b\u5efa\u8bbe\u5907\u8282\u70b9 c\uff0c \u521d\u59cb\u5316\u786c\u4ef6 ioremap(\u5730\u5740); //\u5730\u5740\u4ecepdev\u9700\u8981\u83b7\u53d6 readl/writle(); d\uff0c\u5b9e\u73b0\u5404\u79cdio\u63a5\u53e3\uff1a xxx_open, xxx_read, .. \u83b7\u53d6\u8d44\u6e90\u7684\u65b9\u5f0f\uff1a //\u83b7\u53d6\u8d44\u6e90 // \u53c2\u65701: \u4ece\u54ea\u4e2apdev\u4e2d\u83b7\u53d6\u8d44\u6e90 // \u53c2\u65702: \u8d44\u6e90\u7c7b\u578b // \u53c2\u65703: \u8868\u793a\u83b7\u53d6\u540c\u79cd\u8d44\u6e90\u7684\u7b2c\u51e0\u4e2a struct resource *platform_get_resource(struct platform_device *dev, unsigned int type, unsigned int num) 3\uff0cplatform \u83b7\u53d6\u4e2d\u65ad\uff08irq\uff09\u8d44\u6e90 / * platform_get_irq - get an IRQ for a device * @dev: platform device * @num: IRQ number index / int platform_get_irq(struct platform_device dev, unsigned int num) 4 \uff0cplatform id_table\u7684\u5b9a\u4e49\uff1a struct platform_device_id { char name[PLATFORM_NAME_SIZE]; kernel_ulong_t driver_data; };","title":"5. \u5199\u4e00\u4e2aplatform led\u9a71\u52a8"},{"location":"\u9a71\u52a8\u7b2c\u4e09\u5929---\u603b\u7ebf/#iic","text":"\u4e3b\u8981\u5185\u5bb9\uff1a i2c\u534f\u8bae\u548c\u65f6\u5e8f i2c\u5b50\u7cfb\u7edf\u8f6f\u4ef6\u6846\u67b6 i2c\u4ece\u8bbe\u5907\u9a71\u52a8\u7f16\u5199\u65b9\u5f0f--\u4e0d\u8003\u8651\u5177\u4f53\u7684\u786c\u4ef6 mpu6050\u786c\u4ef6\u8fde\u63a5\uff0c\u9640\u87ba\u4eea\u548c\u52a0\u901f\u5ea6\u5de5\u4f5c\u539f\u7406\uff0c\u5b83\u4eec\u7684\u5e94\u7528 mpu6050\u6570\u636e\u548c\u83b7\u53d6 mpu6050\u4ece\u8bbe\u5907\u9a71\u52a8\u7f16\u5199","title":"IIC\u603b\u7ebf\u9a71\u52a8"},{"location":"\u9a71\u52a8\u7b2c\u4e09\u5929---\u603b\u7ebf/#1-i2c","text":"IIC\u901a\u8baf\u6ce2\u5f62\u56fe: IIC\u534f\u8bae:","title":"1 i2c\u534f\u8bae\u548c\u65f6\u5e8f"},{"location":"\u9a71\u52a8\u7b2c\u4e09\u5929---\u603b\u7ebf/#2-i2c","text":"\u5e94\u7528 ------------------------------------------ i2c driver:\u4ece\u8bbe\u5907\u9a71\u52a8\u5c42 \u9700\u8981\u548c\u5e94\u7528\u5c42\u8fdb\u884c\u4ea4\u4e92 \u5c01\u5305\u6570\u636e\uff0c\u4e0d\u77e5\u9053\u6570\u636e\u662f\u5982\u4f55\u5199\u5165\u5230\u786c\u4ef6 ------------------------------------------ i2c \u6838\u5fc3\u5c42\uff1a\u7ef4\u62a4i2c \u603b\u7ebf\uff0c\u5305\u62eci2c driver, i2c client\u94fe\u8868 drivers/i2c/i2c-core.c --------------------------------------------------- i2c adapter\u5c42\uff1ai2c\u63a7\u5236\u5c42\uff0c\u521d\u59cb\u5316i2c\u63a7\u5236\u5668 \u5b8c\u6210\u5c06\u6570\u636e\u5199\u5165\u6216\u8bfb\u53d6-\u4ece\u8bbe\u5907\u786c\u4ef6 \u4e0d\u77e5\u9053\u6570\u636e\u5177\u4f53\u662f\u4ec0\u4e48\uff0c\u4f46\u662f\u77e5\u9053\u5982\u4f55\u64cd\u4f5c\u4ece\u8bbe\u5907 drivers/i2c/busses/i2c-s3c2410.c ================================================================ \u53bb\u5185\u6838\u786e\u5b9a\uff1ai2c\u786c\u4ef6\u9a71\u52a8\u4ee3\u7801\u662f\u5426\u52a0\u5165\u5185\u6838\u4e00\u8d77\u7f16\u8bd1 make menuconfig Device Drivers ---> -*- I2C support ---> //\u7f16\u8bd1i2c-core.c I2C Hardware Bus support ---> <*> S3C2410 I2C Driver // i2c-s3c2410.c","title":"2 i2c\u5b50\u7cfb\u7edf\u8f6f\u4ef6\u6846\u67b6 ##"},{"location":"\u9a71\u52a8\u7b2c\u4e09\u5929---\u603b\u7ebf/#3-i2c","text":"\u67e5\u770b\u539f\u7406\u56fe\uff1aMPU6050\u6302\u8f7d\u81f3 I2C_5 \u67e5\u770b6050datasheet\uff1a\u5982\u679cAD0\u662f\u9ad8\u7535\u5e73\u7684\u8bdd\uff0c\u90a3\u4e48\uff0cmpu6050\u7684\u5730\u5740\u5c31\u662f0x69,\u5426\u5219AD0\u4e3a\u4f4e\u65f6\u5019\uff0c\u5c31\u662f0x68 \u8bbe\u5907\u6811\uff1a \u63a7\u5236\u5668\u5bf9\u5e94\u7684\u8bbe\u5907\u6811\uff1aarch/arm/boot/dts/exynos4.dtsi i2c_0: i2c@13860000 { #address-cells = <1>; #size-cells = <0>; compatible = \"samsung,s3c2440-i2c\"; reg = <0x13860000 0x100>; interrupts = <0 58 0>; clocks = <&clock 317>; clock-names = \"i2c\"; pinctrl-names = \"default\"; pinctrl-0 = <&i2c0_bus>; status = \"disabled\"; }; i2c_5: i2c@138B0000 { #address-cells = <1>; #size-cells = <0>; compatible = \"samsung,s3c2440-i2c\"; reg = <0x138B0000 0x100>; interrupts = <0 63 0>; clocks = <&clock 322>; clock-names = \"i2c\"; status = \"disabled\"; }; \u6211\u4eec\u7528\u7684\uff1a arch/arm/boot/dts/exynos4412-fs4412.dts i2c@13860000 { #address-cells = <1>; #size-cells = <0>; samsung,i2c-sda-delay = <100>; samsung,i2c-max-bus-freq = <20000>; pinctrl-0 = <&i2c0_bus>; pinctrl-names = \"default\"; status = \"okay\"; s5m8767_pmic@66 { compatible = \"samsung,s5m8767-pmic\"; reg = <0x66>; ........... }; }; \u6211\u4eec\u81ea\u5df1\u505a\u4e00\u4e2a\u8bbe\u5907\u6811\u8282\u70b9\uff0c\u6765\u63cf\u8ff0mpu6050\u7684\u4fe1\u606f\uff1a i2c\u63a7\u5236\u5668\u5730\u57400-8\u7ec4 \u51719\u7ec4\u8bbe\u5907 0x1386_0000, //0 0x1387_0000, 0x1388_0000, 0x1389_0000, 0x138A_0000, 0x138B_0000, ------ MPU6050 0x138C_0000, 0x138D_0000, 0x138E_0000,//8 i2C_5\u7684\u8bbe\u5907\u6811\u8282\u70b9\uff1a i2c@138B0000{ #address-cells = <1>; #size-cells = <0>; samsung,i2c-sda-delay = <100>; samsung,i2c-max-bus-freq = <20000>; pinctrl-0 = <&i2c5_bus>; pinctrl-names = \"default\"; status = \"okay\"; mpu6050@68 { compatible = \"InvenSense,mpu6050\"; reg = <0x68>; }; }; \u7f16\u8bd1\u8bbe\u5907\u6811\u6e90\u7801\uff1a make dtbs \u70e7\u5199\uff1a\u3002\u3002\u3002\u3002\u3002\u3002\u3002","title":"3  I2c\u5b50\u7cfb\u7edf\u4e2d\u6d89\u53ca\u5230\u7684\u8bbe\u5907\u6811\u6587\u4ef6\uff1a"},{"location":"\u9a71\u52a8\u7b2c\u4e09\u5929---\u603b\u7ebf/#4-i2c-driver","text":"a\uff0c \u6dfb\u52a0i2c client\u7684\u4fe1\u606f\uff0c\u5fc5\u987b\u5305\u542b\u5728\u63a7\u5236\u5668\u5bf9\u5e94\u7684\u8282\u70b9\u4e2d b\uff0c\u76f4\u63a5\u7f16\u5199i2c driver 1\uff0c\u6784\u5efai2c driver\uff0c\u5e76\u6ce8\u518c\u5230i2c\u603b\u7ebf 2\uff0c\u5b9e\u73b0probe\uff1a | \u7533\u8bf7\u8bbe\u5907\u53f7\uff0c\u5b9e\u73b0fops \u521b\u5efa\u8bbe\u5907\u6587\u4ef6 \u901a\u8fc7i2c\u7684\u63a5\u53e3\u53bb\u521d\u59cb\u5316i2c\u4ece\u8bbe\u5907 \u51e0\u4e2a\u5e38\u7528\u7684\u5bf9\u8c61\uff1a struct i2c_driver {//\u8868\u793a\u662f\u4e00\u4e2a\u4ece\u8bbe\u5907\u7684\u9a71\u52a8\u5bf9\u8c61 int (*probe)(struct i2c_client *, const struct i2c_device_id *); int (*remove)(struct i2c_client *); struct device_driver driver; //\u7ee7\u627f\u4e86\u7236\u7c7b | const struct of_device_id *of_match_table; const struct i2c_device_id *id_table;//\u7528\u4e8e\u505a\u6bd4\u5bf9\uff0c\u975e\u8bbe\u5907\u6811\u7684\u60c5\u51b5 } \u6ce8\u518c\u548c\u6ce8\u9500 int i2c_add_driver( struct i2c_driver *driver); void i2c_del_driver(struct i2c_driver *); struct i2c_client {//\u63cf\u8ff0\u4e00\u4e2a\u4ece\u8bbe\u5907\u7684\u4fe1\u606f,\u4e0d\u9700\u8981\u5728\u4ee3\u7801\u4e2d\u521b\u5efa\uff0c\u56e0\u4e3a\u662f\u7531i2c adapter\u5e2e\u6211\u4eec\u521b\u5efa unsigned short addr; //\u4ece\u8bbe\u5907\u5730\u5740\uff0c\u6765\u81ea\u4e8e\u8bbe\u5907\u6811\u4e2d<reg> char name[I2C_NAME_SIZE]; //\u7528\u4e8e\u548ci2c driver\u8fdb\u884c\u5339\u914d\uff0c\u6765\u81ea\u4e8e\u8bbe\u5907\u6811\u4e2dcompatible struct i2c_adapter *adapter;//\u6307\u5411\u5f53\u524d\u4ece\u8bbe\u5907\u6240\u5b58\u5728\u7684i2c adapter struct device dev; // \u7ee7\u627f\u4e86\u7236\u7c7b }; \u521b\u5efai2c client\u7684\u51fd\u6570 struct i2c_client *i2c_new_device(struct i2c_adapter *adap, struct i2c_board_info const *info) struct i2c_adapter {//\u63cf\u8ff0\u4e00\u4e2ai2c\u63a7\u5236\u5668\uff0c\u4e5f\u4e0d\u662f\u6211\u4eec\u8981\u6784\u5efa\uff0c\u539f\u5382\u7684\u4ee3\u7801\u4f1a\u5e2e\u6211\u4eec\u6784\u5efa const struct i2c_algorithm *algo; //\u7b97\u6cd5 | int (*master_xfer)(struct i2c_adapter *adap, struct i2c_msg *msgs,int num); struct device dev; //\u7ee7\u627f\u4e86\u7236\u7c7b\uff0c\u4e5f\u4f1a\u88ab\u52a0\u5165\u5230i2c bus int nr; //\u7f16\u53f7 } \u6ce8\u518c\u548c\u6ce8\u9500\uff1a int i2c_add_adapter(struct i2c_adapter * adapter); void i2c_del_adapter(struct i2c_adapter * adap);","title":"4  i2c driver\u9a71\u52a8\u7684\u7f16\u5199"},{"location":"\u9a71\u52a8\u7b2c\u4e09\u5929---\u603b\u7ebf/#i2c-driver-i2cprobe6thiic_drv","text":"","title":"\u7f16\u5199\u4e00\u4e2a\u6700\u7b80\u5355\u7684i2c driver\u9a71\u52a8\uff0c\u6700\u7ec8\u53ef\u5b9e\u73b0\u8c03\u7528 i2c\u7684probe\uff0c\u4ee3\u7801\u53ef\u53c2\u8003\uff086th/iic_drv\uff09"},{"location":"\u9a71\u52a8\u7b2c\u4e09\u5929---\u603b\u7ebf/#4","text":"","title":"4 \u9640\u87ba\u4eea\u548c\u52a0\u901f\u5ea6\u5de5\u4f5c\u539f\u7406\uff0c\u5b83\u4eec\u7684\u5e94\u7528"},{"location":"\u9a71\u52a8\u7b2c\u4e09\u5929---\u603b\u7ebf/#41","text":"\u67e5\u770b\u539f\u7406\u56fe\uff1aMPU6050\u6302\u8f7d\u81f3 I2C_5 \u67e5\u770b6050datasheet\uff1a\u5982\u679cAD0\u662f\u9ad8\u7535\u5e73\u7684\u8bdd\uff0c\u90a3\u4e48\uff0cmpu6050\u7684\u5730\u5740\u5c31\u662f0x69,\u5426\u5219AD0\u4e3a\u4f4e\u65f6\u5019\uff0c\u5c31\u662f0x68","title":"4.1  \u786c\u4ef6\u63a5\u7ebf\u56fe"},{"location":"\u9a71\u52a8\u7b2c\u4e09\u5929---\u603b\u7ebf/#42","text":"","title":"4.2  \u9640\u87ba\u4eea\u548c\u52a0\u901f\u5ea6\u5de5\u4f5c\u539f\u7406\u53ca\u5e94\u7528"},{"location":"\u9a71\u52a8\u7b2c\u4e09\u5929---\u603b\u7ebf/#421","text":"\u9640\u87ba\u4eea\u7684\u6a21\u578b\uff1a \u539f\u7406\uff1a \u5c0f\u65f6\u5019\u73a9\u8fc7\u9640\u87ba\uff0c\u5982\u679c\u7ed9\u5b83\u4e00\u5b9a\u7684\u65cb\u8f6c\u901f\u5ea6\uff0c\u9640\u87ba\u4f1a\u7ad6\u7acb\u65cb\u8f6c\u8d77\u6765\u800c\u4e0d\u4f1a\u5012 \u4e3b\u8981\u56e0\u4e3a\u9ad8\u901f\u65cb\u8f6c\u6709\u6297\u62d2\u65b9\u5411\u6539\u53d8\u7684\u8d8b\u5411 \u9640\u87ba\u4eea\u5c31\u662f\u5185\u90e8\u7684\u8f6c\u5b50\u9ad8\u901f\u65cb\u8f6c\uff0c\u5f62\u6210\u4e00\u4e2a\u56fa\u5b9a\u7684\u521d\u59cb\u5316\u7684\u53c2\u8003\u5e73\u9762 \u8fd9\u6837\u5c31\u53ef\u4ee5\u901a\u8fc7\u6d4b\u91cf\u521d\u59cb\u7684\u53c2\u8003\u5e73\u9762\u504f\u5dee\u8ba1\u7b97\u51fa\u7269\u4f53\u7684\u65cb\u8f6c\u60c5\u51b5 \u9640\u87ba\u4eea\u7684\u5f3a\u9879\u5728\u4e8e\u6d4b\u91cf\u8bbe\u5907\u81ea\u8eab\u7684\u65cb\u8f6c\u8fd0\u52a8 \u9640\u87ba\u4eea\u7684\u4ea7\u751f\uff1a 1850\u5e74\u6cd5\u56fd\u7684\u7269\u7406\u5b66\u5bb6\u798f\u67ef(J.Foucault)\u4e3a\u4e86\u7814\u7a76\u5730\u7403\u81ea\u8f6c\uff0c\u9996\u5148\u53d1\u73b0\u9ad8\u901f\u8f6c\u52a8\u4e2d\u7684\u8f6c\u5b50(rotor)\uff0c \u7531\u4e8e\u60ef\u6027\u4f5c\u7528\u5b83\u7684\u65cb\u8f6c\u8f74\u6c38\u8fdc\u6307\u5411\u4e00\u56fa\u5b9a\u65b9\u5411\uff0c\u4ed6\u7528\u5e0c\u814a\u5b57gyro(\u65cb\u8f6c)\u548cskopein(\u770b) \u4e24\u5b57\u5408\u4e3agyro scopei\u4e00\u5b57\u6765\u547d\u540d\u8fd9\u79cd\u4eea\u8868 \u9640\u87ba\u4eea\u7684\u57fa\u672c\u90e8\u4ef6\uff1a (1) \u9640\u87ba\u8f6c\u5b50\uff0c\u8f6c\u5b50\u88c5\u5728\u4e00\u652f\u67b6\u5185 (2)\u5185\u3001\u5916\u73af\uff0c\u5b83\u662f\u4f7f\u9640\u87ba\u81ea\u8f6c\u8f74\u83b7\u5f97\u6240\u9700\u89d2\u8f6c\u52a8\u81ea\u7531\u5ea6\u7684\u7ed3\u6784 \u5185\u73af\u53ef\u73af\u7ed5\u5e73\u9762\u4e24\u8f74\u4f5c\u81ea\u7531\u8fd0\u52a8 \u5728\u5185\u73af\u67b6\u5916\u52a0\u4e0a\u4e00\u5916\u73af\u67b6\uff0c\u53ef\u4ee5\u73af\u7ed5\u5e73\u9762\u505a\u4e09\u8f74\u4f5c\u81ea\u7531\u8fd0\u52a8 (3) \u9644\u4ef6(\u662f\u6307\u529b\u77e9\u9a6c\u8fbe\u3001\u4fe1\u53f7\u4f20\u611f\u5668\u7b49)\u3002 \u9640\u87ba\u4eea\u7684\u6570\u636e\u83b7\u53d6\uff1a XYZ\u5206\u522b\u4ee3\u8868\u8bbe\u5907\u56f4\u7ed5XYZ\u4e09\u4e2a\u8f74\u65cb\u8f6c\u7684\u89d2\u901f\u5ea6\uff0c\u9640\u87ba\u4eea\u53ef\u4ee5\u6355\u6349\u5f88\u5fae\u5c0f\u7684\u8fd0\u52a8\u8f68\u8ff9\u53d8\u5316\uff0c \u56e0\u6b64\u53ef\u4ee5\u505a\u9ad8\u5206\u8fa8\u7387\u548c\u5feb\u901f\u53cd\u5e94\u7684\u65cb\u8f6c\u68c0\u6d4b\uff0c\u4f46\u4e0d\u80fd\u6d4b\u91cf\u5f53\u524d\u7684\u8fd0\u884c\u65b9\u5411 \u5e94\u7528\uff1a 1\uff0c\u9640\u87ba\u4eea\u7528\u4e8e\u98de\u884c\u4f53\u8fd0\u52a8\u7684\u81ea\u52a8\u63a7\u5236\u7cfb\u7edf\u4e2d\uff0c\u4f5c\u4e3a\u6c34\u5e73\u3001\u5782\u76f4\u3001\u4fef\u4ef0\u3001\u822a\u5411\u548c\u89d2\u901f\u5ea6\u4f20\u611f\u5668 2\uff0c\u624b\u673a\u4e0a\u7684\u6444\u50cf\u5934\u914d\u5408\u4f7f\u7528\uff0c\u6bd4\u5982\u9632\u6296 3\uff0c\u5404\u7c7b\u624b\u673a\u6e38\u620f\u7684\u4f20\u611f\u5668\uff0c\u5305\u62ec\u4e00\u4e9b\u7b2c\u4e00\u89c6\u89d2\u7c7b\u5c04\u51fb\u6e38\u620f\uff0c\u9640\u87ba\u4eea\u5b8c\u6574\u76d1\u6d4b\u6e38\u620f\u8005\u624b\u7684\u4f4d\u79fb \u624b\u673a\u4e2d\u7684\u9640\u87ba\u4eea\u6700\u65e9\u88abiphone4\u5e94\u7528\uff0c\u6240\u4ee5\u88ab\u5927\u5bb6\u6240\u719f\u77e5 4\uff0c\u5bfc\u822a\uff0c\u624b\u673a\u914d\u5408GPS\uff0c\u5bfc\u822a\u80fd\u529b\u5df2\u7ecf\u53ef\u4ee5\u8fbe\u5230\u4e13\u7528\u7684gps\u5bfc\u822a\u4eea \u52a0\u901f\u5ea6\u4f20\u611f\u5668\uff1a \u91cd\u529b\u52a0\u901f\u5ea6\u4f20\u611f\u5668\u7684\u6a21\u578b\uff1a \u539f\u7406\uff1a \u91cd\u529b\u65bd\u52a0\u5728\u7269\u4f53\u4e0a,\u4f7f\u5b83\u4ea7\u751f\u4e00\u4e2a\u52a0\u901f\u5ea6\uff0c\u91cd\u529b\u5927\u5c0f\u548c\u6b64\u7269\u4f53\u7684\u8d28\u91cf\u6210\u6b63\u6bd4 \u7269\u4f53\u5728\u4e0d\u540c\u7684\u8fd0\u884c\u4e2d\uff0c\u4f1a\u4ea7\u751f\u4e0d\u540c\u7684\u91cd\u529b\uff0c\u4ece\u800c\u53ef\u4ee5\u6d4b\u91cf\u51fa\u7269\u4f53\u7684\u8fd0\u52a8\u60c5\u51b5 \u91cd\u529b\u52a0\u901f\u5ea6\u7684\u6570\u636e\u83b7\u53d6\uff1a \u52a0\u901f\u5ea6\u6d4b\u91cf\u4f20\u611f\u5668\u6709x\u3001y\u3001z\u4e09\u8f74\uff0c\u6ce8\u610f\u5728\u624b\u673a\u4e0a\u5c4f\u5e55\u7684\u5750\u6807\uff0c\u4ee5\u5de6\u4e0a\u89d2\u4f5c\u4e3a\u539f\u70b9\u7684\uff0c\u800c\u4e14Y\u5411\u4e0b\u3002 \u6ce8\u610f\u533a\u5206\u8fd9\u4e24\u4e2a\u4e0d\u540c\u7684\u5750\u6807\u7cfb\u3002 \u52a0\u901f\u4f20\u611f\u5668\u7684\u5355\u4f4d\u662f\u52a0\u901f\u5ea6m/s2\u3002\u5982\u679c\u624b\u673a\u5e73\u653e\u597d\uff0cx\uff0cy\u5728\u4f4d\u7f6e\u4e3a0\uff0c \u800cz\u8f74\u65b9\u5411\u52a0\u901f\u5ea6=\u5f53\u524dz\u65b9\u5411\u52a0\u901f\u5ea6-g\u3002\u7531\u4e8eg\uff08\u91cd\u529b\u52a0\u901f\u5ea6\uff09\u5782\u76f4\u5411\u4e0b\uff0c \u5219g=-9.81m/s2\uff0c\u5373z\u8f74 a=0-(-9.81)=9.81m/s2 \u5e94\u7528\uff1a 1\uff0c\u56fe\u50cf\u81ea\u52a8\u7ffb\u8f6c 2\uff0c\u6e38\u620f\u63a7\u5236 3\uff0c\u8ba1\u6b65\u5668\u529f\u80fd","title":"4.2.1  \u9640\u87ba\u4eea"},{"location":"\u9a71\u52a8\u7b2c\u4e09\u5929---\u603b\u7ebf/#5-mpu605","text":"#define SMPLRT_DIV 0x19 //\u91c7\u6837\u9891\u7387\u5bc4\u5b58\u5668-25 \u5178\u578b\u503c\uff1a0x07(125Hz) //\u5bc4\u5b58\u5668\u96c6\u5408\u91cc\u7684\u6570\u636e\u6839\u636e\u91c7\u6837\u9891\u7387\u66f4\u65b0 #define CONFIG 0x1A //\u914d\u7f6e\u5bc4\u5b58\u5668-26-\u5178\u578b\u503c\uff1a0x06(5Hz) //DLPF is disabled\uff08DLPF_CFG=0 or 7\uff09 #define GYRO_CONFIG 0x1B//\u9640\u87ba\u4eea\u914d\u7f6e-27,\u53ef\u4ee5\u914d\u7f6e\u81ea\u68c0\u548c\u6ee1\u91cf\u7a0b\u8303\u56f4 //\u5178\u578b\u503c\uff1a0x18(\u4e0d\u81ea\u68c0\uff0c2000deg/s) #define ACCEL_CONFIG 0x1C //\u52a0\u901f\u5ea6\u914d\u7f6e-28 \u53ef\u4ee5\u914d\u7f6e\u81ea\u68c0\u548c\u6ee1\u91cf\u7a0b\u8303\u56f4\u53ca\u9ad8\u901a\u6ee4\u6ce2\u9891\u7387 //\u5178\u578b\u503c\uff1a0x01(\u4e0d\u81ea\u68c0\uff0c2G\uff0c5Hz) #define ACCEL_XOUT_H 0x3B //59-65,\u52a0\u901f\u5ea6\u8ba1\u6d4b\u91cf\u503c XOUT_H #define ACCEL_XOUT_L 0x3C // XOUT_L #define ACCEL_YOUT_H 0x3D //YOUT_H #define ACCEL_YOUT_L 0x3E //YOUT_L #define ACCEL_ZOUT_H 0x3F //ZOUT_H #define ACCEL_ZOUT_L 0x40 //ZOUT_L---64 #define TEMP_OUT_H 0x41 //\u6e29\u5ea6\u6d4b\u91cf\u503c--65 #define TEMP_OUT_L 0x42 #define GYRO_XOUT_H 0x43 //\u9640\u87ba\u4eea\u503c--67\uff0c\u91c7\u6837\u9891\u7387\uff08\u7531\u5bc4\u5b58\u5668 25 \u5b9a\u4e49\uff09\u5199\u5165\u5230\u8fd9\u4e9b\u5bc4\u5b58\u5668 #define GYRO_XOUT_L 0x44 #define GYRO_YOUT_H 0x45 #define GYRO_YOUT_L 0x46 #define GYRO_ZOUT_H 0x47 #define GYRO_ZOUT_L 0x48 //\u9640\u87ba\u4eea\u503c--72 #define PWR_MGMT_1 0x6B //\u7535\u6e90\u7ba1\u7406 \u5178\u578b\u503c\uff1a0x00(\u6b63\u5e38\u542f\u7528)","title":"5 mpu605   \u5e38\u7528\u5bc4\u5b58\u5668"},{"location":"\u9a71\u52a8\u7b2c\u4e09\u5929---\u603b\u7ebf/#6-iicapis","text":"//\u53d1\u9001iic\u6570\u636e\u7684API i2c_master_send(const struct i2c_client * client, const char * buf, int count) //\u63a5\u6536 i2c_master_recv(const struct i2c_client * client, char * buf, int count) \u4f20\u9001iic\u6d88\u606f\u7684\u6700\u5c0f\u5355\u4f4d\u4e3astruct i2c_msg msg; struct i2c_msg {//\u63cf\u8ff0\u4e00\u4e2a\u4ece\u8bbe\u5907\u8981\u53d1\u9001\u7684\u6570\u636e\u7684\u6570\u636e\u5305 __u16 addr; //\u4ece\u8bbe\u5907\u5730\u5740\uff0c\u53d1\u9001\u7ed9\u90a3\u4e2a\u4ece\u8bbe\u5907 __u16 flags; //\u8bfb1\u8fd8\u662f\u51990 __u16 len; //\u6536\u53d1\u6570\u636e\u7684\u957f\u5ea6 __u8 *buf; //\u6307\u5411\u6536\u53d1\u6570\u636e\u7684\u6307\u9488 }; \u4ee5\u4e0a\u4e24\u4e2a\u51fd\u6570\u90fd\u8c03\u7528\u4e86\uff1a int i2c_transfer(struct i2c_adapter *adap, struct i2c_msg *msgs, int num)","title":"6 iic\u9a71\u52a8\u53d1\u9001\u6307\u4ee4APIs"},{"location":"\u9a71\u52a8\u7b2c\u4e09\u5929---\u603b\u7ebf/#7-ioctl","text":"\u5e94\u7528\u7a0b\u5e8f\uff1a ioctl(fd, cmd, args); ======================================== \u9a71\u52a8\u4e2d\uff1axxx_ioctl() { switch(cmd){ } } \u5982\u4f55\u5b9a\u4e49\u547d\u4ee4\uff1a 1\uff0c \u76f4\u63a5\u5b9a\u4e49\u4e00\u4e2a\u6570\u5b57 #define IOC_GET_ACCEL 0x9999 2, \u901a\u8fc7\u7cfb\u7edf\u7684\u63a5\u53e3 _IO(x,y) _IOR(x,y,z) _IOW(x,y,z) \u53c2\u65701\uff1a\u8868\u793amagic\uff0c\u5b57\u7b26 \u53c2\u65702\uff1a\u533a\u5206\u4e0d\u540c\u547d\u4ee4\uff0c\u6574\u6570\u3000 \u53c2\u6570\uff13\uff1a\u4f20\u7ed9\u9a71\u52a8\u6570\u636e\u7c7b\u578b mpu605\u2014\u2014ioctl\u7684\u7528\u6cd5\u4e3e\u4f8b\uff1a #define IOC_GET_ACCEL _IOR('M', 0x34,union mpu6050_data) #define IOC_GET_GYRO _IOR('M', 0x35,union mpu6050_data) #define IOC_GET_TEMP _IOR('M', 0x36,union mpu6050_data)","title":"7 ioctl:\u3000\u7ed9\u9a71\u52a8\u53d1\u9001\u4e0d\u540c\u6307\u4ee4"},{"location":"\u9a71\u52a8\u7b2c\u4e09\u5929---\u603b\u7ebf/#8-mpu6050","text":"\u9640\u87ba\u4eea\u53ef\u6d4b\u8303\u56f4\u4e3a \u6b27\u62c9\u89d2\u683c\u5f0f\u00b1250\uff0c\u00b1500\uff0c\u00b11000\uff0c\u00b12000\u00b0/\u79d2\uff08dps\uff09 \uff0c\u52a0\u901f\u5ea6\u8ba1\u53ef\u6d4b\u8303\u56f4\u4e3a\u00b12\uff0c\u00b14\uff0c\u00b18\uff0c\u00b116g \u52a0\u901f\u5ea6\u8bfb\u53d6\u7684\u503c\u4e3a\uff1a AFS_SEL Full scale rang LSB Sensitivy 0 +-2g -----------------------16384 LSB/g 1 +-4g -----------------------8192 LSB/g 2 +-8g -----------------------4096 LSB/g 3 +-16g------------------------2048 LSB/g \u6e29\u5ea6\u503c\uff1a C = (TEMP_OUT Register Value )/340 + 36.53 \u9640\u87ba\u4eea\u503c\uff1a FS_SEL Full scale rang LSB Sensitivy 0 +-250 \u5ea6/s ------------------131 LSB \u5ea6/s 1 +-500 \u5ea6/s ------------------65.5 LSB \u5ea6/s 2 +-1000 \u5ea6/s -----------------32.8 LSB \u5ea6/s 3 +-2000 \u5ea6/s ------------------16.4 LSB \u5ea6/s","title":"8 mpu6050\u7684\u6570\u636e"},{"location":"\u9a71\u52a8\u7b2c\u4e8c\u5929---\u4e2d\u65ad/","text":"\u9a71\u52a8\u7b2c\u4e8c\u5929---\u4e2d\u65ad \u9a71\u52a8\u7b2c\u4e8c\u5929---\u4e2d\u65ad 1. \u4e2d\u65ad\u7684\u57fa\u672c\u6982\u5ff5 2. \u4e2d\u65ad\u53f7\u7684\u83b7\u53d6\u65b9\u5f0f 2.2 \u5728\u9a71\u52a8\u4e2d\u901a\u8fc7\u8bbe\u5907\u6811\u83b7\u53d6\u4e2d\u65ad\u53f7 3. \u4e2d\u65ad\u7533\u8bf7 3.1\u7533\u8bf7\u4e2d\u65ad 3.2 \u4e2d\u65ad\u91ca\u653e 4.\u4e2d\u65ad\u5904\u7406 5. \u4e0a\u4f20\u6570\u636e\u7ed9\u7528\u6237 6.IO\u6a21\u578b 6.1 \u963b\u585e 6.2 \u975e\u963b\u585e 6.3 \u591a\u8def\u590d\u7528 (poll) 7 \u5f02\u6b65\u4fe1\u53f7 8 \u4e2d\u65ad\u4e0b\u534a\u90e8 \u4e2d\u65ad\u7684\u57fa\u672c\u6982\u5ff5 \u4e2d\u65ad\u53f7\u7684\u83b7\u53d6\u65b9\u5f0f \u4e2d\u65ad\u7533\u8bf7 \u4e2d\u65ad\u5904\u7406 \u4e0a\u4f20\u6570\u636e\u7ed9\u7528\u6237 IO\u6a21\u578b \u5f02\u6b65\u4fe1\u53f7 \u4e2d\u65ad\u4e0b\u534a\u90e8 1. \u4e2d\u65ad\u7684\u57fa\u672c\u6982\u5ff5 \u53c2\u8003\u88f8\u673a\u5f00\u53d1\u4e2d\u7684\u76f8\u5173\u8d44\u6599 2. \u4e2d\u65ad\u53f7\u7684\u83b7\u53d6\u65b9\u5f0f \u8bbe\u5907\u6811\uff1adts \u8bbe\u5907\u6811\u6e90\u7801 \u8bbe\u5907\u6811\u91cc\u9762\u4e00\u4e9b\u901a\u7528\u7684\u5b9a\u4e49\uff0c\u63d0\u53d6\u51fa\uff0c\u5f62\u6210\u7c7b\u4f3cc \u5934\u6587\u4ef6\uff0cdtsi \u79f0\u4e4b\u4e3a\uff1a\u8bbe\u5907\u6811\u7684\u5934\u6587\u4ef6\uff0c#include \"xxx.dtsi\" dtc \u628adts\u7f16\u8bd1\u6210\u4e8c\u8fdb\u5236\u6587\u4ef6\uff08dtb\uff09 \u7ed9\u5185\u6838\u4f7f\u7528 1\uff0c\u4e2d\u65ad\u53f7--\u5c31\u662f\u4e00\u4e2a\u53f7\u7801\uff0c\u9700\u8981\u901a\u8fc7\u4e00\u5b9a\u7684\u65b9\u5f0f\u53bb\u83b7\u53d6\u5230 \u83b7\u53d6\u4e2d\u65ad\u53f7\u5230\u65b9\u6cd5\uff1a 1\uff0c \u5b8f\u5b9a\u4e49 IRQ_EINT(\u53f7\u7801) //eyxnos4412-mach.h//\u65e7\u5185\u68382.6.xxx 2\uff0c\u8bbe\u5907\u6811\u6587\u4ef6\u4e2d //\u57283.14.0\u5185\u6838\u4e2d\uff0c\u4ece\u8bbe\u5907\u6811\u4e2d\u83b7\u53d6 arch/arm/boot/dts/exynos4412-fs4412.dts --> arch/arm/boot/dts/exynos4412.dtsi -->arch/arm/boot/dts/exynos4x12.dtsi -->arch/arm/boot/dts/exynos4x12-pinctrl.dtsi \u73b0\u5728\u4ee5key3\u4e3a\u4f8b\uff1a 1\uff0c\u770b\u539f\u7406\u56fe key3--->SIM_DET---->gpx1_2 2, \u67e5\u770b\u8bbe\u5907\u6811\u6587\u4ef6\uff1aarch/arm/boot/dts/exynos4x12-pinctrl.dtsi 3\uff0c\u786e\u5b9a\u4e86\u4e00\u4e2a\u4e2d\u65ad\u53f7\u7684\u6e90\uff1a\u4ee5key3\u4e3a\u4f8b\uff0c\u5bf9\u5e94datasheet\uff08\u53c2\u80034412\u624b\u518c\uff0c752\u9875\u5173\u4e8e\u4e2d\u65ad\u53f7\u7684\u63cf\u8ff0\uff09\u7684\u4e2d\u65ad\u53f7\uff1a26 4\uff0c\u5728\u8bbe\u5907\u6811\u4e2d\uff0c\u5173\u4e8egpx1_2\u7684\u4e2d\u65ad\u53f7\u4e5f\u662f26 \u5728\u8bbe\u5907\u6811\u5934\u6587\u4ef6\u4e2d\uff1aarch/arm/boot/dts/exynos4x12-pinctrl.dtsi gpx1: gpx1 { gpio-controller; #gpio-cells = <2>; interrupt-controller; interrupt-parent = <&gic>; interrupts = <0 24 0>, <0 25 0>, <0 26 0>, <0 27 0>, <0 28 0>, <0 29 0>, <0 30 0>, <0 31 0>; #interrupt-cells = <2>; }; \u505a\u4e00\u4e2a\u8bbe\u5907\u6811\u8282\u76ee\uff1a\u63cf\u8ff0Key3\uff0c\u5e76\u52a0\u8f7d\u5230\u5f00\u53d1\u677f\u4e0a\u9762 vim arch/arm/boot/dts/exynos4412-fs4412.dts \u5728\u7f16\u7a0b\u8fc7\u7a0b\u4e2d\uff0c\u9700\u8981\u5b9a\u4e49\u81ea\u5df1\u7684\u8282\u70b9--\u63cf\u8ff0\u5f53\u524d\u8bbe\u5907\u7528\u7684\u4e2d\u65ad\u53f7 arch/arm/boot/dts/exynos4412-fs4412.dts key3_int_nod{ compatible = \"key3_int\"; interrupt-parent = <&gpx1>; interrupts = <2 4> }; \u8fd9\u91cc\u7684 interrupts = <2 4> \u7b2c\u4e00\u98792 \u8868\u793a\u3002GPX1-2 \u7b2c\u4e8c\u98794 \u8868\u793a \u4e2d\u65ad\u89e6\u53d1\u65b9\u5f0f \u5177\u4f53\u7684\u503c\u53c2\u8003\uff1a \\Documentation\\devicetree\\bindings\\pinctrl \u7f16\u8bd1\u8bbe\u5907\u6811\uff1a make dtbs \u70e7\u5f55\u5230\u5f00\u53d1\u677f\u3002\u3002\u3002\u3002\u3002 \u8bbe\u5907\u6811\u8c03\u8bd5\u4fe1\u606f\uff1a cat /proc/device-tree/ 2.2 \u5728\u9a71\u52a8\u4e2d\u901a\u8fc7\u8bbe\u5907\u6811\u83b7\u53d6\u4e2d\u65ad\u53f7 \u5728\u9a71\u52a8\u4e2d\uff0c\u83b7\u53d6\u8bbe\u5907\u6811\u7684\u4fe1\u606f\u7684APIs\uff1a // \u83b7\u53d6\u5230\u8bbe\u5907\u6811\u4e2d\u5230\u8282\u70b9 //\u9700\u8981:linux/of.h struct device_node *of_find_node_by_path(const char *path); \u53c2\u6570\uff1apath \u5c31\u662f\u8bbe\u5907\u6811\u8282\u70b9\u6240\u5728\u7684\u8def\u5f84 \u8fd4\u56de\u503c\uff1astruct device_node * // \u901a\u8fc7\u8282\u70b9\u53bb\u83b7\u53d6\u5230\u4e2d\u65ad\u53f7\u7801 //\u9700\u8981\uff1a#include <linux/of_irq.h> unsigned int irq_of_parse_and_map(struct device_node *dev, int index) \u53c2\u65701:\u8282\u70b9 \u53c2\u65702\uff1a\u7d22\u5f15\u53f7 \u8fd4\u56de\u503c\uff1a\u4e2d\u65ad\u53f7 3. \u4e2d\u65ad\u7533\u8bf7 3.1\u7533\u8bf7\u4e2d\u65ad \u83b7\u53d6\u5230\u4e86\u4e2d\u65ad\u53f7\u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u505a\u4e00\u4e2a\u4e2d\u65ad\u53f7\uff0c\u7136\u540e\u4f7f\u7528\u4e2d\u65ad\u7533\u8bf7\u51fd\u6570\uff0c\u53bb\u7533\u8bf7\u4e2d\u65ad\uff1a request_irq(unsigned int irq, irq_handler_t handler, unsigned long flags,const char *name, void *dev) \u53c2\u65701\uff1a\u4e2d\u65ad\u53f7 \u53c2\u65702\uff1a\u8fd9\u4e2a\u7c7b\u578b\u7684\u51fd\u6570\u6307\u9488\uff1atypedef irqreturn_t (*irq_handler_t)(int, void *); \u51fd\u6570\u6307\u9488\u6240\u6307\u5411\u7684\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u679a\u4e3e\u7c7b\u578b\uff1a typedef enum irqreturn irqreturn_t; \u5177\u4f53\u6709\u4ee5\u4e0b\u5b9a\u4e49\uff1a enum irqreturn { IRQ_NONE = (0 << 0), IRQ_HANDLED = (1 << 0), IRQ_WAKE_THREAD = (1 << 1), }; \u53c2\u65703\uff1aflag\u8868\u793a \u4e2d\u65ad\u89e6\u53d1\u7684\u65b9\u5f0f\uff1a #define IRQF_TRIGGER_NONE 0x00000000//\u5185\u90e8\u63a7\u5236\u5668\u89e6\u53d1\u4e2d\u65ad\u7684\u65f6\u5019\u7684\u6807\u5fd7 #define IRQF_TRIGGER_RISING 0x00000001//\u4e0a\u5347\u6cbf1<<0 #define IRQF_TRIGGER_FALLING 0x00000002//\u4e0b\u964d\u6cbf1<<1 #define IRQF_TRIGGER_HIGH 0x00000004//\u9ad8\u7535\u5e73 #define IRQF_TRIGGER_LOW 0x00000008//\u4f4e\u7535\u5e73 #define IRQF_TRIGGER_MASK (IRQF_TRIGGER_HIGH | IRQF_TRIGGER_LOW | \\ IRQF_TRIGGER_RISING | IRQF_TRIGGER_FALLING) \u53c2\u65704\uff1a\u540d\u5b57 \u53ef\u4ee5\u901a\u8fc7cat /proc/intterrupts \u53c2\u65705\uff1a\u7ed9\u4e2d\u65ad\u5904\u7406\u51fd\u6570\u7684\u53c2\u6570 3.2 \u4e2d\u65ad\u91ca\u653e \u91ca\u653e\u8bbe\u5907\u4e2d\u65ad\u8d44\u6e90\uff1a free_irq(unsigned int irq, void * dev_id); 4.\u4e2d\u65ad\u5904\u7406 irqreturn_t key_drv_irq_handler(int v,void *arg) { printk(\"-------------%s-----------\\n\",__FUNCTION__); if(readl(reg_addr+4) &(1<<2) ) { printk(\"key3 up!\\n\"); } else { printk(\"key3 press down!\\n\"); } return IRQ_HANDLED; } 5. \u4e0a\u4f20\u6570\u636e\u7ed9\u7528\u6237 static ssize_t key_drv_read(struct file *file, char __user *buf, size_t nbytes, loff_t *ppos) { int usr_ret; //printk(\"--------------%s--------------\\n\",__FUNCTION__); usr_ret =copy_to_user(buf,&key_dev->key_t,sizeof(struct key_desc)); if(usr_ret >0) { printk(\"read error\\n\"); return usr_ret; } memset(&key_dev->key_t,0,sizeof(struct key_desc)); return 0; } 6.IO\u6a21\u578b \u6587\u4ef6io\u6a21\u578b\uff1a 1\uff0c\u975e\u963b\u585e: \u7acb\u5373\u8fd4\u56de\u6570\u636e\u7ed9\u7528\u6237\uff0c\u8bfb\u5199\u4e4b\u95f4\u7684\u65f6\u5019\u6bb5\u5f88\u77ed\uff0c\u975e\u5e38\u6d6a\u8d39\u8d44\u6e90\u3002 2\uff0c\u963b\u585e \uff1a\u5f53\u8fdb\u7a0b\u5728\u8bfb\u53d6\u6570\u636e\uff0c\u5982\u679c\u8d44\u6e90/\u6570\u636e\u6ca1\u51c6\u5907\u597d\uff0c\u8fdb\u7a0b\u5c31\u8fdb\u884c\u4f11\u7720\uff0c\u8ba9\u51fa\u7cfb\u7edf\u8c03\u5ea6\uff0c\u53ef\u4ee5\u51cf\u5c11\u8d44\u6e90\u5f00\u652f 3\uff0c\u591a\u8def\u590d\u7528--select/poll\uff1apoll\u53ef\u7528\u4e8e\u591a\u8def\u8bbe\u5907\uff0c\u8d44\u6e90\u7684\u76d1\u63a7\uff0c\u7528\u4e8e\u591a\u79cd\u8bbe\u5907\u90fd\u662f\u963b\u585e\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u5b9e\u73b0\u8f6e\u5faa\u7684\u52a8\u4f5c\u3002 4, \u5f02\u6b65\u4fe1\u53f7\u901a\u77e5faync \uff1a\u4e0d\u9700\u8981\u540c\u6b65\u8bfb\u5199\u6570\u636e\uff0c\u8d1f\u8d23\u76d1\u63a7\u4e00\u4e2a\u53ef\u89c1\u7684\u4fe1\u53f7\uff0c\u5f53\u4fe1\u53f7\u53d1\u751f\u65f6\u624d\u505a\u5904\u7406\uff0c\u4e0d\u5f71\u54cd\u5176\u4ed6\u4efb\u52a1\u7684\u6b63\u5e38\u6267\u884c\u3002 6.1 \u963b\u585e \u5f53\u8fdb\u7a0b\u5728\u8bfb\u53d6\u5916\u90e8\u8bbe\u5907\u7684\u8d44\u6e90(\u6570\u636e)\uff0c\u8d44\u6e90\u6ca1\u6709\u51c6\u5907\u597d\uff0c\u8fdb\u7a0b\u5c31\u4f1a\u4f11\u7720 linux\u5e94\u7528\u4e2d\uff0c\u5927\u90e8\u5206\u7684\u51fd\u6570\u63a5\u53e3\u90fd\u662f\u963b\u585e scanf(); read(); write(); accept(); \u4f11\u7720\u5728\u9a71\u52a8\u7684\u5b9e\u73b0\uff1a 1,\u5c06\u5f53\u524d\u8fdb\u7a0b\u52a0\u5165\u5230\u7b49\u5f85\u961f\u5217\u5934\u4e2d add_wait_queue(wait_queue_head_t * q, wait_queue_t * wait) 2\uff0c\u5c06\u5f53\u524d\u8fdb\u7a0b\u72b6\u6001\u8bbe\u7f6e\u6210TASK_INTERRUPTIBLE (\u53ef\u4e2d\u65ad\u7684\u72b6\u6001) set_current_state(TASK_INTERRUPTIBLE) 3\uff0c\u8ba9\u51fa\u8c03\u5ea6--\u4f11\u7720 schedule(void) \u66f4\u52a0\u667a\u80fd\u7684\u63a5\u53e3\uff0c\u7b49\u540c\u4e8e\u4e0a\u9762\u7684\u4e09\u4e2a\u63a5\u53e3\uff1a wait_event_interruptible(wait_queue_head_t *q, condition) \u53c2\u65701\uff1atypedef struct __wait_queue_head wait_queue_head_t; \u7b49\u5f85\u5934 \u6307\u9488 \u53c2\u65702\uff1a\u4e3a0\u7684\u65f6\u5019 \u5c31\u7b49\u5f85\u6570\u636e \u4e3a1\u7684\u65f6\u5019 \uff0c\u5c31\u4e0d\u7b49 \u9a71\u52a8\u5982\u4f55\u53bb\u5199\u4ee3\u7801 1\uff0c\u7b49\u5f85\u961f\u5217\u5934 wait_queue_head_t wq_head; init_waitqueue_head(wait_queue_head_t *q); 2\uff0c\u5728\u9700\u8981\u7b49\u5f85(\u6ca1\u6709\u6570\u636e)\u7684\u65f6\u5019\uff0c\u8fdb\u884c\u4f11\u7720 wait_event_interruptible(wait_queue_head_t *q, condition) 3\uff0c\u5728\u4e00\u4e2a\u5408\u9002\u7684\u65f6\u5019(\u6709\u6570\u636e)\uff0c\u4f1a\u5c06\u8fdb\u7a0b\u5524\u9192 wake_up_interruptible // \u8868\u793a\u6709\u6570\u636e,\u9700\u8981\u53bb\u5524\u9192\u6574\u4e2a\u8fdb\u7a0b/\u7b49\u5f85\u961f\u5217 wake_up_interruptible(wq_head); //\u540c\u65f6\u8bbe\u7f6e\u6807\u5fd7\u4f4d key_dev->key_state = 1; 6.2 \u975e\u963b\u585e \u5728\u8bfb\u5199\u7684\u65f6\u5019\uff0c\u5982\u679c\u6ca1\u6709\u6570\u636e\uff0c\u7acb\u523b\u8fd4\u56de\uff0c\u5e76\u4e14\u8fd4\u56de\u4e00\u4e2a\u51fa\u9519\u7801 \u7528\u7684\u4f1a\u6bd4\u8f83\u5c11\uff0c\u56e0\u4e3a\u6bd4\u8f83\u8017\u8d44\u6e90 \u5728\u6253\u5f00\uff08open\uff09\u4e00\u4e2a\u8bbe\u5907\u8282\u70b9\u6587\u4ef6\u7684\u65f6\u5019\uff0c\u52a0\u5165O_NONBLOCK\u8fd9\u4e2a\u6807\u5fd7\uff0c\u90a3\u4e48\u53ef\u4ee5\u5b9e\u73b0\u975e\u963b\u585e \u5728fcntl.h \u4e2d\u7684\u5b9a\u4e49\uff1a #ifndef O_NONBLOCK #define O_NONBLOCK 00004000 \u5bf9\u4e8e\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u6765\u8bf4\uff1a open(\"/dev/key0\", O_RDWR|O_NONBLOCK); \u5bf9\u4e8e\u9a71\u52a8\u7a0b\u5e8f\u6765\u8bf4\uff1a //\u9a71\u52a8\u4e2d\u9700\u8981\u53bb\u533a\u5206\uff0c\u5f53\u524d\u6a21\u5f0f\u662f\u963b\u585e\u8fd8\u662f\u975e\u963b\u585e //\u5982\u679c\u5f53\u524d\u662f\u975e\u963b\u585e\u6a21\u5f0f\uff0c\u5e76\u4e14\u6ca1\u6709\u6570\u636e\uff0c\u7acb\u9a6c\u8fd4\u56de\u4e00\u4e2a\u51fa\u9519\u7801 if( (file->f_flags & O_NONBLOCK) && (!key_dev->key_status))//\u975e\u963b\u585e\u7684\u60c5\u51b5 { return -EAGAIN; } 6.3 \u591a\u8def\u590d\u7528 (poll) \u5728ubuntu \u4e3b\u673a\u91cc\u9762\uff0c\u8f93\u5165 man poll \u53ef\u4ee5\u770b\u5230\u76f8\u5e94\u7684\u4f7f\u7528\u65b9\u6cd5 #include <poll.h> int poll(struct pollfd *fds, nfds_t nfds, int timeout); \u53c2\u65701\uff1astruct pollfd *fds struct pollfd { int fd; /* \u6253\u5f00\u7684\u8bbe\u5907\u5bf9\u5e94\u7684fd */ short events; /* \u8bf7\u6c42\u7684\u4e8b\u4ef6 */ short revents; /* \u8fd4\u56de\u7684\u4e8b\u4ef6 */ //\u5bf9\u4e8eevents \u548c revents \u5e38\u7528\u7684\u65e0\u975e\u5c31\u4ee5\u4e0b\u51e0\u79cd //POLLIN \u8bfb //POLLOUT \u5199 //POLLIN \u51fa\u9519 }; \u53c2\u65702\uff1a\u76d1\u63a7\u7684 fds \u7684\u4e2a\u6570 \u53c2\u65703\uff1a\u8d85\u65f6\u7684\u65f6\u95f4\uff0c\u5355\u4f4d\u4e3ams(\u6beb\u79d2) \u5982\u679c\u662f\u6b63\u6570\uff0c\u8868\u793a\u7b49\u5f85n ms \u5982\u679c\u662f0\u7684\u65f6\u5019\u5c31\u9a6c\u4e0a\u8fd4\u56de\uff0c\u975e\u963b\u585e \u5982\u679c\u662f\u8d1f\u6570\uff0c-1 \u8868\u793a\u65e0\u9650\u7b49\u5f85 \u8fd4\u56de\u503c\uff1a \u4e3a\u6b63\u6570\u7684\u65f6\u5019\u8868\u793a\u6210\u529f\uff0c\u8868\u793afd\u4e2d\u6709\u6570\u636e \u8fd4\u56de\u4e3a-1\u7684\u65f6\u5019 \u8868\u793a\u51fa\u9519 \u4e14\u4f1a\u8bbe\u5b9aerrno \u53ef\u4ee5\u4f7f\u7528perror( \".....\") \u8fd4\u56de\u4e3a0\u7684\u65f6\u5019 \u8868\u793a\u8d85\u65f6\u51fa\u9519\u4e14fd\u6ca1\u51c6\u5907\u597d \u9a71\u52a8\u91cc\u9762\u4ee3\u7801\u600e\u4e48\u6837\u5199\uff1f 1\u3001\u5728file_operation \u91cc\u9762\u6709\u8fd9\u4e2a\u6210\u5458\uff1a unsigned int (*poll) (struct file *, struct poll_table_struct *); \u5176\u4e2d\uff0c\u5173\u4e8estruct poll_table_struct\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a typedef struct poll_table_struct { poll_queue_proc _qproc; unsigned long _key; } poll_table; 2\u3001\u5728file_operations myfops\u4e2d\u6dfb\u52a0\u6ce8\u518c\u6210\u5458\uff1a const struct file_operations myfops={ .open = key_drv_open, .write= key_drv_write, .read = key_drv_read, .release = key_drv_close, .poll = key_poll; }; 3\u3001\u5b9e\u73b0\u8fd9\u4e2a\u6210\u5458\u51fd\u6570\uff1a unsigned int key_poll(struct file *filep, struct poll_table_struct * poll_t) { unsigned int mask; printk(\"--------------%s--------------\\n\",__FUNCTION__); poll_wait(filp, key_dev->wq_head, poll_t ); if(key_dev->key_status) mask |= POLLIN; else mask = 0; return mask; } 7 \u5f02\u6b65\u4fe1\u53f7 \u5f02\u6b65\u4fe1\u53f7\u901a\u77e5\uff1a \u5f53\u6709\u6570\u636e\u5230\u65f6\u5019\uff0c\u9a71\u52a8\u4f1a\u53d1\u9001\u4fe1\u53f7(SIGIO)\u7ed9\u5e94\u7528\uff0c\u5c31\u53ef\u4ee5\u5f02\u6b65\u53bb\u8bfb\u5199\u6570\u636e\uff0c\u4e0d\u7528\u4e3b\u52a8\u53bb\u8bfb\u5199 7.1 \u5e94\u7528--\u5904\u7406\u4fe1\u53f7\uff0c\u4e3b\u8981\u662f\u8bfb\u5199\u6570\u636e \u7b2c\u4e00\u6b65\uff1a #include <signal.h> typedef void (*sighandler_t)(int); sighandler_t signal(int signum, sighandler_t handler); void catch_signale(int signo) { if(signo == SIGIO) { printf(\"we got sigal SIGIO\"); // \u8bfb\u53d6\u6570\u636e read(fd, &event, sizeof(struct key_event)); if(event.code == KEY_ENTER) { if(event.value) { printf(\"APP__ key enter pressed\\n\"); }else { printf(\"APP__ key enter up\\n\"); } } } } \u7b2c\u4e8c\u6b65\uff1a int fcntl(int fd, int cmd, ... /* arg */ ); \u628aSIGIO\u7684\u4fe1\u53f7\u5173\u8054\u5230\u672c\u8fdb\u7a0b\uff08\u5c5e\u4e3b\u8fdb\u7a0b\uff09 \u628afd\u6539\u6210\u5f02\u6b65\u7684\u6a21\u5f0f\uff1aF_flag |= FASYNC #define FASYNC 00020000 /* fcntl, for BSD compatibility */ //first signed SIGIO to handler func signal(SIGIO, signal_handler); //second set process id to caught SIGIO fcntl(fd, F_SETOWN, getid()); //last,set fd to async flags = fcntl(fd, F_GETFL); flags |= FASYNC; fcntl(fd, F_SETFL, flags); \u7b2c\u4e09\u6b65\uff1a \u9a71\u52a8--\u53d1\u9001\u4fe1\u53f7 1\uff0c\u9700\u8981\u548c\u8fdb\u7a0b\u8fdb\u884c\u5173\u8054--\u8bb0\u5f55\u4fe1\u53f7\u8be5\u53d1\u9001\u7ed9\u8c01 \u5b9e\u73b0\u4e00\u4e2afasync\u7684\u63a5\u53e3: //int (*fasync) (int, struct file *, int); int key_fasync(int fd, struct file *filp, int on) { return fasync_helper(fd, filp, on, &key_dev->fasync); } const struct file_operations myfops={ \u3002\u3002\u3002\u3002\u3002 .fasync = key_fsync, }; //\u53ea\u9700\u8981\u8c03\u7528\u8fd9\u4e2a\u63a5\u53e3\uff1a int fasync_helper(int fd, struct file * filp, int on, struct fasync_struct **fapp); \u53c2\u65701-3\u4ece\uff1a int key_fasync(int fd, struct file *filp, int on) \u4f20\u5165\u5373\u53ef 7.2 \u5728\u67d0\u4e2a\u7279\u5b9a\u7684\u65f6\u5019\u53bb\u53d1\u9001\u4fe1\u53f7\uff0c\u5728\u6709\u6570\u636e\u7684\u65f6\u5019 //\u53d1\u9001\u4fe1\u53f7 kill_fasync(&event->fasync, SIGIO, POLLIN);//read 8 \u4e2d\u65ad\u4e0b\u534a\u90e8 \u4e2d\u65ad\u4e0a\u4e0b\u6587\u662f\u4ec0\u4e48\u6982\u5ff5\uff1f \u4e2d\u65ad\u4e0b\u534a\u90e8\u7684\u5b9e\u73b0\u7684\u65b9\u6cd5\u6709\u54ea\u4e9b\uff1f 1\uff0csoftirq :\u5904\u7406\u901f\u5ea6\u5feb\uff0c\u4f7f\u7528\u590d\u6742\uff0c\u9700\u8981\u4fee\u6539\u5185\u6838\u6e90\u7801\uff0c\u5bf9\u4e8e\u6211\u4eec\u7528\u6237\u6765\u8bf4\u5462\uff0c\u7528\u5f97\u6bd4\u8f83\u5c11\u4e5f\u4e0d\u63a8\u8350\u5927\u5bb6\u4f7f\u7528 2, tasklet \uff1a\u4f7f\u7528\u4e86sotfirq\u505a\u4e3a\u4e8c\u6b21\u5c01\u88c5\uff0c\u5904\u7406\u901f\u5ea6\u8f83\u5feb\uff0c\u4f46\u662f\u5b83\u5de5\u4f5c\u4e8e\u4e2d\u65ad\u4e0a\u4e0b\u6587\uff0c\u91cc\u9762\u4e0d\u80fd\u4f7f\u7528\u963b\u585e\u578b\u63a5\u53e3\uff0c\u5ef6\u65f6\u51fd\u6570 3, workqueue \uff1a\u5e76\u6ca1\u6709\u4f7f\u7528\u4e86sotfirq\u505a\u4e3a\u4e8c\u6b21\u5c01\u88c5\uff0c\u5904\u7406\u901f\u5ea6\u7a0d\u6162\uff0c\u5bf9\u4e8e\u7528\u6237\u6765\u8bf4\u65e0\u5f71\u54cd\uff0c\u7075\u6d3b\u4e4b\u5904\uff1a\u5de5\u4f5c\u5728\u8fdb\u7a0b\u4e0a\u4e0b\u6587\uff0c\u53ef\u4ee5\u4f7f\u7528\u963b\u585e\u578b\u51fd\u6570\uff0c\u4e5f\u53ef\u4ee5\u5ef6\u65f6\u3002\u3002\u3002 \u4e00\u3001tasklet\u7684\u4f7f\u7528\uff1a \u9996\u5148\u662f\uff0ctasklet \u7684\u6570\u636e\u7ed3\u6784\uff1a struct tasklet_struct { struct tasklet_struct *next; unsigned long state; atomic_t count; void (*func)(unsigned long); unsigned long data; }; void tasklet_init(struct tasklet_struct t, void ( func)(unsigned long), unsigned long data); tasklet_schedule(struct tasklet_struct *t); tasklet_kill(struct tasklet_struct *t);//\u91ca\u653e\u8d44\u6e90 \u4e8c\u3001\u5de5\u4f5c \u961f\u5217 workqueue\u7684\u5b9e\u73b0 struct work_struct { atomic_long_t data; struct list_head entry; work_func_t func; }; typedef void (*work_func_t)(struct work_struct *work); a\uff0c \u521d\u59cb\u5316 void work_irq_half(struct work_struct *work) { printk(\"-------%s-------------\\n\", __FUNCTION__); // \u8868\u793a\u6709\u6570\u636e,\u9700\u8981\u53bb\u5524\u9192\u6574\u4e2a\u8fdb\u7a0b/\u7b49\u5f85\u961f\u5217 wake_up_interruptible(&key_dev->wq_head); //\u540c\u65f6\u8bbe\u7f6e\u6807\u5fd7\u4f4d key_dev->key_state = 1; //\u53d1\u9001\u4fe1\u53f7 kill_fasync(&key_dev->faysnc, SIGIO, POLLIN); } struct work_struct mywork; INIT_WORK(struct work_struct *work, work_func_t func); b, \u5728\u4e0a\u534a\u90e8\u4e2d\u653e\u5165\u5230\u5185\u6838\u7ebf\u7a0b\u4e2d--\u542f\u52a8 schedule_work(&key_dev->mywork);","title":"\u9a71\u52a8\u7b2c\u4e8c\u5929"},{"location":"\u9a71\u52a8\u7b2c\u4e8c\u5929---\u4e2d\u65ad/#-","text":"\u9a71\u52a8\u7b2c\u4e8c\u5929---\u4e2d\u65ad 1. \u4e2d\u65ad\u7684\u57fa\u672c\u6982\u5ff5 2. \u4e2d\u65ad\u53f7\u7684\u83b7\u53d6\u65b9\u5f0f 2.2 \u5728\u9a71\u52a8\u4e2d\u901a\u8fc7\u8bbe\u5907\u6811\u83b7\u53d6\u4e2d\u65ad\u53f7 3. \u4e2d\u65ad\u7533\u8bf7 3.1\u7533\u8bf7\u4e2d\u65ad 3.2 \u4e2d\u65ad\u91ca\u653e 4.\u4e2d\u65ad\u5904\u7406 5. \u4e0a\u4f20\u6570\u636e\u7ed9\u7528\u6237 6.IO\u6a21\u578b 6.1 \u963b\u585e 6.2 \u975e\u963b\u585e 6.3 \u591a\u8def\u590d\u7528 (poll) 7 \u5f02\u6b65\u4fe1\u53f7 8 \u4e2d\u65ad\u4e0b\u534a\u90e8 \u4e2d\u65ad\u7684\u57fa\u672c\u6982\u5ff5 \u4e2d\u65ad\u53f7\u7684\u83b7\u53d6\u65b9\u5f0f \u4e2d\u65ad\u7533\u8bf7 \u4e2d\u65ad\u5904\u7406 \u4e0a\u4f20\u6570\u636e\u7ed9\u7528\u6237 IO\u6a21\u578b \u5f02\u6b65\u4fe1\u53f7 \u4e2d\u65ad\u4e0b\u534a\u90e8","title":"\u9a71\u52a8\u7b2c\u4e8c\u5929---\u4e2d\u65ad"},{"location":"\u9a71\u52a8\u7b2c\u4e8c\u5929---\u4e2d\u65ad/#1","text":"\u53c2\u8003\u88f8\u673a\u5f00\u53d1\u4e2d\u7684\u76f8\u5173\u8d44\u6599","title":"1. \u4e2d\u65ad\u7684\u57fa\u672c\u6982\u5ff5"},{"location":"\u9a71\u52a8\u7b2c\u4e8c\u5929---\u4e2d\u65ad/#2","text":"\u8bbe\u5907\u6811\uff1adts \u8bbe\u5907\u6811\u6e90\u7801 \u8bbe\u5907\u6811\u91cc\u9762\u4e00\u4e9b\u901a\u7528\u7684\u5b9a\u4e49\uff0c\u63d0\u53d6\u51fa\uff0c\u5f62\u6210\u7c7b\u4f3cc \u5934\u6587\u4ef6\uff0cdtsi \u79f0\u4e4b\u4e3a\uff1a\u8bbe\u5907\u6811\u7684\u5934\u6587\u4ef6\uff0c#include \"xxx.dtsi\" dtc \u628adts\u7f16\u8bd1\u6210\u4e8c\u8fdb\u5236\u6587\u4ef6\uff08dtb\uff09 \u7ed9\u5185\u6838\u4f7f\u7528 1\uff0c\u4e2d\u65ad\u53f7--\u5c31\u662f\u4e00\u4e2a\u53f7\u7801\uff0c\u9700\u8981\u901a\u8fc7\u4e00\u5b9a\u7684\u65b9\u5f0f\u53bb\u83b7\u53d6\u5230 \u83b7\u53d6\u4e2d\u65ad\u53f7\u5230\u65b9\u6cd5\uff1a 1\uff0c \u5b8f\u5b9a\u4e49 IRQ_EINT(\u53f7\u7801) //eyxnos4412-mach.h//\u65e7\u5185\u68382.6.xxx 2\uff0c\u8bbe\u5907\u6811\u6587\u4ef6\u4e2d //\u57283.14.0\u5185\u6838\u4e2d\uff0c\u4ece\u8bbe\u5907\u6811\u4e2d\u83b7\u53d6 arch/arm/boot/dts/exynos4412-fs4412.dts --> arch/arm/boot/dts/exynos4412.dtsi -->arch/arm/boot/dts/exynos4x12.dtsi -->arch/arm/boot/dts/exynos4x12-pinctrl.dtsi \u73b0\u5728\u4ee5key3\u4e3a\u4f8b\uff1a 1\uff0c\u770b\u539f\u7406\u56fe key3--->SIM_DET---->gpx1_2 2, \u67e5\u770b\u8bbe\u5907\u6811\u6587\u4ef6\uff1aarch/arm/boot/dts/exynos4x12-pinctrl.dtsi 3\uff0c\u786e\u5b9a\u4e86\u4e00\u4e2a\u4e2d\u65ad\u53f7\u7684\u6e90\uff1a\u4ee5key3\u4e3a\u4f8b\uff0c\u5bf9\u5e94datasheet\uff08\u53c2\u80034412\u624b\u518c\uff0c752\u9875\u5173\u4e8e\u4e2d\u65ad\u53f7\u7684\u63cf\u8ff0\uff09\u7684\u4e2d\u65ad\u53f7\uff1a26 4\uff0c\u5728\u8bbe\u5907\u6811\u4e2d\uff0c\u5173\u4e8egpx1_2\u7684\u4e2d\u65ad\u53f7\u4e5f\u662f26 \u5728\u8bbe\u5907\u6811\u5934\u6587\u4ef6\u4e2d\uff1aarch/arm/boot/dts/exynos4x12-pinctrl.dtsi gpx1: gpx1 { gpio-controller; #gpio-cells = <2>; interrupt-controller; interrupt-parent = <&gic>; interrupts = <0 24 0>, <0 25 0>, <0 26 0>, <0 27 0>, <0 28 0>, <0 29 0>, <0 30 0>, <0 31 0>; #interrupt-cells = <2>; }; \u505a\u4e00\u4e2a\u8bbe\u5907\u6811\u8282\u76ee\uff1a\u63cf\u8ff0Key3\uff0c\u5e76\u52a0\u8f7d\u5230\u5f00\u53d1\u677f\u4e0a\u9762 vim arch/arm/boot/dts/exynos4412-fs4412.dts \u5728\u7f16\u7a0b\u8fc7\u7a0b\u4e2d\uff0c\u9700\u8981\u5b9a\u4e49\u81ea\u5df1\u7684\u8282\u70b9--\u63cf\u8ff0\u5f53\u524d\u8bbe\u5907\u7528\u7684\u4e2d\u65ad\u53f7 arch/arm/boot/dts/exynos4412-fs4412.dts key3_int_nod{ compatible = \"key3_int\"; interrupt-parent = <&gpx1>; interrupts = <2 4> }; \u8fd9\u91cc\u7684 interrupts = <2 4> \u7b2c\u4e00\u98792 \u8868\u793a\u3002GPX1-2 \u7b2c\u4e8c\u98794 \u8868\u793a \u4e2d\u65ad\u89e6\u53d1\u65b9\u5f0f \u5177\u4f53\u7684\u503c\u53c2\u8003\uff1a \\Documentation\\devicetree\\bindings\\pinctrl \u7f16\u8bd1\u8bbe\u5907\u6811\uff1a make dtbs \u70e7\u5f55\u5230\u5f00\u53d1\u677f\u3002\u3002\u3002\u3002\u3002 \u8bbe\u5907\u6811\u8c03\u8bd5\u4fe1\u606f\uff1a cat /proc/device-tree/","title":"2. \u4e2d\u65ad\u53f7\u7684\u83b7\u53d6\u65b9\u5f0f"},{"location":"\u9a71\u52a8\u7b2c\u4e8c\u5929---\u4e2d\u65ad/#22","text":"\u5728\u9a71\u52a8\u4e2d\uff0c\u83b7\u53d6\u8bbe\u5907\u6811\u7684\u4fe1\u606f\u7684APIs\uff1a // \u83b7\u53d6\u5230\u8bbe\u5907\u6811\u4e2d\u5230\u8282\u70b9 //\u9700\u8981:linux/of.h struct device_node *of_find_node_by_path(const char *path); \u53c2\u6570\uff1apath \u5c31\u662f\u8bbe\u5907\u6811\u8282\u70b9\u6240\u5728\u7684\u8def\u5f84 \u8fd4\u56de\u503c\uff1astruct device_node * // \u901a\u8fc7\u8282\u70b9\u53bb\u83b7\u53d6\u5230\u4e2d\u65ad\u53f7\u7801 //\u9700\u8981\uff1a#include <linux/of_irq.h> unsigned int irq_of_parse_and_map(struct device_node *dev, int index) \u53c2\u65701:\u8282\u70b9 \u53c2\u65702\uff1a\u7d22\u5f15\u53f7 \u8fd4\u56de\u503c\uff1a\u4e2d\u65ad\u53f7","title":"2.2 \u5728\u9a71\u52a8\u4e2d\u901a\u8fc7\u8bbe\u5907\u6811\u83b7\u53d6\u4e2d\u65ad\u53f7"},{"location":"\u9a71\u52a8\u7b2c\u4e8c\u5929---\u4e2d\u65ad/#3","text":"","title":"3. \u4e2d\u65ad\u7533\u8bf7"},{"location":"\u9a71\u52a8\u7b2c\u4e8c\u5929---\u4e2d\u65ad/#31","text":"\u83b7\u53d6\u5230\u4e86\u4e2d\u65ad\u53f7\u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u505a\u4e00\u4e2a\u4e2d\u65ad\u53f7\uff0c\u7136\u540e\u4f7f\u7528\u4e2d\u65ad\u7533\u8bf7\u51fd\u6570\uff0c\u53bb\u7533\u8bf7\u4e2d\u65ad\uff1a request_irq(unsigned int irq, irq_handler_t handler, unsigned long flags,const char *name, void *dev) \u53c2\u65701\uff1a\u4e2d\u65ad\u53f7 \u53c2\u65702\uff1a\u8fd9\u4e2a\u7c7b\u578b\u7684\u51fd\u6570\u6307\u9488\uff1atypedef irqreturn_t (*irq_handler_t)(int, void *); \u51fd\u6570\u6307\u9488\u6240\u6307\u5411\u7684\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u679a\u4e3e\u7c7b\u578b\uff1a typedef enum irqreturn irqreturn_t; \u5177\u4f53\u6709\u4ee5\u4e0b\u5b9a\u4e49\uff1a enum irqreturn { IRQ_NONE = (0 << 0), IRQ_HANDLED = (1 << 0), IRQ_WAKE_THREAD = (1 << 1), }; \u53c2\u65703\uff1aflag\u8868\u793a \u4e2d\u65ad\u89e6\u53d1\u7684\u65b9\u5f0f\uff1a #define IRQF_TRIGGER_NONE 0x00000000//\u5185\u90e8\u63a7\u5236\u5668\u89e6\u53d1\u4e2d\u65ad\u7684\u65f6\u5019\u7684\u6807\u5fd7 #define IRQF_TRIGGER_RISING 0x00000001//\u4e0a\u5347\u6cbf1<<0 #define IRQF_TRIGGER_FALLING 0x00000002//\u4e0b\u964d\u6cbf1<<1 #define IRQF_TRIGGER_HIGH 0x00000004//\u9ad8\u7535\u5e73 #define IRQF_TRIGGER_LOW 0x00000008//\u4f4e\u7535\u5e73 #define IRQF_TRIGGER_MASK (IRQF_TRIGGER_HIGH | IRQF_TRIGGER_LOW | \\ IRQF_TRIGGER_RISING | IRQF_TRIGGER_FALLING) \u53c2\u65704\uff1a\u540d\u5b57 \u53ef\u4ee5\u901a\u8fc7cat /proc/intterrupts \u53c2\u65705\uff1a\u7ed9\u4e2d\u65ad\u5904\u7406\u51fd\u6570\u7684\u53c2\u6570","title":"3.1\u7533\u8bf7\u4e2d\u65ad"},{"location":"\u9a71\u52a8\u7b2c\u4e8c\u5929---\u4e2d\u65ad/#32","text":"\u91ca\u653e\u8bbe\u5907\u4e2d\u65ad\u8d44\u6e90\uff1a free_irq(unsigned int irq, void * dev_id);","title":"3.2 \u4e2d\u65ad\u91ca\u653e"},{"location":"\u9a71\u52a8\u7b2c\u4e8c\u5929---\u4e2d\u65ad/#4","text":"irqreturn_t key_drv_irq_handler(int v,void *arg) { printk(\"-------------%s-----------\\n\",__FUNCTION__); if(readl(reg_addr+4) &(1<<2) ) { printk(\"key3 up!\\n\"); } else { printk(\"key3 press down!\\n\"); } return IRQ_HANDLED; }","title":"4.\u4e2d\u65ad\u5904\u7406"},{"location":"\u9a71\u52a8\u7b2c\u4e8c\u5929---\u4e2d\u65ad/#5","text":"static ssize_t key_drv_read(struct file *file, char __user *buf, size_t nbytes, loff_t *ppos) { int usr_ret; //printk(\"--------------%s--------------\\n\",__FUNCTION__); usr_ret =copy_to_user(buf,&key_dev->key_t,sizeof(struct key_desc)); if(usr_ret >0) { printk(\"read error\\n\"); return usr_ret; } memset(&key_dev->key_t,0,sizeof(struct key_desc)); return 0; }","title":"5. \u4e0a\u4f20\u6570\u636e\u7ed9\u7528\u6237"},{"location":"\u9a71\u52a8\u7b2c\u4e8c\u5929---\u4e2d\u65ad/#6io","text":"\u6587\u4ef6io\u6a21\u578b\uff1a 1\uff0c\u975e\u963b\u585e: \u7acb\u5373\u8fd4\u56de\u6570\u636e\u7ed9\u7528\u6237\uff0c\u8bfb\u5199\u4e4b\u95f4\u7684\u65f6\u5019\u6bb5\u5f88\u77ed\uff0c\u975e\u5e38\u6d6a\u8d39\u8d44\u6e90\u3002 2\uff0c\u963b\u585e \uff1a\u5f53\u8fdb\u7a0b\u5728\u8bfb\u53d6\u6570\u636e\uff0c\u5982\u679c\u8d44\u6e90/\u6570\u636e\u6ca1\u51c6\u5907\u597d\uff0c\u8fdb\u7a0b\u5c31\u8fdb\u884c\u4f11\u7720\uff0c\u8ba9\u51fa\u7cfb\u7edf\u8c03\u5ea6\uff0c\u53ef\u4ee5\u51cf\u5c11\u8d44\u6e90\u5f00\u652f 3\uff0c\u591a\u8def\u590d\u7528--select/poll\uff1apoll\u53ef\u7528\u4e8e\u591a\u8def\u8bbe\u5907\uff0c\u8d44\u6e90\u7684\u76d1\u63a7\uff0c\u7528\u4e8e\u591a\u79cd\u8bbe\u5907\u90fd\u662f\u963b\u585e\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u5b9e\u73b0\u8f6e\u5faa\u7684\u52a8\u4f5c\u3002 4, \u5f02\u6b65\u4fe1\u53f7\u901a\u77e5faync \uff1a\u4e0d\u9700\u8981\u540c\u6b65\u8bfb\u5199\u6570\u636e\uff0c\u8d1f\u8d23\u76d1\u63a7\u4e00\u4e2a\u53ef\u89c1\u7684\u4fe1\u53f7\uff0c\u5f53\u4fe1\u53f7\u53d1\u751f\u65f6\u624d\u505a\u5904\u7406\uff0c\u4e0d\u5f71\u54cd\u5176\u4ed6\u4efb\u52a1\u7684\u6b63\u5e38\u6267\u884c\u3002","title":"6.IO\u6a21\u578b"},{"location":"\u9a71\u52a8\u7b2c\u4e8c\u5929---\u4e2d\u65ad/#61","text":"\u5f53\u8fdb\u7a0b\u5728\u8bfb\u53d6\u5916\u90e8\u8bbe\u5907\u7684\u8d44\u6e90(\u6570\u636e)\uff0c\u8d44\u6e90\u6ca1\u6709\u51c6\u5907\u597d\uff0c\u8fdb\u7a0b\u5c31\u4f1a\u4f11\u7720 linux\u5e94\u7528\u4e2d\uff0c\u5927\u90e8\u5206\u7684\u51fd\u6570\u63a5\u53e3\u90fd\u662f\u963b\u585e scanf(); read(); write(); accept(); \u4f11\u7720\u5728\u9a71\u52a8\u7684\u5b9e\u73b0\uff1a 1,\u5c06\u5f53\u524d\u8fdb\u7a0b\u52a0\u5165\u5230\u7b49\u5f85\u961f\u5217\u5934\u4e2d add_wait_queue(wait_queue_head_t * q, wait_queue_t * wait) 2\uff0c\u5c06\u5f53\u524d\u8fdb\u7a0b\u72b6\u6001\u8bbe\u7f6e\u6210TASK_INTERRUPTIBLE (\u53ef\u4e2d\u65ad\u7684\u72b6\u6001) set_current_state(TASK_INTERRUPTIBLE) 3\uff0c\u8ba9\u51fa\u8c03\u5ea6--\u4f11\u7720 schedule(void) \u66f4\u52a0\u667a\u80fd\u7684\u63a5\u53e3\uff0c\u7b49\u540c\u4e8e\u4e0a\u9762\u7684\u4e09\u4e2a\u63a5\u53e3\uff1a wait_event_interruptible(wait_queue_head_t *q, condition) \u53c2\u65701\uff1atypedef struct __wait_queue_head wait_queue_head_t; \u7b49\u5f85\u5934 \u6307\u9488 \u53c2\u65702\uff1a\u4e3a0\u7684\u65f6\u5019 \u5c31\u7b49\u5f85\u6570\u636e \u4e3a1\u7684\u65f6\u5019 \uff0c\u5c31\u4e0d\u7b49 \u9a71\u52a8\u5982\u4f55\u53bb\u5199\u4ee3\u7801 1\uff0c\u7b49\u5f85\u961f\u5217\u5934 wait_queue_head_t wq_head; init_waitqueue_head(wait_queue_head_t *q); 2\uff0c\u5728\u9700\u8981\u7b49\u5f85(\u6ca1\u6709\u6570\u636e)\u7684\u65f6\u5019\uff0c\u8fdb\u884c\u4f11\u7720 wait_event_interruptible(wait_queue_head_t *q, condition) 3\uff0c\u5728\u4e00\u4e2a\u5408\u9002\u7684\u65f6\u5019(\u6709\u6570\u636e)\uff0c\u4f1a\u5c06\u8fdb\u7a0b\u5524\u9192 wake_up_interruptible // \u8868\u793a\u6709\u6570\u636e,\u9700\u8981\u53bb\u5524\u9192\u6574\u4e2a\u8fdb\u7a0b/\u7b49\u5f85\u961f\u5217 wake_up_interruptible(wq_head); //\u540c\u65f6\u8bbe\u7f6e\u6807\u5fd7\u4f4d key_dev->key_state = 1;","title":"6.1 \u963b\u585e"},{"location":"\u9a71\u52a8\u7b2c\u4e8c\u5929---\u4e2d\u65ad/#62","text":"\u5728\u8bfb\u5199\u7684\u65f6\u5019\uff0c\u5982\u679c\u6ca1\u6709\u6570\u636e\uff0c\u7acb\u523b\u8fd4\u56de\uff0c\u5e76\u4e14\u8fd4\u56de\u4e00\u4e2a\u51fa\u9519\u7801 \u7528\u7684\u4f1a\u6bd4\u8f83\u5c11\uff0c\u56e0\u4e3a\u6bd4\u8f83\u8017\u8d44\u6e90 \u5728\u6253\u5f00\uff08open\uff09\u4e00\u4e2a\u8bbe\u5907\u8282\u70b9\u6587\u4ef6\u7684\u65f6\u5019\uff0c\u52a0\u5165O_NONBLOCK\u8fd9\u4e2a\u6807\u5fd7\uff0c\u90a3\u4e48\u53ef\u4ee5\u5b9e\u73b0\u975e\u963b\u585e \u5728fcntl.h \u4e2d\u7684\u5b9a\u4e49\uff1a #ifndef O_NONBLOCK #define O_NONBLOCK 00004000 \u5bf9\u4e8e\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u6765\u8bf4\uff1a open(\"/dev/key0\", O_RDWR|O_NONBLOCK); \u5bf9\u4e8e\u9a71\u52a8\u7a0b\u5e8f\u6765\u8bf4\uff1a //\u9a71\u52a8\u4e2d\u9700\u8981\u53bb\u533a\u5206\uff0c\u5f53\u524d\u6a21\u5f0f\u662f\u963b\u585e\u8fd8\u662f\u975e\u963b\u585e //\u5982\u679c\u5f53\u524d\u662f\u975e\u963b\u585e\u6a21\u5f0f\uff0c\u5e76\u4e14\u6ca1\u6709\u6570\u636e\uff0c\u7acb\u9a6c\u8fd4\u56de\u4e00\u4e2a\u51fa\u9519\u7801 if( (file->f_flags & O_NONBLOCK) && (!key_dev->key_status))//\u975e\u963b\u585e\u7684\u60c5\u51b5 { return -EAGAIN; }","title":"6.2 \u975e\u963b\u585e"},{"location":"\u9a71\u52a8\u7b2c\u4e8c\u5929---\u4e2d\u65ad/#63-poll","text":"\u5728ubuntu \u4e3b\u673a\u91cc\u9762\uff0c\u8f93\u5165 man poll \u53ef\u4ee5\u770b\u5230\u76f8\u5e94\u7684\u4f7f\u7528\u65b9\u6cd5 #include <poll.h> int poll(struct pollfd *fds, nfds_t nfds, int timeout); \u53c2\u65701\uff1astruct pollfd *fds struct pollfd { int fd; /* \u6253\u5f00\u7684\u8bbe\u5907\u5bf9\u5e94\u7684fd */ short events; /* \u8bf7\u6c42\u7684\u4e8b\u4ef6 */ short revents; /* \u8fd4\u56de\u7684\u4e8b\u4ef6 */ //\u5bf9\u4e8eevents \u548c revents \u5e38\u7528\u7684\u65e0\u975e\u5c31\u4ee5\u4e0b\u51e0\u79cd //POLLIN \u8bfb //POLLOUT \u5199 //POLLIN \u51fa\u9519 }; \u53c2\u65702\uff1a\u76d1\u63a7\u7684 fds \u7684\u4e2a\u6570 \u53c2\u65703\uff1a\u8d85\u65f6\u7684\u65f6\u95f4\uff0c\u5355\u4f4d\u4e3ams(\u6beb\u79d2) \u5982\u679c\u662f\u6b63\u6570\uff0c\u8868\u793a\u7b49\u5f85n ms \u5982\u679c\u662f0\u7684\u65f6\u5019\u5c31\u9a6c\u4e0a\u8fd4\u56de\uff0c\u975e\u963b\u585e \u5982\u679c\u662f\u8d1f\u6570\uff0c-1 \u8868\u793a\u65e0\u9650\u7b49\u5f85 \u8fd4\u56de\u503c\uff1a \u4e3a\u6b63\u6570\u7684\u65f6\u5019\u8868\u793a\u6210\u529f\uff0c\u8868\u793afd\u4e2d\u6709\u6570\u636e \u8fd4\u56de\u4e3a-1\u7684\u65f6\u5019 \u8868\u793a\u51fa\u9519 \u4e14\u4f1a\u8bbe\u5b9aerrno \u53ef\u4ee5\u4f7f\u7528perror( \".....\") \u8fd4\u56de\u4e3a0\u7684\u65f6\u5019 \u8868\u793a\u8d85\u65f6\u51fa\u9519\u4e14fd\u6ca1\u51c6\u5907\u597d \u9a71\u52a8\u91cc\u9762\u4ee3\u7801\u600e\u4e48\u6837\u5199\uff1f 1\u3001\u5728file_operation \u91cc\u9762\u6709\u8fd9\u4e2a\u6210\u5458\uff1a unsigned int (*poll) (struct file *, struct poll_table_struct *); \u5176\u4e2d\uff0c\u5173\u4e8estruct poll_table_struct\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a typedef struct poll_table_struct { poll_queue_proc _qproc; unsigned long _key; } poll_table; 2\u3001\u5728file_operations myfops\u4e2d\u6dfb\u52a0\u6ce8\u518c\u6210\u5458\uff1a const struct file_operations myfops={ .open = key_drv_open, .write= key_drv_write, .read = key_drv_read, .release = key_drv_close, .poll = key_poll; }; 3\u3001\u5b9e\u73b0\u8fd9\u4e2a\u6210\u5458\u51fd\u6570\uff1a unsigned int key_poll(struct file *filep, struct poll_table_struct * poll_t) { unsigned int mask; printk(\"--------------%s--------------\\n\",__FUNCTION__); poll_wait(filp, key_dev->wq_head, poll_t ); if(key_dev->key_status) mask |= POLLIN; else mask = 0; return mask; }","title":"6.3 \u591a\u8def\u590d\u7528 (poll)"},{"location":"\u9a71\u52a8\u7b2c\u4e8c\u5929---\u4e2d\u65ad/#7","text":"\u5f02\u6b65\u4fe1\u53f7\u901a\u77e5\uff1a \u5f53\u6709\u6570\u636e\u5230\u65f6\u5019\uff0c\u9a71\u52a8\u4f1a\u53d1\u9001\u4fe1\u53f7(SIGIO)\u7ed9\u5e94\u7528\uff0c\u5c31\u53ef\u4ee5\u5f02\u6b65\u53bb\u8bfb\u5199\u6570\u636e\uff0c\u4e0d\u7528\u4e3b\u52a8\u53bb\u8bfb\u5199 7.1 \u5e94\u7528--\u5904\u7406\u4fe1\u53f7\uff0c\u4e3b\u8981\u662f\u8bfb\u5199\u6570\u636e \u7b2c\u4e00\u6b65\uff1a #include <signal.h> typedef void (*sighandler_t)(int); sighandler_t signal(int signum, sighandler_t handler); void catch_signale(int signo) { if(signo == SIGIO) { printf(\"we got sigal SIGIO\"); // \u8bfb\u53d6\u6570\u636e read(fd, &event, sizeof(struct key_event)); if(event.code == KEY_ENTER) { if(event.value) { printf(\"APP__ key enter pressed\\n\"); }else { printf(\"APP__ key enter up\\n\"); } } } } \u7b2c\u4e8c\u6b65\uff1a int fcntl(int fd, int cmd, ... /* arg */ ); \u628aSIGIO\u7684\u4fe1\u53f7\u5173\u8054\u5230\u672c\u8fdb\u7a0b\uff08\u5c5e\u4e3b\u8fdb\u7a0b\uff09 \u628afd\u6539\u6210\u5f02\u6b65\u7684\u6a21\u5f0f\uff1aF_flag |= FASYNC #define FASYNC 00020000 /* fcntl, for BSD compatibility */ //first signed SIGIO to handler func signal(SIGIO, signal_handler); //second set process id to caught SIGIO fcntl(fd, F_SETOWN, getid()); //last,set fd to async flags = fcntl(fd, F_GETFL); flags |= FASYNC; fcntl(fd, F_SETFL, flags); \u7b2c\u4e09\u6b65\uff1a \u9a71\u52a8--\u53d1\u9001\u4fe1\u53f7 1\uff0c\u9700\u8981\u548c\u8fdb\u7a0b\u8fdb\u884c\u5173\u8054--\u8bb0\u5f55\u4fe1\u53f7\u8be5\u53d1\u9001\u7ed9\u8c01 \u5b9e\u73b0\u4e00\u4e2afasync\u7684\u63a5\u53e3: //int (*fasync) (int, struct file *, int); int key_fasync(int fd, struct file *filp, int on) { return fasync_helper(fd, filp, on, &key_dev->fasync); } const struct file_operations myfops={ \u3002\u3002\u3002\u3002\u3002 .fasync = key_fsync, }; //\u53ea\u9700\u8981\u8c03\u7528\u8fd9\u4e2a\u63a5\u53e3\uff1a int fasync_helper(int fd, struct file * filp, int on, struct fasync_struct **fapp); \u53c2\u65701-3\u4ece\uff1a int key_fasync(int fd, struct file *filp, int on) \u4f20\u5165\u5373\u53ef 7.2 \u5728\u67d0\u4e2a\u7279\u5b9a\u7684\u65f6\u5019\u53bb\u53d1\u9001\u4fe1\u53f7\uff0c\u5728\u6709\u6570\u636e\u7684\u65f6\u5019 //\u53d1\u9001\u4fe1\u53f7 kill_fasync(&event->fasync, SIGIO, POLLIN);//read","title":"7 \u5f02\u6b65\u4fe1\u53f7"},{"location":"\u9a71\u52a8\u7b2c\u4e8c\u5929---\u4e2d\u65ad/#8","text":"\u4e2d\u65ad\u4e0a\u4e0b\u6587\u662f\u4ec0\u4e48\u6982\u5ff5\uff1f \u4e2d\u65ad\u4e0b\u534a\u90e8\u7684\u5b9e\u73b0\u7684\u65b9\u6cd5\u6709\u54ea\u4e9b\uff1f 1\uff0csoftirq :\u5904\u7406\u901f\u5ea6\u5feb\uff0c\u4f7f\u7528\u590d\u6742\uff0c\u9700\u8981\u4fee\u6539\u5185\u6838\u6e90\u7801\uff0c\u5bf9\u4e8e\u6211\u4eec\u7528\u6237\u6765\u8bf4\u5462\uff0c\u7528\u5f97\u6bd4\u8f83\u5c11\u4e5f\u4e0d\u63a8\u8350\u5927\u5bb6\u4f7f\u7528 2, tasklet \uff1a\u4f7f\u7528\u4e86sotfirq\u505a\u4e3a\u4e8c\u6b21\u5c01\u88c5\uff0c\u5904\u7406\u901f\u5ea6\u8f83\u5feb\uff0c\u4f46\u662f\u5b83\u5de5\u4f5c\u4e8e\u4e2d\u65ad\u4e0a\u4e0b\u6587\uff0c\u91cc\u9762\u4e0d\u80fd\u4f7f\u7528\u963b\u585e\u578b\u63a5\u53e3\uff0c\u5ef6\u65f6\u51fd\u6570 3, workqueue \uff1a\u5e76\u6ca1\u6709\u4f7f\u7528\u4e86sotfirq\u505a\u4e3a\u4e8c\u6b21\u5c01\u88c5\uff0c\u5904\u7406\u901f\u5ea6\u7a0d\u6162\uff0c\u5bf9\u4e8e\u7528\u6237\u6765\u8bf4\u65e0\u5f71\u54cd\uff0c\u7075\u6d3b\u4e4b\u5904\uff1a\u5de5\u4f5c\u5728\u8fdb\u7a0b\u4e0a\u4e0b\u6587\uff0c\u53ef\u4ee5\u4f7f\u7528\u963b\u585e\u578b\u51fd\u6570\uff0c\u4e5f\u53ef\u4ee5\u5ef6\u65f6\u3002\u3002\u3002 \u4e00\u3001tasklet\u7684\u4f7f\u7528\uff1a \u9996\u5148\u662f\uff0ctasklet \u7684\u6570\u636e\u7ed3\u6784\uff1a struct tasklet_struct { struct tasklet_struct *next; unsigned long state; atomic_t count; void (*func)(unsigned long); unsigned long data; }; void tasklet_init(struct tasklet_struct t, void ( func)(unsigned long), unsigned long data); tasklet_schedule(struct tasklet_struct *t); tasklet_kill(struct tasklet_struct *t);//\u91ca\u653e\u8d44\u6e90 \u4e8c\u3001\u5de5\u4f5c \u961f\u5217 workqueue\u7684\u5b9e\u73b0 struct work_struct { atomic_long_t data; struct list_head entry; work_func_t func; }; typedef void (*work_func_t)(struct work_struct *work); a\uff0c \u521d\u59cb\u5316 void work_irq_half(struct work_struct *work) { printk(\"-------%s-------------\\n\", __FUNCTION__); // \u8868\u793a\u6709\u6570\u636e,\u9700\u8981\u53bb\u5524\u9192\u6574\u4e2a\u8fdb\u7a0b/\u7b49\u5f85\u961f\u5217 wake_up_interruptible(&key_dev->wq_head); //\u540c\u65f6\u8bbe\u7f6e\u6807\u5fd7\u4f4d key_dev->key_state = 1; //\u53d1\u9001\u4fe1\u53f7 kill_fasync(&key_dev->faysnc, SIGIO, POLLIN); } struct work_struct mywork; INIT_WORK(struct work_struct *work, work_func_t func); b, \u5728\u4e0a\u534a\u90e8\u4e2d\u653e\u5165\u5230\u5185\u6838\u7ebf\u7a0b\u4e2d--\u542f\u52a8 schedule_work(&key_dev->mywork);","title":"8 \u4e2d\u65ad\u4e0b\u534a\u90e8"}]}